

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jul 19 03:52:44 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     	FNCALL	_main,_LCD_close
   568                           	FNCALL	_main,_LCD_goto
   569                           	FNCALL	_main,_LCD_init
   570                           	FNCALL	_main,_LCD_open
   571                           	FNCALL	_main,_LCD_write_string
   572                           	FNCALL	_LCD_write_string,__LCD_write_lower_nibble
   573                           	FNCALL	_LCD_write_string,__LCD_write_upper_nibble
   574                           	FNCALL	_LCD_init,_LCD_open
   575                           	FNCALL	_LCD_init,_LCD_write_byte
   576                           	FNCALL	_LCD_goto,_LCD_write_byte
   577                           	FNCALL	_LCD_write_byte,__LCD_write_lower_nibble
   578                           	FNCALL	_LCD_write_byte,__LCD_write_upper_nibble
   579                           	FNCALL	__LCD_write_upper_nibble,__LCD_build_byte
   580                           	FNCALL	__LCD_write_lower_nibble,__LCD_build_byte
   581                           	FNROOT	_main
   582                           	global	_LCD_BL_Status
   583                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   584                           global __pidataBANK0
   585                           __pidataBANK0:
   586  03FD                     	file	"./LCD_I2C.h"
   587                           	line	81
   588                           
   589                           ;initializer for _LCD_BL_Status
   590                           	retlw	01h
   591  03FD  3401               	global	_pin_BL
   592                           	global	_pin_D7
   593                           	global	_pin_D6
   594                           	global	_pin_D5
   595                           	global	_pin_D4
   596                           	global	_pin_RS
   597                           	global	_pin_RW
   598                           	global	_pin_E
   599                           	global	_SSPBUF
   600                           _SSPBUF	set	0x13
   601  0013                     	global	_SSPCON
   602                           _SSPCON	set	0x14
   603  0014                     	global	_PORTD
   604                           _PORTD	set	0x8
   605  0008                     	global	_PORTBbits
   606                           _PORTBbits	set	0x6
   607  0006                     	global	_SSPSTATbits
   608                           _SSPSTATbits	set	0x94
   609  0094                     	global	_SSPCON2bits
   610                           _SSPCON2bits	set	0x91
   611  0091                     	global	_SSPSTAT
   612                           _SSPSTAT	set	0x94
   613  0094                     	global	_SSPADD
   614                           _SSPADD	set	0x93
   615  0093                     	global	_SSPCON2
   616                           _SSPCON2	set	0x91
   617  0091                     	global	_TRISD
   618                           _TRISD	set	0x88
   619  0088                     	global	_OPTION_REGbits
   620                           _OPTION_REGbits	set	0x81
   621  0081                     	global	_TRISB
   622                           _TRISB	set	0x86
   623  0086                     	global	_ACKEN
   624                           _ACKEN	set	0x48C
   625  048C                     	global	_ACKDT
   626                           _ACKDT	set	0x48D
   627  048D                     	global	_RCEN
   628                           _RCEN	set	0x48B
   629  048B                     	global	_PEN
   630                           _PEN	set	0x48A
   631  048A                     	global	_RSEN
   632                           _RSEN	set	0x489
   633  0489                     	global	_SEN
   634                           _SEN	set	0x488
   635  0488                     	global	_TRISC4
   636                           _TRISC4	set	0x43C
   637  043C                     	global	_TRISC3
   638                           _TRISC3	set	0x43B
   639  043B                     psect	strings,class=STRING,delta=2,noexec
   640                           global __pstrings
   641                           __pstrings:
   642  0003                     stringtab:
   643  0003                     	global    __stringtab
   644                           __stringtab:
   645  0003                     ;	String table - string pointers are 1 byte each
   646                           stringcode:stringdir:
   647  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   648  0003  3000               movwf pclath
   649  0004  008A               movf fsr,w
   650  0005  0804               incf fsr
   651  0006  0A84               	addwf pc
   652  0007  0782               	global __stringbase
   653                           __stringbase:
   654  0008                     	retlw	0
   655  0008  3400               psect	strings
   656                           	global    __end_of__stringtab
   657                           __end_of__stringtab:
   658  0009                     	
   659                           STR_1:	
   660  0009                     	retlw	42	;'*'
   661  0009  342A               	retlw	42	;'*'
   662  000A  342A               	retlw	32	;' '
   663  000B  3420               	retlw	76	;'L'
   664  000C  344C               	retlw	67	;'C'
   665  000D  3443               	retlw	68	;'D'
   666  000E  3444               	retlw	32	;' '
   667  000F  3420               	retlw	116	;'t'
   668  0010  3474               	retlw	101	;'e'
   669  0011  3465               	retlw	115	;'s'
   670  0012  3473               	retlw	116	;'t'
   671  0013  3474               	retlw	32	;' '
   672  0014  3420               	retlw	42	;'*'
   673  0015  342A               	retlw	42	;'*'
   674  0016  342A               	retlw	0
   675  0017  3400               psect	strings
   676                           	
   677                           STR_2:	
   678  0018                     	retlw	32	;' '
   679  0018  3420               	retlw	0
   680  0019  3400               psect	strings
   681                           ; #config settings
   682                           global __CFG_FOSC$XT
   683                           __CFG_FOSC$XT equ 0x0
   684  0000                     global __CFG_WDTE$OFF
   685                           __CFG_WDTE$OFF equ 0x0
   686  0000                     global __CFG_PWRTE$OFF
   687                           __CFG_PWRTE$OFF equ 0x0
   688  0000                     global __CFG_BOREN$OFF
   689                           __CFG_BOREN$OFF equ 0x0
   690  0000                     global __CFG_LVP$OFF
   691                           __CFG_LVP$OFF equ 0x0
   692  0000                     global __CFG_CPD$OFF
   693                           __CFG_CPD$OFF equ 0x0
   694  0000                     global __CFG_WRT$OFF
   695                           __CFG_WRT$OFF equ 0x0
   696  0000                     global __CFG_CP$OFF
   697                           __CFG_CP$OFF equ 0x0
   698  0000                     	file	"C:\Users\sabdulqa\AppData\Local\Temp\semo."
   699                           	line	#
   700                           psect cinit,class=CODE,delta=2
   701                           global start_initialization
   702                           start_initialization:
   703  07EE                     
   704                           global __initialization
   705                           __initialization:
   706  07EE                     psect	bssBANK0,class=BANK0,space=1,noexec
   707                           global __pbssBANK0
   708                           __pbssBANK0:
   709  0020                     _pin_BL:
   710  0020                            ds      1
   711  0020                     
   712                           _pin_D7:
   713  0021                            ds      1
   714  0021                     
   715                           _pin_D6:
   716  0022                            ds      1
   717  0022                     
   718                           _pin_D5:
   719  0023                            ds      1
   720  0023                     
   721                           _pin_D4:
   722  0024                            ds      1
   723  0024                     
   724                           _pin_RS:
   725  0025                            ds      1
   726  0025                     
   727                           _pin_RW:
   728  0026                            ds      1
   729  0026                     
   730                           _pin_E:
   731  0027                            ds      1
   732  0027                     
   733                           psect	dataBANK0,class=BANK0,space=1,noexec
   734                           global __pdataBANK0
   735                           __pdataBANK0:
   736  002B                     	file	"./LCD_I2C.h"
   737                           	line	81
   738                           _LCD_BL_Status:
   739  002B                            ds      1
   740  002B                     
   741                           	file	"C:\Users\sabdulqa\AppData\Local\Temp\semo."
   742                           	line	#
   743                           ; Initialize objects allocated to BANK0
   744                           	global __pidataBANK0
   745                           psect cinit,class=CODE,delta=2,merge=1
   746                           	fcall	__pidataBANK0+0		;fetch initializer
   747  07EE  120A  118A  23FD  120A  118A  	movwf	__pdataBANK0+0&07fh		
   748  07F3  00AB               	line	#
   749                           ; Clear objects allocated to BANK0
   750                           psect cinit,class=CODE,delta=2,merge=1
   751                           	clrf	((__pbssBANK0)+0)&07Fh
   752  07F4  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   753  07F5  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   754  07F6  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   755  07F7  01A3               	clrf	((__pbssBANK0)+4)&07Fh
   756  07F8  01A4               	clrf	((__pbssBANK0)+5)&07Fh
   757  07F9  01A5               	clrf	((__pbssBANK0)+6)&07Fh
   758  07FA  01A6               	clrf	((__pbssBANK0)+7)&07Fh
   759  07FB  01A7               psect cinit,class=CODE,delta=2,merge=1
   760                           global end_of_initialization,__end_of__initialization
   761                           
   762                           ;End of C runtime variable initialization code
   763                           
   764                           end_of_initialization:
   765  07FC                     __end_of__initialization:
   766  07FC                     clrf status
   767  07FC  0183               ljmp _main	;jump to C main() function
   768  07FD  120A  118A  2F1C   psect	cstackCOMMON,class=COMMON,space=1,noexec
   769                           global __pcstackCOMMON
   770                           __pcstackCOMMON:
   771  0070                     ?_LCD_open:	; 1 bytes @ 0x0
   772  0070                     ??_LCD_open:	; 1 bytes @ 0x0
   773  0070                     ?_LCD_init:	; 1 bytes @ 0x0
   774  0070                     ?_LCD_write_string:	; 1 bytes @ 0x0
   775  0070                     ?_LCD_close:	; 1 bytes @ 0x0
   776  0070                     ??_LCD_close:	; 1 bytes @ 0x0
   777  0070                     ?__LCD_write_upper_nibble:	; 1 bytes @ 0x0
   778  0070                     ?__LCD_write_lower_nibble:	; 1 bytes @ 0x0
   779  0070                     ?__LCD_build_byte:	; 1 bytes @ 0x0
   780  0070                     ??__LCD_build_byte:	; 1 bytes @ 0x0
   781  0070                     ?_main:	; 1 bytes @ 0x0
   782  0070                     	ds	2
   783  0070                     	global	__LCD_build_byte@ret
   784                           __LCD_build_byte@ret:	; 1 bytes @ 0x2
   785  0072                     	ds	1
   786  0072                     ??__LCD_write_upper_nibble:	; 1 bytes @ 0x3
   787  0073                     ??__LCD_write_lower_nibble:	; 1 bytes @ 0x3
   788  0073                     	global	__LCD_write_upper_nibble@u
   789                           __LCD_write_upper_nibble@u:	; 1 bytes @ 0x3
   790  0073                     	global	__LCD_write_lower_nibble@l
   791                           __LCD_write_lower_nibble@l:	; 1 bytes @ 0x3
   792  0073                     	ds	1
   793  0073                     ??_LCD_write_string:	; 1 bytes @ 0x4
   794  0074                     ?_LCD_write_byte:	; 1 bytes @ 0x4
   795  0074                     	global	LCD_write_byte@n
   796                           LCD_write_byte@n:	; 1 bytes @ 0x4
   797  0074                     	ds	1
   798  0074                     ??_LCD_write_byte:	; 1 bytes @ 0x5
   799  0075                     	global	LCD_write_string@str
   800                           LCD_write_string@str:	; 1 bytes @ 0x5
   801  0075                     	ds	1
   802  0075                     	global	LCD_write_byte@address
   803                           LCD_write_byte@address:	; 1 bytes @ 0x6
   804  0076                     	ds	1
   805  0076                     ??_LCD_init:	; 1 bytes @ 0x7
   806  0077                     ?_LCD_goto:	; 1 bytes @ 0x7
   807  0077                     	global	LCD_goto@y
   808                           LCD_goto@y:	; 1 bytes @ 0x7
   809  0077                     	ds	1
   810  0077                     ??_LCD_goto:	; 1 bytes @ 0x8
   811  0078                     	ds	2
   812  0078                     	global	LCD_goto@x
   813                           LCD_goto@x:	; 1 bytes @ 0xA
   814  007A                     	ds	1
   815  007A                     	global	LCD_goto@address
   816                           LCD_goto@address:	; 1 bytes @ 0xB
   817  007B                     	ds	1
   818  007B                     	global	main@m
   819                           main@m:	; 1 bytes @ 0xC
   820  007C                     	ds	1
   821  007C                     	global	main@portValue
   822                           main@portValue:	; 1 bytes @ 0xD
   823  007D                     	ds	1
   824  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   825                           global __pcstackBANK0
   826                           __pcstackBANK0:
   827  0028                     ??_main:	; 1 bytes @ 0x0
   828  0028                     	ds	3
   829  0028                     ;!
   830                           ;!Data Sizes:
   831                           ;!    Strings     17
   832                           ;!    Constant    0
   833                           ;!    Data        1
   834                           ;!    BSS         8
   835                           ;!    Persistent  0
   836                           ;!    Stack       0
   837                           ;!
   838                           ;!Auto Spaces:
   839                           ;!    Space          Size  Autos    Used
   840                           ;!    COMMON           14     14      14
   841                           ;!    BANK0            80      3      12
   842                           ;!    BANK1            80      0       0
   843                           ;!    BANK3            96      0       0
   844                           ;!    BANK2            96      0       0
   845                           
   846                           ;!
   847                           ;!Pointer List with Targets:
   848                           ;!
   849                           ;!    LCD_write_string@str	PTR const unsigned char  size(1) Largest target is 15
   850                           ;!		 -> STR_2(CODE[2]), STR_1(CODE[15]), 
   851                           ;!
   852                           
   853                           
   854                           ;!
   855                           ;!Critical Paths under _main in COMMON
   856                           ;!
   857                           ;!    _main->_LCD_goto
   858                           ;!    _LCD_write_string->__LCD_write_lower_nibble
   859                           ;!    _LCD_write_string->__LCD_write_upper_nibble
   860                           ;!    _LCD_init->_LCD_write_byte
   861                           ;!    _LCD_goto->_LCD_write_byte
   862                           ;!    _LCD_write_byte->__LCD_write_lower_nibble
   863                           ;!    _LCD_write_byte->__LCD_write_upper_nibble
   864                           ;!    __LCD_write_upper_nibble->__LCD_build_byte
   865                           ;!    __LCD_write_lower_nibble->__LCD_build_byte
   866                           ;!
   867                           ;!Critical Paths under _main in BANK0
   868                           ;!
   869                           ;!    None.
   870                           ;!
   871                           ;!Critical Paths under _main in BANK1
   872                           ;!
   873                           ;!    None.
   874                           ;!
   875                           ;!Critical Paths under _main in BANK3
   876                           ;!
   877                           ;!    None.
   878                           ;!
   879                           ;!Critical Paths under _main in BANK2
   880                           ;!
   881                           ;!    None.
   882                           
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   885 ;;
   886                           
   887                           ;!
   888                           ;!Call Graph Tables:
   889                           ;!
   890                           ;! ---------------------------------------------------------------------------------
   891                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   892                           ;! ---------------------------------------------------------------------------------
   893                           ;! (0) _main                                                 5     5      0    3265
   894                           ;!                                             12 COMMON     2     2      0
   895                           ;!                                              0 BANK0      3     3      0
   896                           ;!                          _LCD_close
   897                           ;!                           _LCD_goto
   898                           ;!                           _LCD_init
   899                           ;!                           _LCD_open
   900                           ;!                   _LCD_write_string
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (1) _LCD_write_string                                     2     2      0     371
   903                           ;!                                              4 COMMON     2     2      0
   904                           ;!            __LCD_write_lower_nibble
   905                           ;!            __LCD_write_upper_nibble
   906                           ;! ---------------------------------------------------------------------------------
   907                           ;! (1) _LCD_init                                             2     2      0    1216
   908                           ;!                                              7 COMMON     2     2      0
   909                           ;!                           _LCD_open
   910                           ;!                     _LCD_write_byte
   911                           ;! ---------------------------------------------------------------------------------
   912                           ;! (1) _LCD_open                                             1     1      0       0
   913                           ;!                                              0 COMMON     1     1      0
   914                           ;! ---------------------------------------------------------------------------------
   915                           ;! (1) _LCD_goto                                             5     4      1    1516
   916                           ;!                                              7 COMMON     5     4      1
   917                           ;!                     _LCD_write_byte
   918                           ;! ---------------------------------------------------------------------------------
   919                           ;! (2) _LCD_write_byte                                       3     2      1    1216
   920                           ;!                                              4 COMMON     3     2      1
   921                           ;!            __LCD_write_lower_nibble
   922                           ;!            __LCD_write_upper_nibble
   923                           ;! ---------------------------------------------------------------------------------
   924                           ;! (2) __LCD_write_upper_nibble                              1     1      0     119
   925                           ;!                                              3 COMMON     1     1      0
   926                           ;!                    __LCD_build_byte
   927                           ;! ---------------------------------------------------------------------------------
   928                           ;! (2) __LCD_write_lower_nibble                              1     1      0     119
   929                           ;!                                              3 COMMON     1     1      0
   930                           ;!                    __LCD_build_byte
   931                           ;! ---------------------------------------------------------------------------------
   932                           ;! (3) __LCD_build_byte                                      3     3      0      31
   933                           ;!                                              0 COMMON     3     3      0
   934                           ;! ---------------------------------------------------------------------------------
   935                           ;! (1) _LCD_close                                            1     1      0       0
   936                           ;!                                              0 COMMON     1     1      0
   937                           ;! ---------------------------------------------------------------------------------
   938                           ;! Estimated maximum stack depth 3
   939                           ;! ---------------------------------------------------------------------------------
   940                           ;!
   941                           ;! Call Graph Graphs:
   942                           ;!
   943                           ;! _main (ROOT)
   944                           ;!   _LCD_close
   945                           ;!   _LCD_goto
   946                           ;!     _LCD_write_byte
   947                           ;!       __LCD_write_lower_nibble
   948                           ;!         __LCD_build_byte
   949                           ;!       __LCD_write_upper_nibble
   950                           ;!         __LCD_build_byte
   951                           ;!   _LCD_init
   952                           ;!     _LCD_open
   953                           ;!     _LCD_write_byte
   954                           ;!       __LCD_write_lower_nibble
   955                           ;!         __LCD_build_byte
   956                           ;!       __LCD_write_upper_nibble
   957                           ;!         __LCD_build_byte
   958                           ;!   _LCD_open
   959                           ;!   _LCD_write_string
   960                           ;!     __LCD_write_lower_nibble
   961                           ;!       __LCD_build_byte
   962                           ;!     __LCD_write_upper_nibble
   963                           ;!       __LCD_build_byte
   964                           ;!
   965                           
   966                           ;! Address spaces:
   967                           
   968                           ;!Name               Size   Autos  Total    Cost      Usage
   969                           ;!BANK3               60      0       0       9        0.0%
   970                           ;!BITBANK3            60      0       0       8        0.0%
   971                           ;!SFR3                 0      0       0       4        0.0%
   972                           ;!BITSFR3              0      0       0       4        0.0%
   973                           ;!BANK2               60      0       0      11        0.0%
   974                           ;!BITBANK2            60      0       0      10        0.0%
   975                           ;!SFR2                 0      0       0       5        0.0%
   976                           ;!BITSFR2              0      0       0       5        0.0%
   977                           ;!BANK1               50      0       0       7        0.0%
   978                           ;!BITBANK1            50      0       0       6        0.0%
   979                           ;!SFR1                 0      0       0       2        0.0%
   980                           ;!BITSFR1              0      0       0       2        0.0%
   981                           ;!BANK0               50      3       C       5       15.0%
   982                           ;!BITBANK0            50      0       0       4        0.0%
   983                           ;!SFR0                 0      0       0       1        0.0%
   984                           ;!BITSFR0              0      0       0       1        0.0%
   985                           ;!COMMON               E      E       E       1      100.0%
   986                           ;!BITCOMMON            E      0       0       0        0.0%
   987                           ;!CODE                 0      0       0       0        0.0%
   988                           ;!DATA                 0      0      1A      12        0.0%
   989                           ;!ABS                  0      0      1A       3        0.0%
   990                           ;!NULL                 0      0       0       0        0.0%
   991                           ;!STACK                0      0       0       2        0.0%
   992                           ;!EEDATA             100      0       0       0        0.0%
   993                           
   994                           	global	_main
   995                           
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 64 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  portValue       1   13[COMMON] unsigned char 
  1003 ;;  m               1   12[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : B00/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         2       0       0       0       0
  1015 ;;      Temps:          0       3       0       0       0
  1016 ;;      Totals:         2       3       0       0       0
  1017 ;;Total ram usage:        5 bytes
  1018 ;; Hardware stack levels required when called:    4
  1019 ;; This function calls:
  1020 ;;		_LCD_close
  1021 ;;		_LCD_goto
  1022 ;;		_LCD_init
  1023 ;;		_LCD_open
  1024 ;;		_LCD_write_string
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1030                           	file	"main.c"
  1031                           	line	64
  1032                           global __pmaintext
  1033                           __pmaintext:	;psect for function _main
  1034  071C                     psect	maintext
  1035                           	file	"main.c"
  1036                           	line	64
  1037                           	global	__size_of_main
  1038                           	__size_of_main	equ	__end_of_main-_main
  1039  00D2                     	
  1040                           _main:	
  1041  071C                     ;incstack = 0
  1042                           	opt	stack 4
  1043                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1044                           	line	72
  1045                           	
  1046                           l1381:	
  1047  071C                     ;main.c: 65:     unsigned char portValue,m;;main.c: 72:     TRISB = 0x0f;
  1048                           	movlw	low(0Fh)
  1049  071C  300F               	bsf	status, 5	;RP0=1, select bank1
  1050  071D  1683               	bcf	status, 6	;RP1=0, select bank1
  1051  071E  1303               	movwf	(134)^080h	;volatile
  1052  071F  0086               	line	73
  1053                           	
  1054                           l1383:	
  1055  0720                     ;main.c: 73:     OPTION_REGbits.nRBPU =0;
  1056                           	bcf	(129)^080h,7	;volatile
  1057  0720  1381               	line	76
  1058                           	
  1059                           l1385:	
  1060  0721                     ;main.c: 76:     TRISD = 0x0;
  1061                           	clrf	(136)^080h	;volatile
  1062  0721  0188               	line	78
  1063                           ;main.c: 78:     while(1) {
  1064                           	
  1065                           l49:	
  1066  0722                     	line	82
  1067                           ;main.c: 82:         m = PORTBbits.RB0;
  1068                           	movlw	0
  1069  0722  3000               	bcf	status, 5	;RP0=0, select bank0
  1070  0723  1283               	bcf	status, 6	;RP1=0, select bank0
  1071  0724  1303               	btfsc	(6),0	;volatile
  1072  0725  1806               	movlw	1
  1073  0726  3001               	movwf	(main@m)
  1074  0727  00FC               	line	83
  1075                           	
  1076                           l1387:	
  1077  0728                     ;main.c: 83:         if(m == 0)
  1078                           	movf	((main@m)),w
  1079  0728  087C               	btfss	status,2
  1080  0729  1D03               	goto	u911
  1081  072A  2F2C               	goto	u910
  1082  072B  2F2D               u911:
  1083  072C                     	goto	l1391
  1084  072C  2F58               u910:
  1085  072D                     	line	85
  1086                           	
  1087                           l1389:	
  1088  072D                     ;main.c: 84:         {;main.c: 85:         portValue = 0x55;
  1089                           	movlw	low(055h)
  1090  072D  3055               	movwf	(??_main+0)+0
  1091  072E  00A8               	movf	(??_main+0)+0,w
  1092  072F  0828               	movwf	(main@portValue)
  1093  0730  00FD               	line	86
  1094                           ;main.c: 86:         PORTD = portValue;
  1095                           	movf	(main@portValue),w
  1096  0731  087D               	movwf	(8)	;volatile
  1097  0732  0088               	line	88
  1098                           ;main.c: 88:         _delay(250000);
  1099                           	opt asmopt_push
  1100                           opt asmopt_off
  1101                           movlw  2
  1102  0733  3002               	bcf	status, 5	;RP0=0, select bank0
  1103  0734  1283               	bcf	status, 6	;RP1=0, select bank0
  1104  0735  1303               movwf	((??_main+0)+0+2),f
  1105  0736  00AA               movlw	69
  1106  0737  3045               movwf	((??_main+0)+0+1),f
  1107  0738  00A9               	movlw	169
  1108  0739  30A9               movwf	((??_main+0)+0),f
  1109  073A  00A8               	u957:
  1110  073B                     decfsz	((??_main+0)+0),f
  1111  073B  0BA8               	goto	u957
  1112  073C  2F3B               	decfsz	((??_main+0)+0+1),f
  1113  073D  0BA9               	goto	u957
  1114  073E  2F3B               	decfsz	((??_main+0)+0+2),f
  1115  073F  0BAA               	goto	u957
  1116  0740  2F3B               opt asmopt_pop
  1117                           
  1118                           	line	90
  1119                           ;main.c: 90:         portValue = 0xaa;
  1120                           	movlw	low(0AAh)
  1121  0741  30AA               	bcf	status, 5	;RP0=0, select bank0
  1122  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  1123  0743  1303               	movwf	(??_main+0)+0
  1124  0744  00A8               	movf	(??_main+0)+0,w
  1125  0745  0828               	movwf	(main@portValue)
  1126  0746  00FD               	line	91
  1127                           ;main.c: 91:         PORTD = portValue;
  1128                           	movf	(main@portValue),w
  1129  0747  087D               	movwf	(8)	;volatile
  1130  0748  0088               	line	93
  1131                           ;main.c: 93:         _delay(250000);
  1132                           	opt asmopt_push
  1133                           opt asmopt_off
  1134                           movlw  2
  1135  0749  3002               	bcf	status, 5	;RP0=0, select bank0
  1136  074A  1283               	bcf	status, 6	;RP1=0, select bank0
  1137  074B  1303               movwf	((??_main+0)+0+2),f
  1138  074C  00AA               movlw	69
  1139  074D  3045               movwf	((??_main+0)+0+1),f
  1140  074E  00A9               	movlw	169
  1141  074F  30A9               movwf	((??_main+0)+0),f
  1142  0750  00A8               	u967:
  1143  0751                     decfsz	((??_main+0)+0),f
  1144  0751  0BA8               	goto	u967
  1145  0752  2F51               	decfsz	((??_main+0)+0+1),f
  1146  0753  0BA9               	goto	u967
  1147  0754  2F51               	decfsz	((??_main+0)+0+2),f
  1148  0755  0BAA               	goto	u967
  1149  0756  2F51               opt asmopt_pop
  1150                           
  1151                           	goto	l1391
  1152  0757  2F58               	line	97
  1153                           ;main.c: 97:         }
  1154                           	
  1155                           l50:	
  1156  0758                     	line	98
  1157                           	
  1158                           l1391:	
  1159  0758                     ;main.c: 98:         m = PORTBbits.RB1;
  1160                           	movlw	0
  1161  0758  3000               	bcf	status, 5	;RP0=0, select bank0
  1162  0759  1283               	bcf	status, 6	;RP1=0, select bank0
  1163  075A  1303               	btfsc	(6),1	;volatile
  1164  075B  1886               	movlw	1
  1165  075C  3001               	movwf	(main@m)
  1166  075D  00FC               	line	99
  1167                           	
  1168                           l1393:	
  1169  075E                     ;main.c: 99:         if(m == 0)
  1170                           	movf	((main@m)),w
  1171  075E  087C               	btfss	status,2
  1172  075F  1D03               	goto	u921
  1173  0760  2F62               	goto	u920
  1174  0761  2F63               u921:
  1175  0762                     	goto	l1397
  1176  0762  2F8E               u920:
  1177  0763                     	line	101
  1178                           	
  1179                           l1395:	
  1180  0763                     ;main.c: 100:         {;main.c: 101:         portValue = 0x0f;
  1181                           	movlw	low(0Fh)
  1182  0763  300F               	movwf	(??_main+0)+0
  1183  0764  00A8               	movf	(??_main+0)+0,w
  1184  0765  0828               	movwf	(main@portValue)
  1185  0766  00FD               	line	102
  1186                           ;main.c: 102:         PORTD = portValue;
  1187                           	movf	(main@portValue),w
  1188  0767  087D               	movwf	(8)	;volatile
  1189  0768  0088               	line	104
  1190                           ;main.c: 104:         _delay(250000);
  1191                           	opt asmopt_push
  1192                           opt asmopt_off
  1193                           movlw  2
  1194  0769  3002               	bcf	status, 5	;RP0=0, select bank0
  1195  076A  1283               	bcf	status, 6	;RP1=0, select bank0
  1196  076B  1303               movwf	((??_main+0)+0+2),f
  1197  076C  00AA               movlw	69
  1198  076D  3045               movwf	((??_main+0)+0+1),f
  1199  076E  00A9               	movlw	169
  1200  076F  30A9               movwf	((??_main+0)+0),f
  1201  0770  00A8               	u977:
  1202  0771                     decfsz	((??_main+0)+0),f
  1203  0771  0BA8               	goto	u977
  1204  0772  2F71               	decfsz	((??_main+0)+0+1),f
  1205  0773  0BA9               	goto	u977
  1206  0774  2F71               	decfsz	((??_main+0)+0+2),f
  1207  0775  0BAA               	goto	u977
  1208  0776  2F71               opt asmopt_pop
  1209                           
  1210                           	line	106
  1211                           ;main.c: 106:         portValue = 0xf0;
  1212                           	movlw	low(0F0h)
  1213  0777  30F0               	bcf	status, 5	;RP0=0, select bank0
  1214  0778  1283               	bcf	status, 6	;RP1=0, select bank0
  1215  0779  1303               	movwf	(??_main+0)+0
  1216  077A  00A8               	movf	(??_main+0)+0,w
  1217  077B  0828               	movwf	(main@portValue)
  1218  077C  00FD               	line	107
  1219                           ;main.c: 107:         PORTD = portValue;
  1220                           	movf	(main@portValue),w
  1221  077D  087D               	movwf	(8)	;volatile
  1222  077E  0088               	line	109
  1223                           ;main.c: 109:         _delay(250000);
  1224                           	opt asmopt_push
  1225                           opt asmopt_off
  1226                           movlw  2
  1227  077F  3002               	bcf	status, 5	;RP0=0, select bank0
  1228  0780  1283               	bcf	status, 6	;RP1=0, select bank0
  1229  0781  1303               movwf	((??_main+0)+0+2),f
  1230  0782  00AA               movlw	69
  1231  0783  3045               movwf	((??_main+0)+0+1),f
  1232  0784  00A9               	movlw	169
  1233  0785  30A9               movwf	((??_main+0)+0),f
  1234  0786  00A8               	u987:
  1235  0787                     decfsz	((??_main+0)+0),f
  1236  0787  0BA8               	goto	u987
  1237  0788  2F87               	decfsz	((??_main+0)+0+1),f
  1238  0789  0BA9               	goto	u987
  1239  078A  2F87               	decfsz	((??_main+0)+0+2),f
  1240  078B  0BAA               	goto	u987
  1241  078C  2F87               opt asmopt_pop
  1242                           
  1243                           	goto	l1397
  1244  078D  2F8E               	line	113
  1245                           ;main.c: 113:         }
  1246                           	
  1247                           l51:	
  1248  078E                     	line	121
  1249                           	
  1250                           l1397:	
  1251  078E                     ;main.c: 121:         TRISC3 = 1;
  1252                           	bsf	status, 5	;RP0=1, select bank1
  1253  078E  1683               	bcf	status, 6	;RP1=0, select bank1
  1254  078F  1303               	bsf	(1083/8)^080h,(1083)&7	;volatile
  1255  0790  1587               	line	122
  1256                           	
  1257                           l1399:	
  1258  0791                     ;main.c: 122:     TRISC4 = 1;
  1259                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1260  0791  1607               	goto	l1401
  1261  0792  2F93               	line	126
  1262                           ;main.c: 126:     while(1) {
  1263                           	
  1264                           l52:	
  1265  0793                     	line	127
  1266                           	
  1267                           l1401:	
  1268  0793                     ;main.c: 127:     LCD_open();
  1269                           	fcall	_LCD_open
  1270  0793  120A  118A  24A9  120A  118A  	line	128
  1271                           	
  1272                           l1403:	
  1273  0798                     ;main.c: 128:     LCD_init();
  1274                           	fcall	_LCD_init
  1275  0798  120A  118A  2678  120A  118A  	line	130
  1276                           	
  1277                           l1405:	
  1278  079D                     ;main.c: 130:     LCD_goto(1,1);
  1279                           	clrf	(LCD_goto@y)
  1280  079D  01F7               	incf	(LCD_goto@y),f
  1281  079E  0AF7               	movlw	low(01h)
  1282  079F  3001               	fcall	_LCD_goto
  1283  07A0  120A  118A  246C  120A  118A  	line	131
  1284                           	
  1285                           l1407:	
  1286  07A5                     ;main.c: 131:     LCD_write_string("** LCD test **");
  1287                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1288  07A5  3001               	fcall	_LCD_write_string
  1289  07A6  120A  118A  2435  120A  118A  	line	132
  1290                           	
  1291                           l1409:	
  1292  07AB                     ;main.c: 132:     LCD_close();
  1293                           	fcall	_LCD_close
  1294  07AB  120A  118A  23FE  120A  118A  	line	133
  1295                           	
  1296                           l1411:	
  1297  07B0                     ;main.c: 133:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1298                           	opt asmopt_push
  1299                           opt asmopt_off
  1300                           movlw  6
  1301  07B0  3006               	bcf	status, 5	;RP0=0, select bank0
  1302  07B1  1283               	bcf	status, 6	;RP1=0, select bank0
  1303  07B2  1303               movwf	((??_main+0)+0+2),f
  1304  07B3  00AA               movlw	19
  1305  07B4  3013               movwf	((??_main+0)+0+1),f
  1306  07B5  00A9               	movlw	173
  1307  07B6  30AD               movwf	((??_main+0)+0),f
  1308  07B7  00A8               	u997:
  1309  07B8                     decfsz	((??_main+0)+0),f
  1310  07B8  0BA8               	goto	u997
  1311  07B9  2FB8               	decfsz	((??_main+0)+0+1),f
  1312  07BA  0BA9               	goto	u997
  1313  07BB  2FB8               	decfsz	((??_main+0)+0+2),f
  1314  07BC  0BAA               	goto	u997
  1315  07BD  2FB8               opt asmopt_pop
  1316                           
  1317                           	line	134
  1318                           	
  1319                           l1413:	
  1320  07BE                     ;main.c: 134:      portValue = 0x0f;
  1321                           	movlw	low(0Fh)
  1322  07BE  300F               	bcf	status, 5	;RP0=0, select bank0
  1323  07BF  1283               	bcf	status, 6	;RP1=0, select bank0
  1324  07C0  1303               	movwf	(??_main+0)+0
  1325  07C1  00A8               	movf	(??_main+0)+0,w
  1326  07C2  0828               	movwf	(main@portValue)
  1327  07C3  00FD               	line	135
  1328                           	
  1329                           l1415:	
  1330  07C4                     ;main.c: 135:         PORTD = 0x1;
  1331                           	movlw	low(01h)
  1332  07C4  3001               	movwf	(8)	;volatile
  1333  07C5  0088               	line	137
  1334                           	
  1335                           l1417:	
  1336  07C6                     ;main.c: 137:         _delay(250000);
  1337                           	opt asmopt_push
  1338                           opt asmopt_off
  1339                           movlw  2
  1340  07C6  3002               	bcf	status, 5	;RP0=0, select bank0
  1341  07C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1342  07C8  1303               movwf	((??_main+0)+0+2),f
  1343  07C9  00AA               movlw	69
  1344  07CA  3045               movwf	((??_main+0)+0+1),f
  1345  07CB  00A9               	movlw	169
  1346  07CC  30A9               movwf	((??_main+0)+0),f
  1347  07CD  00A8               	u1007:
  1348  07CE                     decfsz	((??_main+0)+0),f
  1349  07CE  0BA8               	goto	u1007
  1350  07CF  2FCE               	decfsz	((??_main+0)+0+1),f
  1351  07D0  0BA9               	goto	u1007
  1352  07D1  2FCE               	decfsz	((??_main+0)+0+2),f
  1353  07D2  0BAA               	goto	u1007
  1354  07D3  2FCE               opt asmopt_pop
  1355                           
  1356                           	line	139
  1357                           	
  1358                           l1419:	
  1359  07D4                     ;main.c: 139:         portValue = 0x0;
  1360                           	clrf	(main@portValue)
  1361  07D4  01FD               	line	140
  1362                           	
  1363                           l1421:	
  1364  07D5                     ;main.c: 140:         PORTD = portValue;
  1365                           	movf	(main@portValue),w
  1366  07D5  087D               	bcf	status, 5	;RP0=0, select bank0
  1367  07D6  1283               	bcf	status, 6	;RP1=0, select bank0
  1368  07D7  1303               	movwf	(8)	;volatile
  1369  07D8  0088               	line	142
  1370                           	
  1371                           l1423:	
  1372  07D9                     ;main.c: 142:         _delay(250000);
  1373                           	opt asmopt_push
  1374                           opt asmopt_off
  1375                           movlw  2
  1376  07D9  3002               	bcf	status, 5	;RP0=0, select bank0
  1377  07DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1378  07DB  1303               movwf	((??_main+0)+0+2),f
  1379  07DC  00AA               movlw	69
  1380  07DD  3045               movwf	((??_main+0)+0+1),f
  1381  07DE  00A9               	movlw	169
  1382  07DF  30A9               movwf	((??_main+0)+0),f
  1383  07E0  00A8               	u1017:
  1384  07E1                     decfsz	((??_main+0)+0),f
  1385  07E1  0BA8               	goto	u1017
  1386  07E2  2FE1               	decfsz	((??_main+0)+0+1),f
  1387  07E3  0BA9               	goto	u1017
  1388  07E4  2FE1               	decfsz	((??_main+0)+0+2),f
  1389  07E5  0BAA               	goto	u1017
  1390  07E6  2FE1               opt asmopt_pop
  1391                           
  1392                           	goto	l1401
  1393  07E7  2F93               	line	144
  1394                           ;main.c: 144:     }
  1395                           	
  1396                           l53:	
  1397  07E8                     	goto	l1401
  1398  07E8  2F93               	
  1399                           l54:	
  1400  07E9                     	goto	l49
  1401  07E9  2F22               	line	145
  1402                           ;main.c: 145:     }
  1403                           	
  1404                           l55:	
  1405  07EA                     	goto	l49
  1406  07EA  2F22               	
  1407                           l56:	
  1408  07EB                     	line	148
  1409                           ;main.c: 147:     return;
  1410                           	
  1411                           l57:	
  1412  07EB                     	global	start
  1413                           	ljmp	start
  1414  07EB  120A  118A  2800   	opt stack 0
  1415                           GLOBAL	__end_of_main
  1416                           	__end_of_main:
  1417  07EE                     	signat	_main,89
  1418                           	global	_LCD_write_string
  1419                           
  1420 ;; *************** function _LCD_write_string *****************
  1421 ;; Defined at:
  1422 ;;		line 95 in file "LCD_I2C.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  str             1    wreg     PTR const unsigned char 
  1425 ;;		 -> STR_2(2), STR_1(15), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  str             1    5[COMMON] PTR const unsigned char 
  1428 ;;		 -> STR_2(2), STR_1(15), 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0
  1441 ;;      Totals:         2       0       0       0       0
  1442 ;;Total ram usage:        2 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		__LCD_write_lower_nibble
  1447 ;;		__LCD_write_upper_nibble
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;;		_LCD_clear_line
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1454                           	file	"LCD_I2C.c"
  1455                           	line	95
  1456                           global __ptext1
  1457                           __ptext1:	;psect for function _LCD_write_string
  1458  0435                     psect	text1
  1459                           	file	"LCD_I2C.c"
  1460                           	line	95
  1461                           	global	__size_of_LCD_write_string
  1462                           	__size_of_LCD_write_string	equ	__end_of_LCD_write_string-_LCD_write_string
  1463  0037                     	
  1464                           _LCD_write_string:	
  1465  0435                     ;incstack = 0
  1466                           	opt	stack 5
  1467                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1468                           ;LCD_write_string@str stored from wreg
  1469                           	movwf	(LCD_write_string@str)
  1470  0435  00F5               	line	98
  1471                           	
  1472                           l1369:	
  1473  0436                     ;LCD_I2C.c: 95: void LCD_write_string(const char *str);LCD_I2C.c: 96: {;LCD_I2C.c: 98:  
                                   pin_RS = 1;
  1474                           	bcf	status, 5	;RP0=0, select bank0
  1475  0436  1283               	bcf	status, 6	;RP1=0, select bank0
  1476  0437  1303               	clrf	(_pin_RS)
  1477  0438  01A5               	incf	(_pin_RS),f
  1478  0439  0AA5               	line	99
  1479                           	
  1480                           l1371:	
  1481  043A                     ;LCD_I2C.c: 99:    pin_RW = 0;
  1482                           	clrf	(_pin_RW)
  1483  043A  01A6               	line	100
  1484                           ;LCD_I2C.c: 100:    pin_E = 0;
  1485                           	clrf	(_pin_E)
  1486  043B  01A7               	line	101
  1487                           	
  1488                           l1373:	
  1489  043C                     ;LCD_I2C.c: 101:    pin_BL = LCD_BL_Status;
  1490                           	movf	(_LCD_BL_Status),w
  1491  043C  082B               	movwf	(??_LCD_write_string+0)+0
  1492  043D  00F4               	movf	(??_LCD_write_string+0)+0,w
  1493  043E  0874               	movwf	(_pin_BL)
  1494  043F  00A0               	line	103
  1495                           ;LCD_I2C.c: 103:    while (*str)
  1496                           	goto	l1379
  1497  0440  2C5E               	
  1498                           l198:	
  1499  0441                     	line	106
  1500                           	
  1501                           l1375:	
  1502  0441                     ;LCD_I2C.c: 104:    {;LCD_I2C.c: 106:         _LCD_write_upper_nibble(*str);
  1503                           	movf	(LCD_write_string@str),w
  1504  0441  0875               	movwf	fsr0
  1505  0442  0084               	fcall	stringdir
  1506  0443  120A  118A  2003  120A  118A  	fcall	__LCD_write_upper_nibble
  1507  0448  120A  118A  25EB  120A  118A  	line	109
  1508                           ;LCD_I2C.c: 109:         _LCD_write_lower_nibble(*str);
  1509                           	movf	(LCD_write_string@str),w
  1510  044D  0875               	movwf	fsr0
  1511  044E  0084               	fcall	stringdir
  1512  044F  120A  118A  2003  120A  118A  	fcall	__LCD_write_lower_nibble
  1513  0454  120A  118A  255E  120A  118A  	line	111
  1514                           	
  1515                           l1377:	
  1516  0459                     ;LCD_I2C.c: 111:         str++;
  1517                           	movlw	low(01h)
  1518  0459  3001               	movwf	(??_LCD_write_string+0)+0
  1519  045A  00F4               	movf	(??_LCD_write_string+0)+0,w
  1520  045B  0874               	addwf	(LCD_write_string@str),f
  1521  045C  07F5               	goto	l1379
  1522  045D  2C5E               	line	112
  1523                           ;LCD_I2C.c: 112:    }
  1524                           	
  1525                           l197:	
  1526  045E                     	line	103
  1527                           	
  1528                           l1379:	
  1529  045E                     ;LCD_I2C.c: 103:    while (*str)
  1530                           	movf	(LCD_write_string@str),w
  1531  045E  0875               	movwf	fsr0
  1532  045F  0084               	fcall	stringdir
  1533  0460  120A  118A  2003  120A  118A  	xorlw	0
  1534  0465  3A00               	skipz
  1535  0466  1D03               	goto	u901
  1536  0467  2C69               	goto	u900
  1537  0468  2C6A               u901:
  1538  0469                     	goto	l1375
  1539  0469  2C41               u900:
  1540  046A                     	goto	l200
  1541  046A  2C6B               	
  1542                           l199:	
  1543  046B                     	line	113
  1544                           	
  1545                           l200:	
  1546  046B                     	return
  1547  046B  0008               	opt stack 0
  1548                           GLOBAL	__end_of_LCD_write_string
  1549                           	__end_of_LCD_write_string:
  1550  046C                     	signat	_LCD_write_string,4217
  1551                           	global	_LCD_init
  1552                           
  1553 ;; *************** function _LCD_init *****************
  1554 ;; Defined at:
  1555 ;;		line 32 in file "LCD_I2C.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;		None
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         0       0       0       0       0
  1570 ;;      Locals:         0       0       0       0       0
  1571 ;;      Temps:          2       0       0       0       0
  1572 ;;      Totals:         2       0       0       0       0
  1573 ;;Total ram usage:        2 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    3
  1576 ;; This function calls:
  1577 ;;		_LCD_open
  1578 ;;		_LCD_write_byte
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1584                           	line	32
  1585                           global __ptext2
  1586                           __ptext2:	;psect for function _LCD_init
  1587  0678                     psect	text2
  1588                           	file	"LCD_I2C.c"
  1589                           	line	32
  1590                           	global	__size_of_LCD_init
  1591                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  1592  00A4                     	
  1593                           _LCD_init:	
  1594  0678                     ;incstack = 0
  1595                           	opt	stack 4
  1596                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1597                           	line	34
  1598                           	
  1599                           l1319:	
  1600  0678                     ;LCD_I2C.c: 34:     LCD_open();
  1601                           	fcall	_LCD_open
  1602  0678  120A  118A  24A9  120A  118A  	line	37
  1603                           ;LCD_I2C.c: 37:     LCD_write_byte(0x00, 0x1f);
  1604                           	movlw	low(01Fh)
  1605  067D  301F               	movwf	(??_LCD_init+0)+0
  1606  067E  00F7               	movf	(??_LCD_init+0)+0,w
  1607  067F  0877               	movwf	(LCD_write_byte@n)
  1608  0680  00F4               	movlw	low(0)
  1609  0681  3000               	fcall	_LCD_write_byte
  1610  0682  120A  118A  2414  120A  118A  	line	38
  1611                           	
  1612                           l1321:	
  1613  0687                     ;LCD_I2C.c: 38:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1614                           	opt asmopt_push
  1615                           opt asmopt_off
  1616                           movlw	7
  1617  0687  3007               movwf	((??_LCD_init+0)+0+1),f
  1618  0688  00F8               	movlw	125
  1619  0689  307D               movwf	((??_LCD_init+0)+0),f
  1620  068A  00F7               	u1027:
  1621  068B                     decfsz	((??_LCD_init+0)+0),f
  1622  068B  0BF7               	goto	u1027
  1623  068C  2E8B               	decfsz	((??_LCD_init+0)+0+1),f
  1624  068D  0BF8               	goto	u1027
  1625  068E  2E8B               opt asmopt_pop
  1626                           
  1627                           	line	39
  1628                           	
  1629                           l1323:	
  1630  068F                     ;LCD_I2C.c: 39:     LCD_write_byte(0x00, 0x03);
  1631                           	movlw	low(03h)
  1632  068F  3003               	movwf	(??_LCD_init+0)+0
  1633  0690  00F7               	movf	(??_LCD_init+0)+0,w
  1634  0691  0877               	movwf	(LCD_write_byte@n)
  1635  0692  00F4               	movlw	low(0)
  1636  0693  3000               	fcall	_LCD_write_byte
  1637  0694  120A  118A  2414  120A  118A  	line	40
  1638                           ;LCD_I2C.c: 40:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1639                           	opt asmopt_push
  1640                           opt asmopt_off
  1641                           movlw	7
  1642  0699  3007               movwf	((??_LCD_init+0)+0+1),f
  1643  069A  00F8               	movlw	125
  1644  069B  307D               movwf	((??_LCD_init+0)+0),f
  1645  069C  00F7               	u1037:
  1646  069D                     decfsz	((??_LCD_init+0)+0),f
  1647  069D  0BF7               	goto	u1037
  1648  069E  2E9D               	decfsz	((??_LCD_init+0)+0+1),f
  1649  069F  0BF8               	goto	u1037
  1650  06A0  2E9D               opt asmopt_pop
  1651                           
  1652                           	line	41
  1653                           	
  1654                           l1325:	
  1655  06A1                     ;LCD_I2C.c: 41:     LCD_write_byte(0x00, 0x03);
  1656                           	movlw	low(03h)
  1657  06A1  3003               	movwf	(??_LCD_init+0)+0
  1658  06A2  00F7               	movf	(??_LCD_init+0)+0,w
  1659  06A3  0877               	movwf	(LCD_write_byte@n)
  1660  06A4  00F4               	movlw	low(0)
  1661  06A5  3000               	fcall	_LCD_write_byte
  1662  06A6  120A  118A  2414  120A  118A  	line	42
  1663                           	
  1664                           l1327:	
  1665  06AB                     ;LCD_I2C.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1666                           	opt asmopt_push
  1667                           opt asmopt_off
  1668                           movlw	7
  1669  06AB  3007               movwf	((??_LCD_init+0)+0+1),f
  1670  06AC  00F8               	movlw	125
  1671  06AD  307D               movwf	((??_LCD_init+0)+0),f
  1672  06AE  00F7               	u1047:
  1673  06AF                     decfsz	((??_LCD_init+0)+0),f
  1674  06AF  0BF7               	goto	u1047
  1675  06B0  2EAF               	decfsz	((??_LCD_init+0)+0+1),f
  1676  06B1  0BF8               	goto	u1047
  1677  06B2  2EAF               opt asmopt_pop
  1678                           
  1679                           	line	43
  1680                           ;LCD_I2C.c: 43:     LCD_write_byte(0x00, 0x02);
  1681                           	movlw	low(02h)
  1682  06B3  3002               	movwf	(??_LCD_init+0)+0
  1683  06B4  00F7               	movf	(??_LCD_init+0)+0,w
  1684  06B5  0877               	movwf	(LCD_write_byte@n)
  1685  06B6  00F4               	movlw	low(0)
  1686  06B7  3000               	fcall	_LCD_write_byte
  1687  06B8  120A  118A  2414  120A  118A  	line	44
  1688                           	
  1689                           l1329:	
  1690  06BD                     ;LCD_I2C.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1691                           	opt asmopt_push
  1692                           opt asmopt_off
  1693                           movlw	7
  1694  06BD  3007               movwf	((??_LCD_init+0)+0+1),f
  1695  06BE  00F8               	movlw	125
  1696  06BF  307D               movwf	((??_LCD_init+0)+0),f
  1697  06C0  00F7               	u1057:
  1698  06C1                     decfsz	((??_LCD_init+0)+0),f
  1699  06C1  0BF7               	goto	u1057
  1700  06C2  2EC1               	decfsz	((??_LCD_init+0)+0+1),f
  1701  06C3  0BF8               	goto	u1057
  1702  06C4  2EC1               opt asmopt_pop
  1703                           
  1704                           	line	45
  1705                           	
  1706                           l1331:	
  1707  06C5                     ;LCD_I2C.c: 45:     LCD_write_byte(0x00, 0x02);
  1708                           	movlw	low(02h)
  1709  06C5  3002               	movwf	(??_LCD_init+0)+0
  1710  06C6  00F7               	movf	(??_LCD_init+0)+0,w
  1711  06C7  0877               	movwf	(LCD_write_byte@n)
  1712  06C8  00F4               	movlw	low(0)
  1713  06C9  3000               	fcall	_LCD_write_byte
  1714  06CA  120A  118A  2414  120A  118A  	line	46
  1715                           ;LCD_I2C.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1716                           	opt asmopt_push
  1717                           opt asmopt_off
  1718                           movlw	7
  1719  06CF  3007               movwf	((??_LCD_init+0)+0+1),f
  1720  06D0  00F8               	movlw	125
  1721  06D1  307D               movwf	((??_LCD_init+0)+0),f
  1722  06D2  00F7               	u1067:
  1723  06D3                     decfsz	((??_LCD_init+0)+0),f
  1724  06D3  0BF7               	goto	u1067
  1725  06D4  2ED3               	decfsz	((??_LCD_init+0)+0+1),f
  1726  06D5  0BF8               	goto	u1067
  1727  06D6  2ED3               opt asmopt_pop
  1728                           
  1729                           	line	47
  1730                           	
  1731                           l1333:	
  1732  06D7                     ;LCD_I2C.c: 47:     LCD_write_byte(0x00, 0x01);
  1733                           	clrf	(LCD_write_byte@n)
  1734  06D7  01F4               	incf	(LCD_write_byte@n),f
  1735  06D8  0AF4               	movlw	low(0)
  1736  06D9  3000               	fcall	_LCD_write_byte
  1737  06DA  120A  118A  2414  120A  118A  	line	48
  1738                           	
  1739                           l1335:	
  1740  06DF                     ;LCD_I2C.c: 48:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1741                           	opt asmopt_push
  1742                           opt asmopt_off
  1743                           movlw	7
  1744  06DF  3007               movwf	((??_LCD_init+0)+0+1),f
  1745  06E0  00F8               	movlw	125
  1746  06E1  307D               movwf	((??_LCD_init+0)+0),f
  1747  06E2  00F7               	u1077:
  1748  06E3                     decfsz	((??_LCD_init+0)+0),f
  1749  06E3  0BF7               	goto	u1077
  1750  06E4  2EE3               	decfsz	((??_LCD_init+0)+0+1),f
  1751  06E5  0BF8               	goto	u1077
  1752  06E6  2EE3               opt asmopt_pop
  1753                           
  1754                           	line	49
  1755                           ;LCD_I2C.c: 49:     LCD_write_byte(0x00, 0x0C);
  1756                           	movlw	low(0Ch)
  1757  06E7  300C               	movwf	(??_LCD_init+0)+0
  1758  06E8  00F7               	movf	(??_LCD_init+0)+0,w
  1759  06E9  0877               	movwf	(LCD_write_byte@n)
  1760  06EA  00F4               	movlw	low(0)
  1761  06EB  3000               	fcall	_LCD_write_byte
  1762  06EC  120A  118A  2414  120A  118A  	line	50
  1763                           	
  1764                           l1337:	
  1765  06F1                     ;LCD_I2C.c: 50:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1766                           	opt asmopt_push
  1767                           opt asmopt_off
  1768                           movlw	7
  1769  06F1  3007               movwf	((??_LCD_init+0)+0+1),f
  1770  06F2  00F8               	movlw	125
  1771  06F3  307D               movwf	((??_LCD_init+0)+0),f
  1772  06F4  00F7               	u1087:
  1773  06F5                     decfsz	((??_LCD_init+0)+0),f
  1774  06F5  0BF7               	goto	u1087
  1775  06F6  2EF5               	decfsz	((??_LCD_init+0)+0+1),f
  1776  06F7  0BF8               	goto	u1087
  1777  06F8  2EF5               opt asmopt_pop
  1778                           
  1779                           	line	51
  1780                           	
  1781                           l1339:	
  1782  06F9                     ;LCD_I2C.c: 51:     LCD_write_byte(0x00, 0x01);
  1783                           	clrf	(LCD_write_byte@n)
  1784  06F9  01F4               	incf	(LCD_write_byte@n),f
  1785  06FA  0AF4               	movlw	low(0)
  1786  06FB  3000               	fcall	_LCD_write_byte
  1787  06FC  120A  118A  2414  120A  118A  	line	52
  1788                           ;LCD_I2C.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1789                           	opt asmopt_push
  1790                           opt asmopt_off
  1791                           movlw	7
  1792  0701  3007               movwf	((??_LCD_init+0)+0+1),f
  1793  0702  00F8               	movlw	125
  1794  0703  307D               movwf	((??_LCD_init+0)+0),f
  1795  0704  00F7               	u1097:
  1796  0705                     decfsz	((??_LCD_init+0)+0),f
  1797  0705  0BF7               	goto	u1097
  1798  0706  2F05               	decfsz	((??_LCD_init+0)+0+1),f
  1799  0707  0BF8               	goto	u1097
  1800  0708  2F05               opt asmopt_pop
  1801                           
  1802                           	line	53
  1803                           	
  1804                           l1341:	
  1805  0709                     ;LCD_I2C.c: 53:     LCD_write_byte(0x00, 0x06);
  1806                           	movlw	low(06h)
  1807  0709  3006               	movwf	(??_LCD_init+0)+0
  1808  070A  00F7               	movf	(??_LCD_init+0)+0,w
  1809  070B  0877               	movwf	(LCD_write_byte@n)
  1810  070C  00F4               	movlw	low(0)
  1811  070D  3000               	fcall	_LCD_write_byte
  1812  070E  120A  118A  2414  120A  118A  	line	54
  1813                           	
  1814                           l1343:	
  1815  0713                     ;LCD_I2C.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1816                           	opt asmopt_push
  1817                           opt asmopt_off
  1818                           movlw	7
  1819  0713  3007               movwf	((??_LCD_init+0)+0+1),f
  1820  0714  00F8               	movlw	125
  1821  0715  307D               movwf	((??_LCD_init+0)+0),f
  1822  0716  00F7               	u1107:
  1823  0717                     decfsz	((??_LCD_init+0)+0),f
  1824  0717  0BF7               	goto	u1107
  1825  0718  2F17               	decfsz	((??_LCD_init+0)+0+1),f
  1826  0719  0BF8               	goto	u1107
  1827  071A  2F17               opt asmopt_pop
  1828                           
  1829                           	line	56
  1830                           	
  1831                           l181:	
  1832  071B                     	return
  1833  071B  0008               	opt stack 0
  1834                           GLOBAL	__end_of_LCD_init
  1835                           	__end_of_LCD_init:
  1836  071C                     	signat	_LCD_init,89
  1837                           	global	_LCD_open
  1838                           
  1839 ;; *************** function _LCD_open *****************
  1840 ;; Defined at:
  1841 ;;		line 15 in file "LCD_I2C.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1855 ;;      Params:         0       0       0       0       0
  1856 ;;      Locals:         0       0       0       0       0
  1857 ;;      Temps:          1       0       0       0       0
  1858 ;;      Totals:         1       0       0       0       0
  1859 ;;Total ram usage:        1 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;;		_LCD_init
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1869                           	line	15
  1870                           global __ptext3
  1871                           __ptext3:	;psect for function _LCD_open
  1872  04A9                     psect	text3
  1873                           	file	"LCD_I2C.c"
  1874                           	line	15
  1875                           	global	__size_of_LCD_open
  1876                           	__size_of_LCD_open	equ	__end_of_LCD_open-_LCD_open
  1877  0057                     	
  1878                           _LCD_open:	
  1879  04A9                     ;incstack = 0
  1880                           	opt	stack 7
  1881                           ; Regs used in _LCD_open: [wreg+status,2+status,0]
  1882                           	line	17
  1883                           	
  1884                           l957:	
  1885  04A9                     ;LCD_I2C.c: 17:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1886                           	goto	l959
  1887  04A9  2CAB               	
  1888                           l153:	
  1889  04AA                     	goto	l959
  1890  04AA  2CAB               	
  1891                           l152:	
  1892  04AB                     	
  1893                           l959:	
  1894  04AB                     	bsf	status, 5	;RP0=1, select bank1
  1895  04AB  1683               	bcf	status, 6	;RP1=0, select bank1
  1896  04AC  1303               	movf	(145)^080h,w	;volatile
  1897  04AD  0811               	andlw	01Fh
  1898  04AE  391F               	btfss	status,2
  1899  04AF  1D03               	goto	u331
  1900  04B0  2CB2               	goto	u330
  1901  04B1  2CB3               u331:
  1902  04B2                     	goto	l959
  1903  04B2  2CAB               u330:
  1904  04B3                     	
  1905                           l961:	
  1906  04B3                     	btfsc	(148)^080h,(2)&7	;volatile
  1907  04B3  1914               	goto	u341
  1908  04B4  2CB6               	goto	u340
  1909  04B5  2CB7               u341:
  1910  04B6                     	goto	l959
  1911  04B6  2CAB               u340:
  1912  04B7                     	goto	l963
  1913  04B7  2CB8               	
  1914                           l154:	
  1915  04B8                     	line	18
  1916                           	
  1917                           l963:	
  1918  04B8                     ;LCD_I2C.c: 18:     SSPCON |= 0b00101000;
  1919                           	movlw	low(028h)
  1920  04B8  3028               	movwf	(??_LCD_open+0)+0
  1921  04B9  00F0               	movf	(??_LCD_open+0)+0,w
  1922  04BA  0870               	bcf	status, 5	;RP0=0, select bank0
  1923  04BB  1283               	bcf	status, 6	;RP1=0, select bank0
  1924  04BC  1303               	iorwf	(20),f	;volatile
  1925  04BD  0494               	line	19
  1926                           ;LCD_I2C.c: 19:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1927                           	goto	l965
  1928  04BE  2CC0               	
  1929                           l156:	
  1930  04BF                     	goto	l965
  1931  04BF  2CC0               	
  1932                           l155:	
  1933  04C0                     	
  1934                           l965:	
  1935  04C0                     	bsf	status, 5	;RP0=1, select bank1
  1936  04C0  1683               	bcf	status, 6	;RP1=0, select bank1
  1937  04C1  1303               	movf	(145)^080h,w	;volatile
  1938  04C2  0811               	andlw	01Fh
  1939  04C3  391F               	btfss	status,2
  1940  04C4  1D03               	goto	u351
  1941  04C5  2CC7               	goto	u350
  1942  04C6  2CC8               u351:
  1943  04C7                     	goto	l965
  1944  04C7  2CC0               u350:
  1945  04C8                     	
  1946                           l967:	
  1947  04C8                     	btfsc	(148)^080h,(2)&7	;volatile
  1948  04C8  1914               	goto	u361
  1949  04C9  2CCB               	goto	u360
  1950  04CA  2CCC               u361:
  1951  04CB                     	goto	l965
  1952  04CB  2CC0               u360:
  1953  04CC                     	
  1954                           l157:	
  1955  04CC                     	line	20
  1956                           ;LCD_I2C.c: 20:     SSPCON2bits.SEN = 1;
  1957                           	bsf	(145)^080h,0	;volatile
  1958  04CC  1411               	line	21
  1959                           ;LCD_I2C.c: 21:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1960                           	goto	l969
  1961  04CD  2CCF               	
  1962                           l159:	
  1963  04CE                     	goto	l969
  1964  04CE  2CCF               	
  1965                           l158:	
  1966  04CF                     	
  1967                           l969:	
  1968  04CF                     	movf	(145)^080h,w	;volatile
  1969  04CF  0811               	andlw	01Fh
  1970  04D0  391F               	btfss	status,2
  1971  04D1  1D03               	goto	u371
  1972  04D2  2CD4               	goto	u370
  1973  04D3  2CD5               u371:
  1974  04D4                     	goto	l969
  1975  04D4  2CCF               u370:
  1976  04D5                     	
  1977                           l971:	
  1978  04D5                     	btfsc	(148)^080h,(2)&7	;volatile
  1979  04D5  1914               	goto	u381
  1980  04D6  2CD8               	goto	u380
  1981  04D7  2CD9               u381:
  1982  04D8                     	goto	l969
  1983  04D8  2CCF               u380:
  1984  04D9                     	goto	l973
  1985  04D9  2CDC               	
  1986                           l160:	
  1987  04DA                     	line	22
  1988                           ;LCD_I2C.c: 22:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=(unsigned char)
                                 0x4E; while( SSPSTATbits.BF );
  1989                           	goto	l973
  1990  04DA  2CDC               	
  1991                           l162:	
  1992  04DB                     	goto	l973
  1993  04DB  2CDC               	
  1994                           l161:	
  1995  04DC                     	
  1996                           l973:	
  1997  04DC                     	movf	(145)^080h,w	;volatile
  1998  04DC  0811               	andlw	01Fh
  1999  04DD  391F               	btfss	status,2
  2000  04DE  1D03               	goto	u391
  2001  04DF  2CE1               	goto	u390
  2002  04E0  2CE2               u391:
  2003  04E1                     	goto	l973
  2004  04E1  2CDC               u390:
  2005  04E2                     	
  2006                           l975:	
  2007  04E2                     	btfsc	(148)^080h,(2)&7	;volatile
  2008  04E2  1914               	goto	u401
  2009  04E3  2CE5               	goto	u400
  2010  04E4  2CE6               u401:
  2011  04E5                     	goto	l973
  2012  04E5  2CDC               u400:
  2013  04E6                     	goto	l977
  2014  04E6  2CE7               	
  2015                           l163:	
  2016  04E7                     	
  2017                           l977:	
  2018  04E7                     	movlw	low(04Eh)
  2019  04E7  304E               	bcf	status, 5	;RP0=0, select bank0
  2020  04E8  1283               	bcf	status, 6	;RP1=0, select bank0
  2021  04E9  1303               	movwf	(19)	;volatile
  2022  04EA  0093               	goto	l164
  2023  04EB  2CEC               	
  2024                           l165:	
  2025  04EC                     	
  2026                           l164:	
  2027  04EC                     	bsf	status, 5	;RP0=1, select bank1
  2028  04EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2029  04ED  1303               	btfsc	(148)^080h,0	;volatile
  2030  04EE  1814               	goto	u411
  2031  04EF  2CF1               	goto	u410
  2032  04F0  2CF2               u411:
  2033  04F1                     	goto	l164
  2034  04F1  2CEC               u410:
  2035  04F2                     	
  2036                           l166:	
  2037  04F2                     	line	23
  2038                           ;LCD_I2C.c: 23:     SSPCON2bits.ACKDT=0; SSPCON2bits.ACKEN=1; while(RCEN && SSPCON2bits.
                                 ACKEN);
  2039                           	bcf	(145)^080h,5	;volatile
  2040  04F2  1291               	bsf	(145)^080h,4	;volatile
  2041  04F3  1611               	goto	l167
  2042  04F4  2CF5               	
  2043                           l168:	
  2044  04F5                     	
  2045                           l167:	
  2046  04F5                     	btfss	(1163/8)^080h,(1163)&7	;volatile
  2047  04F5  1D91               	goto	u421
  2048  04F6  2CF8               	goto	u420
  2049  04F7  2CF9               u421:
  2050  04F8                     	goto	l172
  2051  04F8  2CFF               u420:
  2052  04F9                     	
  2053                           l979:	
  2054  04F9                     	btfsc	(145)^080h,4	;volatile
  2055  04F9  1A11               	goto	u431
  2056  04FA  2CFC               	goto	u430
  2057  04FB  2CFD               u431:
  2058  04FC                     	goto	l167
  2059  04FC  2CF5               u430:
  2060  04FD                     	goto	l172
  2061  04FD  2CFF               	
  2062                           l170:	
  2063  04FE                     	goto	l172
  2064  04FE  2CFF               	
  2065                           l171:	
  2066  04FF                     	line	24
  2067                           	
  2068                           l172:	
  2069  04FF                     	return
  2070  04FF  0008               	opt stack 0
  2071                           GLOBAL	__end_of_LCD_open
  2072                           	__end_of_LCD_open:
  2073  0500                     	signat	_LCD_open,89
  2074                           	global	_LCD_goto
  2075                           
  2076 ;; *************** function _LCD_goto *****************
  2077 ;; Defined at:
  2078 ;;		line 64 in file "LCD_I2C.c"
  2079 ;; Parameters:    Size  Location     Type
  2080 ;;  x               1    wreg     unsigned char 
  2081 ;;  y               1    7[COMMON] unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  x               1   10[COMMON] unsigned char 
  2084 ;;  address         1   11[COMMON] unsigned char 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         1       0       0       0       0
  2095 ;;      Locals:         2       0       0       0       0
  2096 ;;      Temps:          2       0       0       0       0
  2097 ;;      Totals:         5       0       0       0       0
  2098 ;;Total ram usage:        5 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    3
  2101 ;; This function calls:
  2102 ;;		_LCD_write_byte
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;;		_LCD_clear_line
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2109                           	line	64
  2110                           global __ptext4
  2111                           __ptext4:	;psect for function _LCD_goto
  2112  046C                     psect	text4
  2113                           	file	"LCD_I2C.c"
  2114                           	line	64
  2115                           	global	__size_of_LCD_goto
  2116                           	__size_of_LCD_goto	equ	__end_of_LCD_goto-_LCD_goto
  2117  003D                     	
  2118                           _LCD_goto:	
  2119  046C                     ;incstack = 0
  2120                           	opt	stack 4
  2121                           ; Regs used in _LCD_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2122                           ;LCD_goto@x stored from wreg
  2123                           	movwf	(LCD_goto@x)
  2124  046C  00FA               	line	68
  2125                           	
  2126                           l1345:	
  2127  046D                     ;LCD_I2C.c: 64: void LCD_goto(unsigned char x, unsigned char y);LCD_I2C.c: 65: {;LCD_I2C
                                 .c: 66: unsigned char address;;LCD_I2C.c: 68:    switch(y)
  2128                           	goto	l1359
  2129  046D  2C82               	line	70
  2130                           ;LCD_I2C.c: 69:      {;LCD_I2C.c: 70:       case 1:
  2131                           	
  2132                           l188:	
  2133  046E                     	line	71
  2134                           	
  2135                           l1347:	
  2136  046E                     ;LCD_I2C.c: 71:         address = 0x00;
  2137                           	clrf	(LCD_goto@address)
  2138  046E  01FB               	line	72
  2139                           ;LCD_I2C.c: 72:         break;
  2140                           	goto	l1361
  2141  046F  2C98               	line	74
  2142                           ;LCD_I2C.c: 74:       case 2:
  2143                           	
  2144                           l190:	
  2145  0470                     	line	75
  2146                           	
  2147                           l1349:	
  2148  0470                     ;LCD_I2C.c: 75:         address = 0x40;
  2149                           	movlw	low(040h)
  2150  0470  3040               	movwf	(??_LCD_goto+0)+0
  2151  0471  00F8               	movf	(??_LCD_goto+0)+0,w
  2152  0472  0878               	movwf	(LCD_goto@address)
  2153  0473  00FB               	line	76
  2154                           ;LCD_I2C.c: 76:         break;
  2155                           	goto	l1361
  2156  0474  2C98               	line	78
  2157                           ;LCD_I2C.c: 78:       case 3:
  2158                           	
  2159                           l191:	
  2160  0475                     	line	79
  2161                           	
  2162                           l1351:	
  2163  0475                     ;LCD_I2C.c: 79:         address = 0x14;
  2164                           	movlw	low(014h)
  2165  0475  3014               	movwf	(??_LCD_goto+0)+0
  2166  0476  00F8               	movf	(??_LCD_goto+0)+0,w
  2167  0477  0878               	movwf	(LCD_goto@address)
  2168  0478  00FB               	line	80
  2169                           ;LCD_I2C.c: 80:         break;
  2170                           	goto	l1361
  2171  0479  2C98               	line	82
  2172                           ;LCD_I2C.c: 82:       case 4:
  2173                           	
  2174                           l192:	
  2175  047A                     	line	83
  2176                           	
  2177                           l1353:	
  2178  047A                     ;LCD_I2C.c: 83:         address = 0x54;
  2179                           	movlw	low(054h)
  2180  047A  3054               	movwf	(??_LCD_goto+0)+0
  2181  047B  00F8               	movf	(??_LCD_goto+0)+0,w
  2182  047C  0878               	movwf	(LCD_goto@address)
  2183  047D  00FB               	line	84
  2184                           ;LCD_I2C.c: 84:         break;
  2185                           	goto	l1361
  2186  047E  2C98               	line	86
  2187                           ;LCD_I2C.c: 86:       default:
  2188                           	
  2189                           l193:	
  2190  047F                     	line	87
  2191                           	
  2192                           l1355:	
  2193  047F                     ;LCD_I2C.c: 87:         address = 0x00;
  2194                           	clrf	(LCD_goto@address)
  2195  047F  01FB               	line	88
  2196                           ;LCD_I2C.c: 88:         break;
  2197                           	goto	l1361
  2198  0480  2C98               	line	89
  2199                           	
  2200                           l1357:	
  2201  0481                     ;LCD_I2C.c: 89:      }
  2202                           	goto	l1361
  2203  0481  2C98               	
  2204                           l187:	
  2205  0482                     	
  2206                           l1359:	
  2207  0482                     	movf	(LCD_goto@y),w
  2208  0482  0877               	movwf	(??_LCD_goto+0)+0
  2209  0483  00F8               	clrf	(??_LCD_goto+0)+0+1
  2210  0484  01F9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2211                           ; Switch size 1, requested type "space"
  2212                           ; Number of cases is 1, Range of values is 0 to 0
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ; direct_byte           11     8 (fixed)
  2217                           ; jumptable            260     6 (fixed)
  2218                           ;	Chosen strategy is simple_byte
  2219                           
  2220                           	movf 1+(??_LCD_goto+0)+0,w
  2221  0485  0879               	opt asmopt_push
  2222                           	opt asmopt_off
  2223                           	xorlw	0^0	; case 0
  2224  0486  3A00               	skipnz
  2225  0487  1903               	goto	l1469
  2226  0488  2C8A               	goto	l1355
  2227  0489  2C7F               	opt asmopt_pop
  2228                           	
  2229                           l1469:	
  2230  048A                     ; Switch size 1, requested type "space"
  2231                           ; Number of cases is 4, Range of values is 1 to 4
  2232                           ; switch strategies available:
  2233                           ; Name         Instructions Cycles
  2234                           ; simple_byte           13     7 (average)
  2235                           ; direct_byte           23    11 (fixed)
  2236                           ; jumptable            263     9 (fixed)
  2237                           ;	Chosen strategy is simple_byte
  2238                           
  2239                           	movf 0+(??_LCD_goto+0)+0,w
  2240  048A  0878               	opt asmopt_push
  2241                           	opt asmopt_off
  2242                           	xorlw	1^0	; case 1
  2243  048B  3A01               	skipnz
  2244  048C  1903               	goto	l1347
  2245  048D  2C6E               	xorlw	2^1	; case 2
  2246  048E  3A03               	skipnz
  2247  048F  1903               	goto	l1349
  2248  0490  2C70               	xorlw	3^2	; case 3
  2249  0491  3A01               	skipnz
  2250  0492  1903               	goto	l1351
  2251  0493  2C75               	xorlw	4^3	; case 4
  2252  0494  3A07               	skipnz
  2253  0495  1903               	goto	l1353
  2254  0496  2C7A               	goto	l1355
  2255  0497  2C7F               	opt asmopt_pop
  2256                           
  2257                           	
  2258                           l189:	
  2259  0498                     	line	91
  2260                           	
  2261                           l1361:	
  2262  0498                     ;LCD_I2C.c: 91:    address += x-1;
  2263                           	movf	(LCD_goto@x),w
  2264  0498  087A               	addlw	0FFh
  2265  0499  3EFF               	movwf	(??_LCD_goto+0)+0
  2266  049A  00F8               	movf	(??_LCD_goto+0)+0,w
  2267  049B  0878               	addwf	(LCD_goto@address),f
  2268  049C  07FB               	line	92
  2269                           	
  2270                           l1363:	
  2271  049D                     ;LCD_I2C.c: 92:    LCD_write_byte(0, 0x80 | address);
  2272                           	movf	(LCD_goto@address),w
  2273  049D  087B               	iorlw	080h
  2274  049E  3880               	movwf	(??_LCD_goto+0)+0
  2275  049F  00F8               	movf	(??_LCD_goto+0)+0,w
  2276  04A0  0878               	movwf	(LCD_write_byte@n)
  2277  04A1  00F4               	movlw	low(0)
  2278  04A2  3000               	fcall	_LCD_write_byte
  2279  04A3  120A  118A  2414  120A  118A  	line	93
  2280                           	
  2281                           l194:	
  2282  04A8                     	return
  2283  04A8  0008               	opt stack 0
  2284                           GLOBAL	__end_of_LCD_goto
  2285                           	__end_of_LCD_goto:
  2286  04A9                     	signat	_LCD_goto,8313
  2287                           	global	_LCD_write_byte
  2288                           
  2289 ;; *************** function _LCD_write_byte *****************
  2290 ;; Defined at:
  2291 ;;		line 114 in file "LCD_I2C.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  address         1    wreg     unsigned char 
  2294 ;;  n               1    4[COMMON] unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  address         1    6[COMMON] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         1       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0
  2308 ;;      Temps:          1       0       0       0       0
  2309 ;;      Totals:         3       0       0       0       0
  2310 ;;Total ram usage:        3 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    2
  2313 ;; This function calls:
  2314 ;;		__LCD_write_lower_nibble
  2315 ;;		__LCD_write_upper_nibble
  2316 ;; This function is called by:
  2317 ;;		_LCD_init
  2318 ;;		_LCD_goto
  2319 ;;		_LCD_BL
  2320 ;;		_LCD_clear
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2324                           	line	114
  2325                           global __ptext5
  2326                           __ptext5:	;psect for function _LCD_write_byte
  2327  0414                     psect	text5
  2328                           	file	"LCD_I2C.c"
  2329                           	line	114
  2330                           	global	__size_of_LCD_write_byte
  2331                           	__size_of_LCD_write_byte	equ	__end_of_LCD_write_byte-_LCD_write_byte
  2332  0021                     	
  2333                           _LCD_write_byte:	
  2334  0414                     ;incstack = 0
  2335                           	opt	stack 4
  2336                           ; Regs used in _LCD_write_byte: [wreg+status,2+status,0+pclath+cstack]
  2337                           ;LCD_write_byte@address stored from wreg
  2338                           	movwf	(LCD_write_byte@address)
  2339  0414  00F6               	line	116
  2340                           	
  2341                           l1307:	
  2342  0415                     ;LCD_I2C.c: 114: void LCD_write_byte(unsigned char address, unsigned char n);LCD_I2C.c: 
                                 115: {;LCD_I2C.c: 116:     if (address)
  2343                           	movf	((LCD_write_byte@address)),w
  2344  0415  0876               	btfsc	status,2
  2345  0416  1903               	goto	u891
  2346  0417  2C19               	goto	u890
  2347  0418  2C1A               u891:
  2348  0419                     	goto	l1311
  2349  0419  2C1F               u890:
  2350  041A                     	line	118
  2351                           	
  2352                           l1309:	
  2353  041A                     ;LCD_I2C.c: 117:     {;LCD_I2C.c: 118:         pin_RS=1;
  2354                           	bcf	status, 5	;RP0=0, select bank0
  2355  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  2356  041B  1303               	clrf	(_pin_RS)
  2357  041C  01A5               	incf	(_pin_RS),f
  2358  041D  0AA5               	line	119
  2359                           ;LCD_I2C.c: 119:     }
  2360                           	goto	l204
  2361  041E  2C22               	line	120
  2362                           ;LCD_I2C.c: 120:     else
  2363                           	
  2364                           l203:	
  2365  041F                     	line	122
  2366                           	
  2367                           l1311:	
  2368  041F                     ;LCD_I2C.c: 121:     {;LCD_I2C.c: 122:         pin_RS=0;
  2369                           	bcf	status, 5	;RP0=0, select bank0
  2370  041F  1283               	bcf	status, 6	;RP1=0, select bank0
  2371  0420  1303               	clrf	(_pin_RS)
  2372  0421  01A5               	line	123
  2373                           ;LCD_I2C.c: 123:     }
  2374                           	
  2375                           l204:	
  2376  0422                     	line	125
  2377                           ;LCD_I2C.c: 125:     pin_RW = 0;
  2378                           	clrf	(_pin_RW)
  2379  0422  01A6               	line	126
  2380                           ;LCD_I2C.c: 126:     pin_E = 0;
  2381                           	clrf	(_pin_E)
  2382  0423  01A7               	line	127
  2383                           	
  2384                           l1313:	
  2385  0424                     ;LCD_I2C.c: 127:     pin_BL = LCD_BL_Status;
  2386                           	movf	(_LCD_BL_Status),w
  2387  0424  082B               	movwf	(??_LCD_write_byte+0)+0
  2388  0425  00F5               	movf	(??_LCD_write_byte+0)+0,w
  2389  0426  0875               	movwf	(_pin_BL)
  2390  0427  00A0               	line	130
  2391                           	
  2392                           l1315:	
  2393  0428                     ;LCD_I2C.c: 130:    _LCD_write_upper_nibble(n);
  2394                           	movf	(LCD_write_byte@n),w
  2395  0428  0874               	fcall	__LCD_write_upper_nibble
  2396  0429  120A  118A  25EB  120A  118A  	line	133
  2397                           	
  2398                           l1317:	
  2399  042E                     ;LCD_I2C.c: 133:    _LCD_write_lower_nibble(n);
  2400                           	movf	(LCD_write_byte@n),w
  2401  042E  0874               	fcall	__LCD_write_lower_nibble
  2402  042F  120A  118A  255E  120A  118A  	line	134
  2403                           	
  2404                           l205:	
  2405  0434                     	return
  2406  0434  0008               	opt stack 0
  2407                           GLOBAL	__end_of_LCD_write_byte
  2408                           	__end_of_LCD_write_byte:
  2409  0435                     	signat	_LCD_write_byte,8313
  2410                           	global	__LCD_write_upper_nibble
  2411                           
  2412 ;; *************** function __LCD_write_upper_nibble *****************
  2413 ;; Defined at:
  2414 ;;		line 152 in file "LCD_I2C.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  u               1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  u               1    3[COMMON] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0
  2431 ;;      Totals:         1       0       0       0       0
  2432 ;;Total ram usage:        1 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    1
  2435 ;; This function calls:
  2436 ;;		__LCD_build_byte
  2437 ;; This function is called by:
  2438 ;;		_LCD_write_string
  2439 ;;		_LCD_write_byte
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2443                           	line	152
  2444                           global __ptext6
  2445                           __ptext6:	;psect for function __LCD_write_upper_nibble
  2446  05EB                     psect	text6
  2447                           	file	"LCD_I2C.c"
  2448                           	line	152
  2449                           	global	__size_of__LCD_write_upper_nibble
  2450                           	__size_of__LCD_write_upper_nibble	equ	__end_of__LCD_write_upper_nibble-__LCD_write_uppe
                                 r_nibble
  2451  008D                     	
  2452                           __LCD_write_upper_nibble:	
  2453  05EB                     ;incstack = 0
  2454                           	opt	stack 5
  2455                           ; Regs used in __LCD_write_upper_nibble: [wreg+status,2+status,0+pclath+cstack]
  2456                           ;__LCD_write_upper_nibble@u stored from wreg
  2457                           	movwf	(__LCD_write_upper_nibble@u)
  2458  05EB  00F3               	line	155
  2459                           	
  2460                           l1219:	
  2461  05EC                     ;LCD_I2C.c: 152: void _LCD_write_upper_nibble(unsigned char u);LCD_I2C.c: 153: {;LCD_I2C
                                 .c: 155:     if(((u) & (1 <<(7))))
  2462                           	btfss	(__LCD_write_upper_nibble@u),(7)&7
  2463  05EC  1FF3               	goto	u631
  2464  05ED  2DEF               	goto	u630
  2465  05EE  2DF0               u631:
  2466  05EF                     	goto	l1223
  2467  05EF  2DF5               u630:
  2468  05F0                     	line	156
  2469                           	
  2470                           l1221:	
  2471  05F0                     ;LCD_I2C.c: 156:         pin_D7=1;
  2472                           	bcf	status, 5	;RP0=0, select bank0
  2473  05F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2474  05F1  1303               	clrf	(_pin_D7)
  2475  05F2  01A1               	incf	(_pin_D7),f
  2476  05F3  0AA1               	goto	l1225
  2477  05F4  2DF9               	line	157
  2478                           ;LCD_I2C.c: 157:     else
  2479                           	
  2480                           l216:	
  2481  05F5                     	line	158
  2482                           	
  2483                           l1223:	
  2484  05F5                     ;LCD_I2C.c: 158:         pin_D7=0;
  2485                           	bcf	status, 5	;RP0=0, select bank0
  2486  05F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2487  05F6  1303               	clrf	(_pin_D7)
  2488  05F7  01A1               	goto	l1225
  2489  05F8  2DF9               	
  2490                           l217:	
  2491  05F9                     	line	160
  2492                           	
  2493                           l1225:	
  2494  05F9                     ;LCD_I2C.c: 160:     if(((u) & (1 <<(6))))
  2495                           	btfss	(__LCD_write_upper_nibble@u),(6)&7
  2496  05F9  1F73               	goto	u641
  2497  05FA  2DFC               	goto	u640
  2498  05FB  2DFD               u641:
  2499  05FC                     	goto	l1229
  2500  05FC  2E00               u640:
  2501  05FD                     	line	161
  2502                           	
  2503                           l1227:	
  2504  05FD                     ;LCD_I2C.c: 161:         pin_D6=1;
  2505                           	clrf	(_pin_D6)
  2506  05FD  01A2               	incf	(_pin_D6),f
  2507  05FE  0AA2               	goto	l1231
  2508  05FF  2E02               	line	162
  2509                           ;LCD_I2C.c: 162:     else
  2510                           	
  2511                           l218:	
  2512  0600                     	line	163
  2513                           	
  2514                           l1229:	
  2515  0600                     ;LCD_I2C.c: 163:         pin_D6=0;
  2516                           	clrf	(_pin_D6)
  2517  0600  01A2               	goto	l1231
  2518  0601  2E02               	
  2519                           l219:	
  2520  0602                     	line	165
  2521                           	
  2522                           l1231:	
  2523  0602                     ;LCD_I2C.c: 165:     if(((u) & (1 <<(5))))
  2524                           	btfss	(__LCD_write_upper_nibble@u),(5)&7
  2525  0602  1EF3               	goto	u651
  2526  0603  2E05               	goto	u650
  2527  0604  2E06               u651:
  2528  0605                     	goto	l1235
  2529  0605  2E09               u650:
  2530  0606                     	line	166
  2531                           	
  2532                           l1233:	
  2533  0606                     ;LCD_I2C.c: 166:         pin_D5=1;
  2534                           	clrf	(_pin_D5)
  2535  0606  01A3               	incf	(_pin_D5),f
  2536  0607  0AA3               	goto	l1237
  2537  0608  2E0B               	line	167
  2538                           ;LCD_I2C.c: 167:     else
  2539                           	
  2540                           l220:	
  2541  0609                     	line	168
  2542                           	
  2543                           l1235:	
  2544  0609                     ;LCD_I2C.c: 168:         pin_D5=0;
  2545                           	clrf	(_pin_D5)
  2546  0609  01A3               	goto	l1237
  2547  060A  2E0B               	
  2548                           l221:	
  2549  060B                     	line	170
  2550                           	
  2551                           l1237:	
  2552  060B                     ;LCD_I2C.c: 170:     if(((u) & (1 <<(4))))
  2553                           	btfss	(__LCD_write_upper_nibble@u),(4)&7
  2554  060B  1E73               	goto	u661
  2555  060C  2E0E               	goto	u660
  2556  060D  2E0F               u661:
  2557  060E                     	goto	l1241
  2558  060E  2E12               u660:
  2559  060F                     	line	171
  2560                           	
  2561                           l1239:	
  2562  060F                     ;LCD_I2C.c: 171:         pin_D4=1;
  2563                           	clrf	(_pin_D4)
  2564  060F  01A4               	incf	(_pin_D4),f
  2565  0610  0AA4               	goto	l223
  2566  0611  2E13               	line	172
  2567                           ;LCD_I2C.c: 172:     else
  2568                           	
  2569                           l222:	
  2570  0612                     	line	173
  2571                           	
  2572                           l1241:	
  2573  0612                     ;LCD_I2C.c: 173:         pin_D4=0;
  2574                           	clrf	(_pin_D4)
  2575  0612  01A4               	
  2576                           l223:	
  2577  0613                     	line	175
  2578                           ;LCD_I2C.c: 175:    pin_E = 0;
  2579                           	clrf	(_pin_E)
  2580  0613  01A7               	line	176
  2581                           ;LCD_I2C.c: 176:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2582                           	goto	l1243
  2583  0614  2E16               	
  2584                           l225:	
  2585  0615                     	goto	l1243
  2586  0615  2E16               	
  2587                           l224:	
  2588  0616                     	
  2589                           l1243:	
  2590  0616                     	bsf	status, 5	;RP0=1, select bank1
  2591  0616  1683               	bcf	status, 6	;RP1=0, select bank1
  2592  0617  1303               	movf	(145)^080h,w	;volatile
  2593  0618  0811               	andlw	01Fh
  2594  0619  391F               	btfss	status,2
  2595  061A  1D03               	goto	u671
  2596  061B  2E1D               	goto	u670
  2597  061C  2E1E               u671:
  2598  061D                     	goto	l1243
  2599  061D  2E16               u670:
  2600  061E                     	
  2601                           l1245:	
  2602  061E                     	btfsc	(148)^080h,(2)&7	;volatile
  2603  061E  1914               	goto	u681
  2604  061F  2E21               	goto	u680
  2605  0620  2E22               u681:
  2606  0621                     	goto	l1243
  2607  0621  2E16               u680:
  2608  0622                     	goto	l1247
  2609  0622  2E23               	
  2610                           l226:	
  2611  0623                     	
  2612                           l1247:	
  2613  0623                     	fcall	__LCD_build_byte
  2614  0623  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2615  0628  1283               	bcf	status, 6	;RP1=0, select bank0
  2616  0629  1303               	movwf	(19)	;volatile
  2617  062A  0093               	goto	l227
  2618  062B  2E2C               	
  2619                           l228:	
  2620  062C                     	
  2621                           l227:	
  2622  062C                     	bsf	status, 5	;RP0=1, select bank1
  2623  062C  1683               	bcf	status, 6	;RP1=0, select bank1
  2624  062D  1303               	btfsc	(148)^080h,0	;volatile
  2625  062E  1814               	goto	u691
  2626  062F  2E31               	goto	u690
  2627  0630  2E32               u691:
  2628  0631                     	goto	l227
  2629  0631  2E2C               u690:
  2630  0632                     	
  2631                           l229:	
  2632  0632                     	line	177
  2633                           ;LCD_I2C.c: 177:    pin_E = 1;
  2634                           	bcf	status, 5	;RP0=0, select bank0
  2635  0632  1283               	bcf	status, 6	;RP1=0, select bank0
  2636  0633  1303               	clrf	(_pin_E)
  2637  0634  01A7               	incf	(_pin_E),f
  2638  0635  0AA7               	line	178
  2639                           ;LCD_I2C.c: 178:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2640                           	goto	l1249
  2641  0636  2E38               	
  2642                           l231:	
  2643  0637                     	goto	l1249
  2644  0637  2E38               	
  2645                           l230:	
  2646  0638                     	
  2647                           l1249:	
  2648  0638                     	bsf	status, 5	;RP0=1, select bank1
  2649  0638  1683               	bcf	status, 6	;RP1=0, select bank1
  2650  0639  1303               	movf	(145)^080h,w	;volatile
  2651  063A  0811               	andlw	01Fh
  2652  063B  391F               	btfss	status,2
  2653  063C  1D03               	goto	u701
  2654  063D  2E3F               	goto	u700
  2655  063E  2E40               u701:
  2656  063F                     	goto	l1249
  2657  063F  2E38               u700:
  2658  0640                     	
  2659                           l1251:	
  2660  0640                     	btfsc	(148)^080h,(2)&7	;volatile
  2661  0640  1914               	goto	u711
  2662  0641  2E43               	goto	u710
  2663  0642  2E44               u711:
  2664  0643                     	goto	l1249
  2665  0643  2E38               u710:
  2666  0644                     	goto	l1253
  2667  0644  2E45               	
  2668                           l232:	
  2669  0645                     	
  2670                           l1253:	
  2671  0645                     	fcall	__LCD_build_byte
  2672  0645  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2673  064A  1283               	bcf	status, 6	;RP1=0, select bank0
  2674  064B  1303               	movwf	(19)	;volatile
  2675  064C  0093               	goto	l233
  2676  064D  2E4E               	
  2677                           l234:	
  2678  064E                     	
  2679                           l233:	
  2680  064E                     	bsf	status, 5	;RP0=1, select bank1
  2681  064E  1683               	bcf	status, 6	;RP1=0, select bank1
  2682  064F  1303               	btfsc	(148)^080h,0	;volatile
  2683  0650  1814               	goto	u721
  2684  0651  2E53               	goto	u720
  2685  0652  2E54               u721:
  2686  0653                     	goto	l233
  2687  0653  2E4E               u720:
  2688  0654                     	goto	l1255
  2689  0654  2E55               	
  2690                           l235:	
  2691  0655                     	line	179
  2692                           	
  2693                           l1255:	
  2694  0655                     ;LCD_I2C.c: 179:    pin_E = 0;
  2695                           	bcf	status, 5	;RP0=0, select bank0
  2696  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  2697  0656  1303               	clrf	(_pin_E)
  2698  0657  01A7               	line	180
  2699                           ;LCD_I2C.c: 180:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2700                           	goto	l1257
  2701  0658  2E5A               	
  2702                           l237:	
  2703  0659                     	goto	l1257
  2704  0659  2E5A               	
  2705                           l236:	
  2706  065A                     	
  2707                           l1257:	
  2708  065A                     	bsf	status, 5	;RP0=1, select bank1
  2709  065A  1683               	bcf	status, 6	;RP1=0, select bank1
  2710  065B  1303               	movf	(145)^080h,w	;volatile
  2711  065C  0811               	andlw	01Fh
  2712  065D  391F               	btfss	status,2
  2713  065E  1D03               	goto	u731
  2714  065F  2E61               	goto	u730
  2715  0660  2E62               u731:
  2716  0661                     	goto	l1257
  2717  0661  2E5A               u730:
  2718  0662                     	
  2719                           l1259:	
  2720  0662                     	btfsc	(148)^080h,(2)&7	;volatile
  2721  0662  1914               	goto	u741
  2722  0663  2E65               	goto	u740
  2723  0664  2E66               u741:
  2724  0665                     	goto	l1257
  2725  0665  2E5A               u740:
  2726  0666                     	goto	l1261
  2727  0666  2E67               	
  2728                           l238:	
  2729  0667                     	
  2730                           l1261:	
  2731  0667                     	fcall	__LCD_build_byte
  2732  0667  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2733  066C  1283               	bcf	status, 6	;RP1=0, select bank0
  2734  066D  1303               	movwf	(19)	;volatile
  2735  066E  0093               	goto	l239
  2736  066F  2E70               	
  2737                           l240:	
  2738  0670                     	
  2739                           l239:	
  2740  0670                     	bsf	status, 5	;RP0=1, select bank1
  2741  0670  1683               	bcf	status, 6	;RP1=0, select bank1
  2742  0671  1303               	btfsc	(148)^080h,0	;volatile
  2743  0672  1814               	goto	u751
  2744  0673  2E75               	goto	u750
  2745  0674  2E76               u751:
  2746  0675                     	goto	l239
  2747  0675  2E70               u750:
  2748  0676                     	goto	l242
  2749  0676  2E77               	
  2750                           l241:	
  2751  0677                     	line	181
  2752                           	
  2753                           l242:	
  2754  0677                     	return
  2755  0677  0008               	opt stack 0
  2756                           GLOBAL	__end_of__LCD_write_upper_nibble
  2757                           	__end_of__LCD_write_upper_nibble:
  2758  0678                     	signat	__LCD_write_upper_nibble,4217
  2759                           	global	__LCD_write_lower_nibble
  2760                           
  2761 ;; *************** function __LCD_write_lower_nibble *****************
  2762 ;; Defined at:
  2763 ;;		line 183 in file "LCD_I2C.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  l               1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  l               1    3[COMMON] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2777 ;;      Params:         0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0
  2780 ;;      Totals:         1       0       0       0       0
  2781 ;;Total ram usage:        1 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    1
  2784 ;; This function calls:
  2785 ;;		__LCD_build_byte
  2786 ;; This function is called by:
  2787 ;;		_LCD_write_string
  2788 ;;		_LCD_write_byte
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2792                           	line	183
  2793                           global __ptext7
  2794                           __ptext7:	;psect for function __LCD_write_lower_nibble
  2795  055E                     psect	text7
  2796                           	file	"LCD_I2C.c"
  2797                           	line	183
  2798                           	global	__size_of__LCD_write_lower_nibble
  2799                           	__size_of__LCD_write_lower_nibble	equ	__end_of__LCD_write_lower_nibble-__LCD_write_lowe
                                 r_nibble
  2800  008D                     	
  2801                           __LCD_write_lower_nibble:	
  2802  055E                     ;incstack = 0
  2803                           	opt	stack 5
  2804                           ; Regs used in __LCD_write_lower_nibble: [wreg+status,2+status,0+pclath+cstack]
  2805                           ;__LCD_write_lower_nibble@l stored from wreg
  2806                           	movwf	(__LCD_write_lower_nibble@l)
  2807  055E  00F3               	line	186
  2808                           	
  2809                           l1263:	
  2810  055F                     ;LCD_I2C.c: 183: void _LCD_write_lower_nibble(unsigned char l);LCD_I2C.c: 184: {;LCD_I2C
                                 .c: 186:     if(((l) & (1 <<(3))))
  2811                           	btfss	(__LCD_write_lower_nibble@l),(3)&7
  2812  055F  1DF3               	goto	u761
  2813  0560  2D62               	goto	u760
  2814  0561  2D63               u761:
  2815  0562                     	goto	l1267
  2816  0562  2D68               u760:
  2817  0563                     	line	187
  2818                           	
  2819                           l1265:	
  2820  0563                     ;LCD_I2C.c: 187:         pin_D7=1;
  2821                           	bcf	status, 5	;RP0=0, select bank0
  2822  0563  1283               	bcf	status, 6	;RP1=0, select bank0
  2823  0564  1303               	clrf	(_pin_D7)
  2824  0565  01A1               	incf	(_pin_D7),f
  2825  0566  0AA1               	goto	l1269
  2826  0567  2D6C               	line	188
  2827                           ;LCD_I2C.c: 188:     else
  2828                           	
  2829                           l245:	
  2830  0568                     	line	189
  2831                           	
  2832                           l1267:	
  2833  0568                     ;LCD_I2C.c: 189:         pin_D7=0;
  2834                           	bcf	status, 5	;RP0=0, select bank0
  2835  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  2836  0569  1303               	clrf	(_pin_D7)
  2837  056A  01A1               	goto	l1269
  2838  056B  2D6C               	
  2839                           l246:	
  2840  056C                     	line	191
  2841                           	
  2842                           l1269:	
  2843  056C                     ;LCD_I2C.c: 191:     if(((l) & (1 <<(2))))
  2844                           	btfss	(__LCD_write_lower_nibble@l),(2)&7
  2845  056C  1D73               	goto	u771
  2846  056D  2D6F               	goto	u770
  2847  056E  2D70               u771:
  2848  056F                     	goto	l1273
  2849  056F  2D73               u770:
  2850  0570                     	line	192
  2851                           	
  2852                           l1271:	
  2853  0570                     ;LCD_I2C.c: 192:         pin_D6=1;
  2854                           	clrf	(_pin_D6)
  2855  0570  01A2               	incf	(_pin_D6),f
  2856  0571  0AA2               	goto	l1275
  2857  0572  2D75               	line	193
  2858                           ;LCD_I2C.c: 193:     else
  2859                           	
  2860                           l247:	
  2861  0573                     	line	194
  2862                           	
  2863                           l1273:	
  2864  0573                     ;LCD_I2C.c: 194:         pin_D6=0;
  2865                           	clrf	(_pin_D6)
  2866  0573  01A2               	goto	l1275
  2867  0574  2D75               	
  2868                           l248:	
  2869  0575                     	line	196
  2870                           	
  2871                           l1275:	
  2872  0575                     ;LCD_I2C.c: 196:     if(((l) & (1 <<(1))))
  2873                           	btfss	(__LCD_write_lower_nibble@l),(1)&7
  2874  0575  1CF3               	goto	u781
  2875  0576  2D78               	goto	u780
  2876  0577  2D79               u781:
  2877  0578                     	goto	l1279
  2878  0578  2D7C               u780:
  2879  0579                     	line	197
  2880                           	
  2881                           l1277:	
  2882  0579                     ;LCD_I2C.c: 197:         pin_D5=1;
  2883                           	clrf	(_pin_D5)
  2884  0579  01A3               	incf	(_pin_D5),f
  2885  057A  0AA3               	goto	l1281
  2886  057B  2D7E               	line	198
  2887                           ;LCD_I2C.c: 198:     else
  2888                           	
  2889                           l249:	
  2890  057C                     	line	199
  2891                           	
  2892                           l1279:	
  2893  057C                     ;LCD_I2C.c: 199:         pin_D5=0;
  2894                           	clrf	(_pin_D5)
  2895  057C  01A3               	goto	l1281
  2896  057D  2D7E               	
  2897                           l250:	
  2898  057E                     	line	201
  2899                           	
  2900                           l1281:	
  2901  057E                     ;LCD_I2C.c: 201:     if(((l) & (1 <<(0))))
  2902                           	btfss	(__LCD_write_lower_nibble@l),(0)&7
  2903  057E  1C73               	goto	u791
  2904  057F  2D81               	goto	u790
  2905  0580  2D82               u791:
  2906  0581                     	goto	l1285
  2907  0581  2D85               u790:
  2908  0582                     	line	202
  2909                           	
  2910                           l1283:	
  2911  0582                     ;LCD_I2C.c: 202:         pin_D4=1;
  2912                           	clrf	(_pin_D4)
  2913  0582  01A4               	incf	(_pin_D4),f
  2914  0583  0AA4               	goto	l252
  2915  0584  2D86               	line	203
  2916                           ;LCD_I2C.c: 203:     else
  2917                           	
  2918                           l251:	
  2919  0585                     	line	204
  2920                           	
  2921                           l1285:	
  2922  0585                     ;LCD_I2C.c: 204:         pin_D4=0;
  2923                           	clrf	(_pin_D4)
  2924  0585  01A4               	
  2925                           l252:	
  2926  0586                     	line	206
  2927                           ;LCD_I2C.c: 206:     pin_E = 0;
  2928                           	clrf	(_pin_E)
  2929  0586  01A7               	line	207
  2930                           ;LCD_I2C.c: 207:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  2931                           	goto	l1287
  2932  0587  2D89               	
  2933                           l254:	
  2934  0588                     	goto	l1287
  2935  0588  2D89               	
  2936                           l253:	
  2937  0589                     	
  2938                           l1287:	
  2939  0589                     	bsf	status, 5	;RP0=1, select bank1
  2940  0589  1683               	bcf	status, 6	;RP1=0, select bank1
  2941  058A  1303               	movf	(145)^080h,w	;volatile
  2942  058B  0811               	andlw	01Fh
  2943  058C  391F               	btfss	status,2
  2944  058D  1D03               	goto	u801
  2945  058E  2D90               	goto	u800
  2946  058F  2D91               u801:
  2947  0590                     	goto	l1287
  2948  0590  2D89               u800:
  2949  0591                     	
  2950                           l1289:	
  2951  0591                     	btfsc	(148)^080h,(2)&7	;volatile
  2952  0591  1914               	goto	u811
  2953  0592  2D94               	goto	u810
  2954  0593  2D95               u811:
  2955  0594                     	goto	l1287
  2956  0594  2D89               u810:
  2957  0595                     	goto	l1291
  2958  0595  2D96               	
  2959                           l255:	
  2960  0596                     	
  2961                           l1291:	
  2962  0596                     	fcall	__LCD_build_byte
  2963  0596  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2964  059B  1283               	bcf	status, 6	;RP1=0, select bank0
  2965  059C  1303               	movwf	(19)	;volatile
  2966  059D  0093               	goto	l256
  2967  059E  2D9F               	
  2968                           l257:	
  2969  059F                     	
  2970                           l256:	
  2971  059F                     	bsf	status, 5	;RP0=1, select bank1
  2972  059F  1683               	bcf	status, 6	;RP1=0, select bank1
  2973  05A0  1303               	btfsc	(148)^080h,0	;volatile
  2974  05A1  1814               	goto	u821
  2975  05A2  2DA4               	goto	u820
  2976  05A3  2DA5               u821:
  2977  05A4                     	goto	l256
  2978  05A4  2D9F               u820:
  2979  05A5                     	
  2980                           l258:	
  2981  05A5                     	line	208
  2982                           ;LCD_I2C.c: 208:     pin_E = 1;
  2983                           	bcf	status, 5	;RP0=0, select bank0
  2984  05A5  1283               	bcf	status, 6	;RP1=0, select bank0
  2985  05A6  1303               	clrf	(_pin_E)
  2986  05A7  01A7               	incf	(_pin_E),f
  2987  05A8  0AA7               	line	209
  2988                           ;LCD_I2C.c: 209:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  2989                           	goto	l1293
  2990  05A9  2DAB               	
  2991                           l260:	
  2992  05AA                     	goto	l1293
  2993  05AA  2DAB               	
  2994                           l259:	
  2995  05AB                     	
  2996                           l1293:	
  2997  05AB                     	bsf	status, 5	;RP0=1, select bank1
  2998  05AB  1683               	bcf	status, 6	;RP1=0, select bank1
  2999  05AC  1303               	movf	(145)^080h,w	;volatile
  3000  05AD  0811               	andlw	01Fh
  3001  05AE  391F               	btfss	status,2
  3002  05AF  1D03               	goto	u831
  3003  05B0  2DB2               	goto	u830
  3004  05B1  2DB3               u831:
  3005  05B2                     	goto	l1293
  3006  05B2  2DAB               u830:
  3007  05B3                     	
  3008                           l1295:	
  3009  05B3                     	btfsc	(148)^080h,(2)&7	;volatile
  3010  05B3  1914               	goto	u841
  3011  05B4  2DB6               	goto	u840
  3012  05B5  2DB7               u841:
  3013  05B6                     	goto	l1293
  3014  05B6  2DAB               u840:
  3015  05B7                     	goto	l1297
  3016  05B7  2DB8               	
  3017                           l261:	
  3018  05B8                     	
  3019                           l1297:	
  3020  05B8                     	fcall	__LCD_build_byte
  3021  05B8  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3022  05BD  1283               	bcf	status, 6	;RP1=0, select bank0
  3023  05BE  1303               	movwf	(19)	;volatile
  3024  05BF  0093               	goto	l262
  3025  05C0  2DC1               	
  3026                           l263:	
  3027  05C1                     	
  3028                           l262:	
  3029  05C1                     	bsf	status, 5	;RP0=1, select bank1
  3030  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  3031  05C2  1303               	btfsc	(148)^080h,0	;volatile
  3032  05C3  1814               	goto	u851
  3033  05C4  2DC6               	goto	u850
  3034  05C5  2DC7               u851:
  3035  05C6                     	goto	l262
  3036  05C6  2DC1               u850:
  3037  05C7                     	goto	l1299
  3038  05C7  2DC8               	
  3039                           l264:	
  3040  05C8                     	line	210
  3041                           	
  3042                           l1299:	
  3043  05C8                     ;LCD_I2C.c: 210:     pin_E = 0;
  3044                           	bcf	status, 5	;RP0=0, select bank0
  3045  05C8  1283               	bcf	status, 6	;RP1=0, select bank0
  3046  05C9  1303               	clrf	(_pin_E)
  3047  05CA  01A7               	line	211
  3048                           ;LCD_I2C.c: 211:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  3049                           	goto	l1301
  3050  05CB  2DCD               	
  3051                           l266:	
  3052  05CC                     	goto	l1301
  3053  05CC  2DCD               	
  3054                           l265:	
  3055  05CD                     	
  3056                           l1301:	
  3057  05CD                     	bsf	status, 5	;RP0=1, select bank1
  3058  05CD  1683               	bcf	status, 6	;RP1=0, select bank1
  3059  05CE  1303               	movf	(145)^080h,w	;volatile
  3060  05CF  0811               	andlw	01Fh
  3061  05D0  391F               	btfss	status,2
  3062  05D1  1D03               	goto	u861
  3063  05D2  2DD4               	goto	u860
  3064  05D3  2DD5               u861:
  3065  05D4                     	goto	l1301
  3066  05D4  2DCD               u860:
  3067  05D5                     	
  3068                           l1303:	
  3069  05D5                     	btfsc	(148)^080h,(2)&7	;volatile
  3070  05D5  1914               	goto	u871
  3071  05D6  2DD8               	goto	u870
  3072  05D7  2DD9               u871:
  3073  05D8                     	goto	l1301
  3074  05D8  2DCD               u870:
  3075  05D9                     	goto	l1305
  3076  05D9  2DDA               	
  3077                           l267:	
  3078  05DA                     	
  3079                           l1305:	
  3080  05DA                     	fcall	__LCD_build_byte
  3081  05DA  120A  118A  2500  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3082  05DF  1283               	bcf	status, 6	;RP1=0, select bank0
  3083  05E0  1303               	movwf	(19)	;volatile
  3084  05E1  0093               	goto	l268
  3085  05E2  2DE3               	
  3086                           l269:	
  3087  05E3                     	
  3088                           l268:	
  3089  05E3                     	bsf	status, 5	;RP0=1, select bank1
  3090  05E3  1683               	bcf	status, 6	;RP1=0, select bank1
  3091  05E4  1303               	btfsc	(148)^080h,0	;volatile
  3092  05E5  1814               	goto	u881
  3093  05E6  2DE8               	goto	u880
  3094  05E7  2DE9               u881:
  3095  05E8                     	goto	l268
  3096  05E8  2DE3               u880:
  3097  05E9                     	goto	l271
  3098  05E9  2DEA               	
  3099                           l270:	
  3100  05EA                     	line	212
  3101                           	
  3102                           l271:	
  3103  05EA                     	return
  3104  05EA  0008               	opt stack 0
  3105                           GLOBAL	__end_of__LCD_write_lower_nibble
  3106                           	__end_of__LCD_write_lower_nibble:
  3107  05EB                     	signat	__LCD_write_lower_nibble,4217
  3108                           	global	__LCD_build_byte
  3109                           
  3110 ;; *************** function __LCD_build_byte *****************
  3111 ;; Defined at:
  3112 ;;		line 214 in file "LCD_I2C.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;  ret             1    2[COMMON] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      unsigned char 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       0       0       0       0
  3127 ;;      Locals:         1       0       0       0       0
  3128 ;;      Temps:          2       0       0       0       0
  3129 ;;      Totals:         3       0       0       0       0
  3130 ;;Total ram usage:        3 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		__LCD_write_upper_nibble
  3136 ;;		__LCD_write_lower_nibble
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3140                           	line	214
  3141                           global __ptext8
  3142                           __ptext8:	;psect for function __LCD_build_byte
  3143  0500                     psect	text8
  3144                           	file	"LCD_I2C.c"
  3145                           	line	214
  3146                           	global	__size_of__LCD_build_byte
  3147                           	__size_of__LCD_build_byte	equ	__end_of__LCD_build_byte-__LCD_build_byte
  3148  005E                     	
  3149                           __LCD_build_byte:	
  3150  0500                     ;incstack = 0
  3151                           	opt	stack 5
  3152                           ; Regs used in __LCD_build_byte: [wreg+status,2+status,0]
  3153                           	line	216
  3154                           	
  3155                           l1197:	
  3156  0500                     ;LCD_I2C.c: 216:     unsigned char ret = 0x00;
  3157                           	clrf	(__LCD_build_byte@ret)
  3158  0500  01F2               	line	218
  3159                           	
  3160                           l1199:	
  3161  0501                     ;LCD_I2C.c: 218:     ret |= pin_E << 2;
  3162                           	bcf	status, 5	;RP0=0, select bank0
  3163  0501  1283               	bcf	status, 6	;RP1=0, select bank0
  3164  0502  1303               	movf	(_pin_E),w
  3165  0503  0827               	movwf	(??__LCD_build_byte+0)+0
  3166  0504  00F0               	movlw	(02h)-1
  3167  0505  3001               u575:
  3168  0506                     	clrc
  3169  0506  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3170  0507  0DF0               	addlw	-1
  3171  0508  3EFF               	skipz
  3172  0509  1D03               	goto	u575
  3173  050A  2D06               	clrc
  3174  050B  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3175  050C  0D70               	movwf	(??__LCD_build_byte+1)+0
  3176  050D  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3177  050E  0871               	iorwf	(__LCD_build_byte@ret),f
  3178  050F  04F2               	line	219
  3179                           	
  3180                           l1201:	
  3181  0510                     ;LCD_I2C.c: 219:     ret |= pin_RW << 1;
  3182                           	movf	(_pin_RW),w
  3183  0510  0826               	movwf	(??__LCD_build_byte+0)+0
  3184  0511  00F0               	addwf	(??__LCD_build_byte+0)+0,w
  3185  0512  0770               	movwf	(??__LCD_build_byte+1)+0
  3186  0513  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3187  0514  0871               	iorwf	(__LCD_build_byte@ret),f
  3188  0515  04F2               	line	220
  3189                           	
  3190                           l1203:	
  3191  0516                     ;LCD_I2C.c: 220:     ret |= pin_RS << 0;
  3192                           	movf	(_pin_RS),w
  3193  0516  0825               	movwf	(??__LCD_build_byte+0)+0
  3194  0517  00F0               	movf	(??__LCD_build_byte+0)+0,w
  3195  0518  0870               	iorwf	(__LCD_build_byte@ret),f
  3196  0519  04F2               	line	221
  3197                           	
  3198                           l1205:	
  3199  051A                     ;LCD_I2C.c: 221:     ret |= pin_D4 << 4;
  3200                           	movf	(_pin_D4),w
  3201  051A  0824               	movwf	(??__LCD_build_byte+0)+0
  3202  051B  00F0               	movlw	(04h)-1
  3203  051C  3003               u585:
  3204  051D                     	clrc
  3205  051D  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3206  051E  0DF0               	addlw	-1
  3207  051F  3EFF               	skipz
  3208  0520  1D03               	goto	u585
  3209  0521  2D1D               	clrc
  3210  0522  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3211  0523  0D70               	movwf	(??__LCD_build_byte+1)+0
  3212  0524  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3213  0525  0871               	iorwf	(__LCD_build_byte@ret),f
  3214  0526  04F2               	line	222
  3215                           	
  3216                           l1207:	
  3217  0527                     ;LCD_I2C.c: 222:     ret |= pin_D5 << 5;
  3218                           	movf	(_pin_D5),w
  3219  0527  0823               	movwf	(??__LCD_build_byte+0)+0
  3220  0528  00F0               	movlw	(05h)-1
  3221  0529  3004               u595:
  3222  052A                     	clrc
  3223  052A  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3224  052B  0DF0               	addlw	-1
  3225  052C  3EFF               	skipz
  3226  052D  1D03               	goto	u595
  3227  052E  2D2A               	clrc
  3228  052F  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3229  0530  0D70               	movwf	(??__LCD_build_byte+1)+0
  3230  0531  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3231  0532  0871               	iorwf	(__LCD_build_byte@ret),f
  3232  0533  04F2               	line	223
  3233                           	
  3234                           l1209:	
  3235  0534                     ;LCD_I2C.c: 223:     ret |= pin_D6 << 6;
  3236                           	movf	(_pin_D6),w
  3237  0534  0822               	movwf	(??__LCD_build_byte+0)+0
  3238  0535  00F0               	movlw	(06h)-1
  3239  0536  3005               u605:
  3240  0537                     	clrc
  3241  0537  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3242  0538  0DF0               	addlw	-1
  3243  0539  3EFF               	skipz
  3244  053A  1D03               	goto	u605
  3245  053B  2D37               	clrc
  3246  053C  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3247  053D  0D70               	movwf	(??__LCD_build_byte+1)+0
  3248  053E  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3249  053F  0871               	iorwf	(__LCD_build_byte@ret),f
  3250  0540  04F2               	line	224
  3251                           	
  3252                           l1211:	
  3253  0541                     ;LCD_I2C.c: 224:     ret |= pin_D7 << 7;
  3254                           	movf	(_pin_D7),w
  3255  0541  0821               	movwf	(??__LCD_build_byte+0)+0
  3256  0542  00F0               	movlw	(07h)-1
  3257  0543  3006               u615:
  3258  0544                     	clrc
  3259  0544  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3260  0545  0DF0               	addlw	-1
  3261  0546  3EFF               	skipz
  3262  0547  1D03               	goto	u615
  3263  0548  2D44               	clrc
  3264  0549  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3265  054A  0D70               	movwf	(??__LCD_build_byte+1)+0
  3266  054B  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3267  054C  0871               	iorwf	(__LCD_build_byte@ret),f
  3268  054D  04F2               	line	225
  3269                           	
  3270                           l1213:	
  3271  054E                     ;LCD_I2C.c: 225:     ret |= pin_BL << 3;
  3272                           	movf	(_pin_BL),w
  3273  054E  0820               	movwf	(??__LCD_build_byte+0)+0
  3274  054F  00F0               	movlw	(03h)-1
  3275  0550  3002               u625:
  3276  0551                     	clrc
  3277  0551  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3278  0552  0DF0               	addlw	-1
  3279  0553  3EFF               	skipz
  3280  0554  1D03               	goto	u625
  3281  0555  2D51               	clrc
  3282  0556  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3283  0557  0D70               	movwf	(??__LCD_build_byte+1)+0
  3284  0558  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3285  0559  0871               	iorwf	(__LCD_build_byte@ret),f
  3286  055A  04F2               	line	227
  3287                           	
  3288                           l1215:	
  3289  055B                     ;LCD_I2C.c: 227:     return ret;
  3290                           	movf	(__LCD_build_byte@ret),w
  3291  055B  0872               	goto	l274
  3292  055C  2D5D               	
  3293                           l1217:	
  3294  055D                     	line	228
  3295                           	
  3296                           l274:	
  3297  055D                     	return
  3298  055D  0008               	opt stack 0
  3299                           GLOBAL	__end_of__LCD_build_byte
  3300                           	__end_of__LCD_build_byte:
  3301  055E                     	signat	__LCD_build_byte,89
  3302                           	global	_LCD_close
  3303                           
  3304 ;; *************** function _LCD_close *****************
  3305 ;; Defined at:
  3306 ;;		line 26 in file "LCD_I2C.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3320 ;;      Params:         0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0
  3322 ;;      Temps:          1       0       0       0       0
  3323 ;;      Totals:         1       0       0       0       0
  3324 ;;Total ram usage:        1 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3333                           	line	26
  3334                           global __ptext9
  3335                           __ptext9:	;psect for function _LCD_close
  3336  03FE                     psect	text9
  3337                           	file	"LCD_I2C.c"
  3338                           	line	26
  3339                           	global	__size_of_LCD_close
  3340                           	__size_of_LCD_close	equ	__end_of_LCD_close-_LCD_close
  3341  0016                     	
  3342                           _LCD_close:	
  3343  03FE                     ;incstack = 0
  3344                           	opt	stack 7
  3345                           ; Regs used in _LCD_close: [wreg+status,2+status,0]
  3346                           	line	28
  3347                           	
  3348                           l1055:	
  3349  03FE                     ;LCD_I2C.c: 28:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3350                           	goto	l1057
  3351  03FE  2C00               	
  3352                           l176:	
  3353  03FF                     	goto	l1057
  3354  03FF  2C00               	
  3355                           l175:	
  3356  0400                     	
  3357                           l1057:	
  3358  0400                     	bsf	status, 5	;RP0=1, select bank1
  3359  0400  1683               	bcf	status, 6	;RP1=0, select bank1
  3360  0401  1303               	movf	(145)^080h,w	;volatile
  3361  0402  0811               	andlw	01Fh
  3362  0403  391F               	btfss	status,2
  3363  0404  1D03               	goto	u461
  3364  0405  2C07               	goto	u460
  3365  0406  2C08               u461:
  3366  0407                     	goto	l1057
  3367  0407  2C00               u460:
  3368  0408                     	
  3369                           l1059:	
  3370  0408                     	btfsc	(148)^080h,(2)&7	;volatile
  3371  0408  1914               	goto	u471
  3372  0409  2C0B               	goto	u470
  3373  040A  2C0C               u471:
  3374  040B                     	goto	l1057
  3375  040B  2C00               u470:
  3376  040C                     	goto	l1061
  3377  040C  2C0D               	
  3378                           l177:	
  3379  040D                     	line	29
  3380                           	
  3381                           l1061:	
  3382  040D                     ;LCD_I2C.c: 29:     SSPCON &= 0xdf;
  3383                           	movlw	low(0DFh)
  3384  040D  30DF               	movwf	(??_LCD_close+0)+0
  3385  040E  00F0               	movf	(??_LCD_close+0)+0,w
  3386  040F  0870               	bcf	status, 5	;RP0=0, select bank0
  3387  0410  1283               	bcf	status, 6	;RP1=0, select bank0
  3388  0411  1303               	andwf	(20),f	;volatile
  3389  0412  0594               	line	30
  3390                           	
  3391                           l178:	
  3392  0413                     	return
  3393  0413  0008               	opt stack 0
  3394                           GLOBAL	__end_of_LCD_close
  3395                           	__end_of_LCD_close:
  3396  0414                     	signat	_LCD_close,89
  3397                           global	___latbits
  3398                           ___latbits	equ	2
  3399  0002                     	global	btemp
  3400                           	btemp set 07Eh
  3401  007E                     
  3402                           	DABS	1,126,2	;btemp
  3403                           	global	wtemp0
  3404                           	wtemp0 set btemp+0
  3405  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[2]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_goto
    _LCD_write_string->__LCD_write_lower_nibble
    _LCD_write_string->__LCD_write_upper_nibble
    _LCD_init->_LCD_write_byte
    _LCD_goto->_LCD_write_byte
    _LCD_write_byte->__LCD_write_lower_nibble
    _LCD_write_byte->__LCD_write_upper_nibble
    __LCD_write_upper_nibble->__LCD_build_byte
    __LCD_write_lower_nibble->__LCD_build_byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3265
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                          _LCD_close
                           _LCD_goto
                           _LCD_init
                           _LCD_open
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     2     2      0     371
                                              4 COMMON     2     2      0
            __LCD_write_lower_nibble
            __LCD_write_upper_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0    1216
                                              7 COMMON     2     2      0
                           _LCD_open
                     _LCD_write_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_open                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             5     4      1    1516
                                              7 COMMON     5     4      1
                     _LCD_write_byte
 ---------------------------------------------------------------------------------
 (2) _LCD_write_byte                                       3     2      1    1216
                                              4 COMMON     3     2      1
            __LCD_write_lower_nibble
            __LCD_write_upper_nibble
 ---------------------------------------------------------------------------------
 (2) __LCD_write_upper_nibble                              1     1      0     119
                                              3 COMMON     1     1      0
                    __LCD_build_byte
 ---------------------------------------------------------------------------------
 (2) __LCD_write_lower_nibble                              1     1      0     119
                                              3 COMMON     1     1      0
                    __LCD_build_byte
 ---------------------------------------------------------------------------------
 (3) __LCD_build_byte                                      3     3      0      31
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_close                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_close
   _LCD_goto
     _LCD_write_byte
       __LCD_write_lower_nibble
         __LCD_build_byte
       __LCD_write_upper_nibble
         __LCD_build_byte
   _LCD_init
     _LCD_open
     _LCD_write_byte
       __LCD_write_lower_nibble
         __LCD_build_byte
       __LCD_write_upper_nibble
         __LCD_build_byte
   _LCD_open
   _LCD_write_string
     __LCD_write_lower_nibble
       __LCD_build_byte
     __LCD_write_upper_nibble
       __LCD_build_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jul 19 03:52:44 2018

                               pc 0002                       __CFG_CP$OFF 0000                       _SSPSTATbits 0094  
           LCD_write_byte@address 0076                                l50 0758                                l51 078E  
                              l52 0793                                l53 07E8                                l54 07E9  
                              l55 07EA                                l56 07EB                                l57 07EB  
                              l49 0722         ??__LCD_write_lower_nibble 0073                                fsr 0004  
                             l200 046B                               l203 041F                               l220 0609  
                             l204 0422                               l221 060B                               l205 0434  
                             l230 0638                               l222 0612                               l231 0637  
                             l223 0613                               l240 0670                               l232 0645  
                             l224 0616                               l216 05F5                               l160 04DA  
                             l152 04AB                               l241 0677                               l233 064E  
                             l225 0615                               l217 05F9                               l161 04DC  
                             l153 04AA                               l250 057E                               l242 0677  
                             l234 064E                               l226 0623                               l218 0600  
                             l170 04FE                               l162 04DB                               l154 04B8  
                             l251 0585                               l235 0655                               l227 062C  
                             l219 0602                               l171 04FF                               l163 04E7  
                             l155 04C0                               l260 05AA                               l252 0586  
                             l236 065A                               l228 062C                               l172 04FF  
                             l164 04EC                               l156 04BF                               l261 05B8  
                             l253 0589                               l245 0568                               l237 0659  
                             l229 0632                               l165 04EC                               l157 04CC  
                             l181 071B                               l270 05EA                               l262 05C1  
                             l254 0588                               l246 056C                               l238 0667  
                             l190 0470                               l166 04F2                               l158 04CF  
                             l175 0400                               l271 05EA                               l263 05C1  
                             l255 0596                               l247 0573                               l239 0670  
                             l191 0475                               l167 04F5                               l159 04CE  
                             l176 03FF                               l264 05C8                               l256 059F  
                             l248 0575                               l192 047A                               l168 04F5  
                             l177 040D                               l265 05CD                               l257 059F  
                             l249 057C                               l193 047F                               l178 0413  
                             l274 055D                               l266 05CC                               l258 05A5  
                             l194 04A8                               l267 05DA                               l259 05AB  
                             l187 0482                               l268 05E3                               l188 046E  
                             l269 05E3                               l189 0498                               l197 045E  
                             l198 0441                               l199 046B                               l961 04B3  
                             l971 04D5                               l963 04B8                               l973 04DC  
                             l965 04C0                               l957 04A9                               l975 04E2  
                             l967 04C8                               l959 04AB                               l977 04E7  
                             l969 04CF                               l979 04F9                               u400 04E6  
                             u401 04E5                               u410 04F2                               u330 04B3  
                             u411 04F1                               u331 04B2                               u420 04F9  
                             u340 04B7                               u421 04F8                               u341 04B6  
                             u430 04FD                               u350 04C8                               u431 04FC  
                             u351 04C7                               u360 04CC                               _PEN 048A  
                             u361 04CB                               u370 04D5                      __CFG_CPD$OFF 0000  
                             u371 04D4                               u460 0408                               u700 0640  
                             u380 04D9                               u461 0407                               u605 0537  
                             u701 063F                               u381 04D8                               u470 040C  
                             u710 0644                               u630 05F0                               u390 04E2  
                             u471 040B                               u615 0544                               u711 0643  
                             u631 05EF                               u391 04E1                               u800 0591  
                             u720 0654                               u640 05FD                               u625 0551  
                             u801 0590                               u721 0653                               u641 05FC  
                             u810 0595                               u730 0662                               u650 0606  
                             u811 0594                               u731 0661                               u651 0605  
                             u820 05A5                               u740 0666                               u660 060F  
                             u900 046A                               _SEN 0488                               u821 05A4  
                             u741 0665                               u661 060E                               u901 0469  
                             u830 05B3                               u750 0676                               u670 061E  
                             u910 072D                               u575 0506                               u831 05B2  
                             u751 0675                               u671 061D                               u911 072C  
                             u840 05B7                               u760 0563                               u680 0622  
                             u920 0763                               u585 051D                               u841 05B6  
                             u761 0562                               u681 0621                               u921 0762  
                             u850 05C7                               u770 0570                               u690 0632  
                             u595 052A                               u851 05C6                               u771 056F  
                             u691 0631                               u860 05D5                               u780 0579  
                             u861 05D4                               u781 0578                               u870 05D9  
                             u790 0582                               u871 05D8                               u791 0581  
                             u880 05E9                               u881 05E8                               u890 041A  
                             u891 0419                               u957 073B                               u967 0751  
                             u977 0771                               u987 0787                               u997 07B8  
                             fsr0 0004                      __CFG_FOSC$XT 0000                      __CFG_LVP$OFF 0000  
                            l1201 0510                              l1211 0541                              l1203 0516  
                            l1061 040D                              l1213 054E                              l1205 051A  
                            l1301 05CD                              l1221 05F0                              l1055 03FE  
                            l1215 055B                              l1207 0527                              l1303 05D5  
                            l1231 0602                              l1223 05F5                              l1311 041F  
                            l1057 0400                              l1217 055D                              l1209 0534  
                            l1305 05DA                              l1241 0612                              l1233 0606  
                            l1225 05F9                              l1313 0424                              l1321 0687  
                            l1401 0793                              l1059 0408                              l1251 0640  
                            l1243 0616                              l1235 0609                              l1227 05FD  
                            l1219 05EC                              l1315 0428                              l1307 0415  
                            l1331 06C5                              l1323 068F                              l1411 07B0  
                            l1403 0798                              l1261 0667                              l1253 0645  
                            l1245 061E                              l1237 060B                              l1229 0600  
                            l1317 042E                              l1309 041A                              l1341 0709  
                            l1333 06D7                              l1325 06A1                              l1421 07D5  
                            l1413 07BE                              l1405 079D                              l1271 0570  
                            l1263 055F                              l1255 0655                              l1247 0623  
                            l1239 060F                              l1351 0475                              l1343 0713  
                            l1335 06DF                              l1327 06AB                              l1319 0678  
                            l1423 07D9                              l1415 07C4                              l1407 07A5  
                            l1281 057E                              l1273 0573                              l1265 0563  
                            l1257 065A                              l1249 0638                              l1353 047A  
                            l1361 0498                              l1345 046D                              l1337 06F1  
                            l1329 06BD                              l1417 07C6                              l1409 07AB  
                            l1291 0596                              l1283 0582                              l1275 0575  
                            l1267 0568                              l1259 0662                              l1363 049D  
                            l1355 047F                              l1347 046E                              l1339 06F9  
                            l1371 043A                              l1419 07D4                              l1197 0500  
                            l1293 05AB                              l1285 0585                              l1277 0579  
                            l1269 056C                              l1357 0481                              l1349 0470  
                            l1373 043C                              l1381 071C                              l1199 0501  
                            l1295 05B3                              l1287 0589                              l1279 057C  
                            l1359 0482                              l1375 0441                              l1391 0758  
                            l1383 0720                              l1297 05B8                              l1289 0591  
                            l1377 0459                              l1369 0436                              l1393 075E  
                            l1385 0721                              l1299 05C8                              l1379 045E  
                            l1395 0763                              l1387 0728                              l1469 048A  
                            l1397 078E                              l1389 072D                              l1399 0791  
                            STR_1 0009                              STR_2 0018                              u1007 07CE  
                            u1017 07E1                              u1107 0717                              u1027 068B  
                            u1037 069D                              u1047 06AF                              u1057 06C1  
                            u1067 06D3                              u1077 06E3                              u1087 06F5  
                            u1097 0705                              _RCEN 048B                              _RSEN 0489  
                    __CFG_WRT$OFF 0000                              _main 071C                              btemp 007E  
                            start 0000                __size_of_LCD_close 0016                  __end_of_LCD_init 071C  
                __end_of_LCD_goto 04A9                  __end_of_LCD_open 0500                             ?_main 0070  
                           _ACKEN 048C                             _ACKDT 048D                     __CFG_WDTE$OFF 0000  
                           _PORTD 0008                             _TRISB 0086                             _TRISD 0088  
                           _pin_E 0027                             main@m 007C                    __CFG_BOREN$OFF 0000  
                           pclath 000A                   LCD_goto@address 007B                             status 0003  
                           wtemp0 007E               __LCD_build_byte@ret 0072                   __initialization 07EE  
                    __end_of_main 07EE                 ?_LCD_write_string 0070         __LCD_write_lower_nibble@l 0073  
                          ??_main 0028           __LCD_write_upper_nibble 05EB                ??_LCD_write_string 0074  
               __end_of_LCD_close 0414                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                  __CFG_PWRTE$OFF 0000         __LCD_write_upper_nibble@u 0073           __size_of_LCD_write_byte 0021  
                          _pin_D4 0024                            _pin_D5 0023                            _pin_D6 0022  
                          _pin_D7 0021                            _pin_BL 0020                            _pin_RS 0025  
                          _pin_RW 0026                     main@portValue 007D           __end_of__initialization 07FC  
                       ?_LCD_init 0070                         ?_LCD_goto 0077                         ?_LCD_open 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 03FD         ??__LCD_write_upper_nibble 0073  
                       LCD_goto@x 007A                         LCD_goto@y 0077                    _OPTION_REGbits 0081  
        __size_of__LCD_build_byte 005E                        __pbssBANK0 0020                        ??_LCD_init 0077  
                      ??_LCD_goto 0078                        ??_LCD_open 0070                        __pmaintext 071C  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
        ?__LCD_write_lower_nibble 0070                    _LCD_write_byte 0414                           __ptext1 0435  
                         __ptext2 0678                           __ptext3 04A9                           __ptext4 046C  
                         __ptext5 0414                           __ptext6 05EB                           __ptext7 055E  
                         __ptext8 0500                           __ptext9 03FE              end_of_initialization 07FC  
                       _LCD_close 03FE         __size_of_LCD_write_string 0037                 ??__LCD_build_byte 0070  
          __end_of_LCD_write_byte 0435                         _PORTBbits 0006                        ?_LCD_close 0070  
 __end_of__LCD_write_lower_nibble 05EB                 __size_of_LCD_init 00A4                 __size_of_LCD_goto 003D  
               __size_of_LCD_open 0057                   ?_LCD_write_byte 0074               start_initialization 07EE  
                     __pdataBANK0 002B                         ___latbits 0002                     __pcstackBANK0 0028  
                     ??_LCD_close 0070               LCD_write_string@str 0075                  _LCD_write_string 0435  
        ?__LCD_write_upper_nibble 0070                         __pstrings 0003                   __LCD_build_byte 0500  
__size_of__LCD_write_lower_nibble 008D                   LCD_write_byte@n 0074                          _LCD_init 0678  
                        _LCD_goto 046C                          _LCD_open 04A9                       __stringbase 0008  
 __end_of__LCD_write_upper_nibble 0678                  ??_LCD_write_byte 0075           __end_of__LCD_build_byte 055E  
              __end_of__stringtab 0009                     __size_of_main 00D2                     _LCD_BL_Status 002B  
        __end_of_LCD_write_string 046C           __LCD_write_lower_nibble 055E                         stringcode 0003  
                ?__LCD_build_byte 0070  __size_of__LCD_write_upper_nibble 008D                          stringdir 0003  
                        stringtab 0003                       _SSPCON2bits 0091  
