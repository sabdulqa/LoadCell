

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jul 19 02:18:59 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F877A Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   176                           SSPCON2 equ 091h ;# 
   177  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   178                           PR2 equ 092h ;# 
   179  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   180                           SSPADD equ 093h ;# 
   181  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   182                           SSPSTAT equ 094h ;# 
   183  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   184                           TXSTA equ 098h ;# 
   185  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   186                           SPBRG equ 099h ;# 
   187  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   188                           CMCON equ 09Ch ;# 
   189  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   190                           CVRCON equ 09Dh ;# 
   191  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   192                           ADRESL equ 09Eh ;# 
   193  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   194                           ADCON1 equ 09Fh ;# 
   195  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   196                           EEDATA equ 010Ch ;# 
   197  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   198                           EEADR equ 010Dh ;# 
   199  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   200                           EEDATH equ 010Eh ;# 
   201  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   202                           EEADRH equ 010Fh ;# 
   203  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   204                           EECON1 equ 018Ch ;# 
   205  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   206                           EECON2 equ 018Dh ;# 
   207  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   208                           INDF equ 00h ;# 
   209  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   210                           TMR0 equ 01h ;# 
   211  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   212                           PCL equ 02h ;# 
   213  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   214                           STATUS equ 03h ;# 
   215  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   216                           FSR equ 04h ;# 
   217  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   218                           PORTA equ 05h ;# 
   219  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   220                           PORTB equ 06h ;# 
   221  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   222                           PORTC equ 07h ;# 
   223  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   224                           PORTD equ 08h ;# 
   225  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   226                           PORTE equ 09h ;# 
   227  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   228                           PCLATH equ 0Ah ;# 
   229  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   230                           INTCON equ 0Bh ;# 
   231  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   232                           PIR1 equ 0Ch ;# 
   233  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   234                           PIR2 equ 0Dh ;# 
   235  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   236                           TMR1 equ 0Eh ;# 
   237  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   238                           TMR1L equ 0Eh ;# 
   239  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   240                           TMR1H equ 0Fh ;# 
   241  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   242                           T1CON equ 010h ;# 
   243  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   244                           TMR2 equ 011h ;# 
   245  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   246                           T2CON equ 012h ;# 
   247  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   248                           SSPBUF equ 013h ;# 
   249  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   250                           SSPCON equ 014h ;# 
   251  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   252                           CCPR1 equ 015h ;# 
   253  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   254                           CCPR1L equ 015h ;# 
   255  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   256                           CCPR1H equ 016h ;# 
   257  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   258                           CCP1CON equ 017h ;# 
   259  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   260                           RCSTA equ 018h ;# 
   261  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   262                           TXREG equ 019h ;# 
   263  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   264                           RCREG equ 01Ah ;# 
   265  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   266                           CCPR2 equ 01Bh ;# 
   267  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   268                           CCPR2L equ 01Bh ;# 
   269  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   270                           CCPR2H equ 01Ch ;# 
   271  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   272                           CCP2CON equ 01Dh ;# 
   273  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   274                           ADRESH equ 01Eh ;# 
   275  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   276                           ADCON0 equ 01Fh ;# 
   277  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   278                           OPTION_REG equ 081h ;# 
   279  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   280                           TRISA equ 085h ;# 
   281  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   282                           TRISB equ 086h ;# 
   283  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   284                           TRISC equ 087h ;# 
   285  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   286                           TRISD equ 088h ;# 
   287  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   288                           TRISE equ 089h ;# 
   289  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   290                           PIE1 equ 08Ch ;# 
   291  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   292                           PIE2 equ 08Dh ;# 
   293  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   294                           PCON equ 08Eh ;# 
   295  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   296                           SSPCON2 equ 091h ;# 
   297  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   298                           PR2 equ 092h ;# 
   299  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   300                           SSPADD equ 093h ;# 
   301  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   302                           SSPSTAT equ 094h ;# 
   303  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   304                           TXSTA equ 098h ;# 
   305  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   306                           SPBRG equ 099h ;# 
   307  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   308                           CMCON equ 09Ch ;# 
   309  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   310                           CVRCON equ 09Dh ;# 
   311  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   312                           ADRESL equ 09Eh ;# 
   313  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   314                           ADCON1 equ 09Fh ;# 
   315  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   316                           EEDATA equ 010Ch ;# 
   317  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   318                           EEADR equ 010Dh ;# 
   319  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   320                           EEDATH equ 010Eh ;# 
   321  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   322                           EEADRH equ 010Fh ;# 
   323  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   324                           EECON1 equ 018Ch ;# 
   325  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   326                           EECON2 equ 018Dh ;# 
   327  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   328                           INDF equ 00h ;# 
   329  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   330                           TMR0 equ 01h ;# 
   331  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   332                           PCL equ 02h ;# 
   333  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   334                           STATUS equ 03h ;# 
   335  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   336                           FSR equ 04h ;# 
   337  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   338                           PORTA equ 05h ;# 
   339  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   340                           PORTB equ 06h ;# 
   341  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   342                           PORTC equ 07h ;# 
   343  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   344                           PORTD equ 08h ;# 
   345  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   346                           PORTE equ 09h ;# 
   347  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   348                           PCLATH equ 0Ah ;# 
   349  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   350                           INTCON equ 0Bh ;# 
   351  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   352                           PIR1 equ 0Ch ;# 
   353  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   354                           PIR2 equ 0Dh ;# 
   355  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   364                           TMR2 equ 011h ;# 
   365  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   366                           T2CON equ 012h ;# 
   367  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   368                           SSPBUF equ 013h ;# 
   369  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   370                           SSPCON equ 014h ;# 
   371  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   372                           CCPR1 equ 015h ;# 
   373  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   374                           CCPR1L equ 015h ;# 
   375  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   376                           CCPR1H equ 016h ;# 
   377  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   378                           CCP1CON equ 017h ;# 
   379  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   380                           RCSTA equ 018h ;# 
   381  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   382                           TXREG equ 019h ;# 
   383  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   384                           RCREG equ 01Ah ;# 
   385  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   386                           CCPR2 equ 01Bh ;# 
   387  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   388                           CCPR2L equ 01Bh ;# 
   389  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   390                           CCPR2H equ 01Ch ;# 
   391  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   392                           CCP2CON equ 01Dh ;# 
   393  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   394                           ADRESH equ 01Eh ;# 
   395  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   396                           ADCON0 equ 01Fh ;# 
   397  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   398                           OPTION_REG equ 081h ;# 
   399  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   400                           TRISA equ 085h ;# 
   401  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   402                           TRISB equ 086h ;# 
   403  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   404                           TRISC equ 087h ;# 
   405  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   406                           TRISD equ 088h ;# 
   407  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   408                           TRISE equ 089h ;# 
   409  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   410                           PIE1 equ 08Ch ;# 
   411  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   412                           PIE2 equ 08Dh ;# 
   413  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   414                           PCON equ 08Eh ;# 
   415  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   416                           SSPCON2 equ 091h ;# 
   417  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   418                           PR2 equ 092h ;# 
   419  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   420                           SSPADD equ 093h ;# 
   421  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   422                           SSPSTAT equ 094h ;# 
   423  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   424                           TXSTA equ 098h ;# 
   425  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   426                           SPBRG equ 099h ;# 
   427  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   428                           CMCON equ 09Ch ;# 
   429  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   430                           CVRCON equ 09Dh ;# 
   431  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   432                           ADRESL equ 09Eh ;# 
   433  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   434                           ADCON1 equ 09Fh ;# 
   435  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   436                           EEDATA equ 010Ch ;# 
   437  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   438                           EEADR equ 010Dh ;# 
   439  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   440                           EEDATH equ 010Eh ;# 
   441  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   442                           EEADRH equ 010Fh ;# 
   443  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   444                           EECON1 equ 018Ch ;# 
   445  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   446                           EECON2 equ 018Dh ;# 
   447  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   448                           INDF equ 00h ;# 
   449  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   450                           TMR0 equ 01h ;# 
   451  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   452                           PCL equ 02h ;# 
   453  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   454                           STATUS equ 03h ;# 
   455  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   456                           FSR equ 04h ;# 
   457  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   458                           PORTA equ 05h ;# 
   459  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   460                           PORTB equ 06h ;# 
   461  0006                     # 280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   462                           PORTC equ 07h ;# 
   463  0007                     # 342 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   464                           PORTD equ 08h ;# 
   465  0008                     # 404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   466                           PORTE equ 09h ;# 
   467  0009                     # 436 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   468                           PCLATH equ 0Ah ;# 
   469  000A                     # 456 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   470                           INTCON equ 0Bh ;# 
   471  000B                     # 534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   472                           PIR1 equ 0Ch ;# 
   473  000C                     # 596 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   474                           PIR2 equ 0Dh ;# 
   475  000D                     # 636 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   476                           TMR1 equ 0Eh ;# 
   477  000E                     # 643 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   478                           TMR1L equ 0Eh ;# 
   479  000E                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   480                           TMR1H equ 0Fh ;# 
   481  000F                     # 657 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   482                           T1CON equ 010h ;# 
   483  0010                     # 732 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   484                           TMR2 equ 011h ;# 
   485  0011                     # 739 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   486                           T2CON equ 012h ;# 
   487  0012                     # 810 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   488                           SSPBUF equ 013h ;# 
   489  0013                     # 817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   490                           SSPCON equ 014h ;# 
   491  0014                     # 887 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   492                           CCPR1 equ 015h ;# 
   493  0015                     # 894 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   494                           CCPR1L equ 015h ;# 
   495  0015                     # 901 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   496                           CCPR1H equ 016h ;# 
   497  0016                     # 908 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   498                           CCP1CON equ 017h ;# 
   499  0017                     # 966 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   500                           RCSTA equ 018h ;# 
   501  0018                     # 1061 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   502                           TXREG equ 019h ;# 
   503  0019                     # 1068 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   504                           RCREG equ 01Ah ;# 
   505  001A                     # 1075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   506                           CCPR2 equ 01Bh ;# 
   507  001B                     # 1082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   508                           CCPR2L equ 01Bh ;# 
   509  001B                     # 1089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   510                           CCPR2H equ 01Ch ;# 
   511  001C                     # 1096 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   512                           CCP2CON equ 01Dh ;# 
   513  001D                     # 1154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   514                           ADRESH equ 01Eh ;# 
   515  001E                     # 1161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   516                           ADCON0 equ 01Fh ;# 
   517  001F                     # 1257 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   518                           OPTION_REG equ 081h ;# 
   519  0081                     # 1327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   520                           TRISA equ 085h ;# 
   521  0085                     # 1377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   522                           TRISB equ 086h ;# 
   523  0086                     # 1439 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   524                           TRISC equ 087h ;# 
   525  0087                     # 1501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   526                           TRISD equ 088h ;# 
   527  0088                     # 1563 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   528                           TRISE equ 089h ;# 
   529  0089                     # 1620 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   530                           PIE1 equ 08Ch ;# 
   531  008C                     # 1682 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   532                           PIE2 equ 08Dh ;# 
   533  008D                     # 1722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   534                           PCON equ 08Eh ;# 
   535  008E                     # 1756 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   536                           SSPCON2 equ 091h ;# 
   537  0091                     # 1818 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   538                           PR2 equ 092h ;# 
   539  0092                     # 1825 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   540                           SSPADD equ 093h ;# 
   541  0093                     # 1832 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   542                           SSPSTAT equ 094h ;# 
   543  0094                     # 2001 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   544                           TXSTA equ 098h ;# 
   545  0098                     # 2082 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   546                           SPBRG equ 099h ;# 
   547  0099                     # 2089 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   548                           CMCON equ 09Ch ;# 
   549  009C                     # 2159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   550                           CVRCON equ 09Dh ;# 
   551  009D                     # 2224 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   552                           ADRESL equ 09Eh ;# 
   553  009E                     # 2231 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   554                           ADCON1 equ 09Fh ;# 
   555  009F                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   556                           EEDATA equ 010Ch ;# 
   557  010C                     # 2297 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   558                           EEADR equ 010Dh ;# 
   559  010D                     # 2304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   560                           EEDATH equ 010Eh ;# 
   561  010E                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   562                           EEADRH equ 010Fh ;# 
   563  010F                     # 2318 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   564                           EECON1 equ 018Ch ;# 
   565  018C                     # 2363 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f877a.h"
   566                           EECON2 equ 018Dh ;# 
   567  018D                     	FNCALL	_main,_LCD_close
   568                           	FNCALL	_main,_LCD_goto
   569                           	FNCALL	_main,_LCD_init
   570                           	FNCALL	_main,_LCD_open
   571                           	FNCALL	_main,_LCD_write_string
   572                           	FNCALL	_LCD_write_string,__LCD_write_lower_nibble
   573                           	FNCALL	_LCD_write_string,__LCD_write_upper_nibble
   574                           	FNCALL	_LCD_init,_LCD_open
   575                           	FNCALL	_LCD_init,_LCD_write_byte
   576                           	FNCALL	_LCD_goto,_LCD_write_byte
   577                           	FNCALL	_LCD_write_byte,__LCD_write_lower_nibble
   578                           	FNCALL	_LCD_write_byte,__LCD_write_upper_nibble
   579                           	FNCALL	__LCD_write_upper_nibble,__LCD_build_byte
   580                           	FNCALL	__LCD_write_lower_nibble,__LCD_build_byte
   581                           	FNROOT	_main
   582                           	global	_LCD_BL_Status
   583                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   584                           global __pidataBANK0
   585                           __pidataBANK0:
   586  03F1                     	file	"./LCD_I2C.h"
   587                           	line	81
   588                           
   589                           ;initializer for _LCD_BL_Status
   590                           	retlw	01h
   591  03F1  3401               	global	_pin_BL
   592                           	global	_pin_D7
   593                           	global	_pin_D6
   594                           	global	_pin_D5
   595                           	global	_pin_D4
   596                           	global	_pin_RS
   597                           	global	_pin_RW
   598                           	global	_pin_E
   599                           	global	_SSPBUF
   600                           _SSPBUF	set	0x13
   601  0013                     	global	_SSPCON
   602                           _SSPCON	set	0x14
   603  0014                     	global	_PORTD
   604                           _PORTD	set	0x8
   605  0008                     	global	_PORTBbits
   606                           _PORTBbits	set	0x6
   607  0006                     	global	_SSPSTATbits
   608                           _SSPSTATbits	set	0x94
   609  0094                     	global	_SSPCON2bits
   610                           _SSPCON2bits	set	0x91
   611  0091                     	global	_SSPCON2
   612                           _SSPCON2	set	0x91
   613  0091                     	global	_SSPSTAT
   614                           _SSPSTAT	set	0x94
   615  0094                     	global	_SSPADD
   616                           _SSPADD	set	0x93
   617  0093                     	global	_TRISD
   618                           _TRISD	set	0x88
   619  0088                     	global	_OPTION_REGbits
   620                           _OPTION_REGbits	set	0x81
   621  0081                     	global	_TRISB
   622                           _TRISB	set	0x86
   623  0086                     	global	_ACKEN
   624                           _ACKEN	set	0x48C
   625  048C                     	global	_ACKDT
   626                           _ACKDT	set	0x48D
   627  048D                     	global	_RCEN
   628                           _RCEN	set	0x48B
   629  048B                     	global	_PEN
   630                           _PEN	set	0x48A
   631  048A                     	global	_RSEN
   632                           _RSEN	set	0x489
   633  0489                     	global	_SEN
   634                           _SEN	set	0x488
   635  0488                     	global	_TRISC4
   636                           _TRISC4	set	0x43C
   637  043C                     	global	_TRISC3
   638                           _TRISC3	set	0x43B
   639  043B                     psect	strings,class=STRING,delta=2,noexec
   640                           global __pstrings
   641                           __pstrings:
   642  0003                     stringtab:
   643  0003                     	global    __stringtab
   644                           __stringtab:
   645  0003                     ;	String table - string pointers are 1 byte each
   646                           stringcode:stringdir:
   647  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   648  0003  3000               movwf pclath
   649  0004  008A               movf fsr,w
   650  0005  0804               incf fsr
   651  0006  0A84               	addwf pc
   652  0007  0782               	global __stringbase
   653                           __stringbase:
   654  0008                     	retlw	0
   655  0008  3400               psect	strings
   656                           	global    __end_of__stringtab
   657                           __end_of__stringtab:
   658  0009                     	
   659                           STR_1:	
   660  0009                     	retlw	42	;'*'
   661  0009  342A               	retlw	42	;'*'
   662  000A  342A               	retlw	32	;' '
   663  000B  3420               	retlw	76	;'L'
   664  000C  344C               	retlw	67	;'C'
   665  000D  3443               	retlw	68	;'D'
   666  000E  3444               	retlw	32	;' '
   667  000F  3420               	retlw	116	;'t'
   668  0010  3474               	retlw	101	;'e'
   669  0011  3465               	retlw	115	;'s'
   670  0012  3473               	retlw	116	;'t'
   671  0013  3474               	retlw	32	;' '
   672  0014  3420               	retlw	42	;'*'
   673  0015  342A               	retlw	42	;'*'
   674  0016  342A               	retlw	0
   675  0017  3400               psect	strings
   676                           	
   677                           STR_2:	
   678  0018                     	retlw	32	;' '
   679  0018  3420               	retlw	0
   680  0019  3400               psect	strings
   681                           ; #config settings
   682                           global __CFG_FOSC$XT
   683                           __CFG_FOSC$XT equ 0x0
   684  0000                     global __CFG_WDTE$OFF
   685                           __CFG_WDTE$OFF equ 0x0
   686  0000                     global __CFG_PWRTE$OFF
   687                           __CFG_PWRTE$OFF equ 0x0
   688  0000                     global __CFG_BOREN$OFF
   689                           __CFG_BOREN$OFF equ 0x0
   690  0000                     global __CFG_LVP$OFF
   691                           __CFG_LVP$OFF equ 0x0
   692  0000                     global __CFG_CPD$OFF
   693                           __CFG_CPD$OFF equ 0x0
   694  0000                     global __CFG_WRT$OFF
   695                           __CFG_WRT$OFF equ 0x0
   696  0000                     global __CFG_CP$OFF
   697                           __CFG_CP$OFF equ 0x0
   698  0000                     	file	"C:\Users\sabdulqa\AppData\Local\Temp\sieg."
   699                           	line	#
   700                           psect cinit,class=CODE,delta=2
   701                           global start_initialization
   702                           start_initialization:
   703  07EE                     
   704                           global __initialization
   705                           __initialization:
   706  07EE                     psect	bssBANK0,class=BANK0,space=1,noexec
   707                           global __pbssBANK0
   708                           __pbssBANK0:
   709  0020                     _pin_BL:
   710  0020                            ds      1
   711  0020                     
   712                           _pin_D7:
   713  0021                            ds      1
   714  0021                     
   715                           _pin_D6:
   716  0022                            ds      1
   717  0022                     
   718                           _pin_D5:
   719  0023                            ds      1
   720  0023                     
   721                           _pin_D4:
   722  0024                            ds      1
   723  0024                     
   724                           _pin_RS:
   725  0025                            ds      1
   726  0025                     
   727                           _pin_RW:
   728  0026                            ds      1
   729  0026                     
   730                           _pin_E:
   731  0027                            ds      1
   732  0027                     
   733                           psect	dataBANK0,class=BANK0,space=1,noexec
   734                           global __pdataBANK0
   735                           __pdataBANK0:
   736  002B                     	file	"./LCD_I2C.h"
   737                           	line	81
   738                           _LCD_BL_Status:
   739  002B                            ds      1
   740  002B                     
   741                           	file	"C:\Users\sabdulqa\AppData\Local\Temp\sieg."
   742                           	line	#
   743                           ; Initialize objects allocated to BANK0
   744                           	global __pidataBANK0
   745                           psect cinit,class=CODE,delta=2,merge=1
   746                           	fcall	__pidataBANK0+0		;fetch initializer
   747  07EE  120A  118A  23F1  120A  118A  	movwf	__pdataBANK0+0&07fh		
   748  07F3  00AB               	line	#
   749                           ; Clear objects allocated to BANK0
   750                           psect cinit,class=CODE,delta=2,merge=1
   751                           	clrf	((__pbssBANK0)+0)&07Fh
   752  07F4  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   753  07F5  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   754  07F6  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   755  07F7  01A3               	clrf	((__pbssBANK0)+4)&07Fh
   756  07F8  01A4               	clrf	((__pbssBANK0)+5)&07Fh
   757  07F9  01A5               	clrf	((__pbssBANK0)+6)&07Fh
   758  07FA  01A6               	clrf	((__pbssBANK0)+7)&07Fh
   759  07FB  01A7               psect cinit,class=CODE,delta=2,merge=1
   760                           global end_of_initialization,__end_of__initialization
   761                           
   762                           ;End of C runtime variable initialization code
   763                           
   764                           end_of_initialization:
   765  07FC                     __end_of__initialization:
   766  07FC                     clrf status
   767  07FC  0183               ljmp _main	;jump to C main() function
   768  07FD  120A  118A  2F10   psect	cstackCOMMON,class=COMMON,space=1,noexec
   769                           global __pcstackCOMMON
   770                           __pcstackCOMMON:
   771  0070                     ?_LCD_open:	; 1 bytes @ 0x0
   772  0070                     ??_LCD_open:	; 1 bytes @ 0x0
   773  0070                     ?_LCD_init:	; 1 bytes @ 0x0
   774  0070                     ?_LCD_write_string:	; 1 bytes @ 0x0
   775  0070                     ?_LCD_close:	; 1 bytes @ 0x0
   776  0070                     ??_LCD_close:	; 1 bytes @ 0x0
   777  0070                     ?__LCD_write_upper_nibble:	; 1 bytes @ 0x0
   778  0070                     ?__LCD_write_lower_nibble:	; 1 bytes @ 0x0
   779  0070                     ?__LCD_build_byte:	; 1 bytes @ 0x0
   780  0070                     ??__LCD_build_byte:	; 1 bytes @ 0x0
   781  0070                     ?_main:	; 1 bytes @ 0x0
   782  0070                     	ds	2
   783  0070                     	global	__LCD_build_byte@ret
   784                           __LCD_build_byte@ret:	; 1 bytes @ 0x2
   785  0072                     	ds	1
   786  0072                     ??__LCD_write_upper_nibble:	; 1 bytes @ 0x3
   787  0073                     ??__LCD_write_lower_nibble:	; 1 bytes @ 0x3
   788  0073                     	global	__LCD_write_upper_nibble@u
   789                           __LCD_write_upper_nibble@u:	; 1 bytes @ 0x3
   790  0073                     	global	__LCD_write_lower_nibble@l
   791                           __LCD_write_lower_nibble@l:	; 1 bytes @ 0x3
   792  0073                     	ds	1
   793  0073                     ??_LCD_write_string:	; 1 bytes @ 0x4
   794  0074                     ?_LCD_write_byte:	; 1 bytes @ 0x4
   795  0074                     	global	LCD_write_byte@n
   796                           LCD_write_byte@n:	; 1 bytes @ 0x4
   797  0074                     	ds	1
   798  0074                     ??_LCD_write_byte:	; 1 bytes @ 0x5
   799  0075                     	global	LCD_write_string@str
   800                           LCD_write_string@str:	; 1 bytes @ 0x5
   801  0075                     	ds	1
   802  0075                     	global	LCD_write_byte@address
   803                           LCD_write_byte@address:	; 1 bytes @ 0x6
   804  0076                     	ds	1
   805  0076                     ??_LCD_init:	; 1 bytes @ 0x7
   806  0077                     ?_LCD_goto:	; 1 bytes @ 0x7
   807  0077                     	global	LCD_goto@y
   808                           LCD_goto@y:	; 1 bytes @ 0x7
   809  0077                     	ds	1
   810  0077                     ??_LCD_goto:	; 1 bytes @ 0x8
   811  0078                     	ds	2
   812  0078                     	global	LCD_goto@x
   813                           LCD_goto@x:	; 1 bytes @ 0xA
   814  007A                     	ds	1
   815  007A                     	global	LCD_goto@address
   816                           LCD_goto@address:	; 1 bytes @ 0xB
   817  007B                     	ds	1
   818  007B                     	global	main@m
   819                           main@m:	; 1 bytes @ 0xC
   820  007C                     	ds	1
   821  007C                     	global	main@portValue
   822                           main@portValue:	; 1 bytes @ 0xD
   823  007D                     	ds	1
   824  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
   825                           global __pcstackBANK0
   826                           __pcstackBANK0:
   827  0028                     ??_main:	; 1 bytes @ 0x0
   828  0028                     	ds	3
   829  0028                     ;!
   830                           ;!Data Sizes:
   831                           ;!    Strings     17
   832                           ;!    Constant    0
   833                           ;!    Data        1
   834                           ;!    BSS         8
   835                           ;!    Persistent  0
   836                           ;!    Stack       0
   837                           ;!
   838                           ;!Auto Spaces:
   839                           ;!    Space          Size  Autos    Used
   840                           ;!    COMMON           14     14      14
   841                           ;!    BANK0            80      3      12
   842                           ;!    BANK1            80      0       0
   843                           ;!    BANK3            96      0       0
   844                           ;!    BANK2            96      0       0
   845                           
   846                           ;!
   847                           ;!Pointer List with Targets:
   848                           ;!
   849                           ;!    LCD_write_string@str	PTR const unsigned char  size(1) Largest target is 15
   850                           ;!		 -> STR_2(CODE[2]), STR_1(CODE[15]), 
   851                           ;!
   852                           
   853                           
   854                           ;!
   855                           ;!Critical Paths under _main in COMMON
   856                           ;!
   857                           ;!    _main->_LCD_goto
   858                           ;!    _LCD_write_string->__LCD_write_lower_nibble
   859                           ;!    _LCD_write_string->__LCD_write_upper_nibble
   860                           ;!    _LCD_init->_LCD_write_byte
   861                           ;!    _LCD_goto->_LCD_write_byte
   862                           ;!    _LCD_write_byte->__LCD_write_lower_nibble
   863                           ;!    _LCD_write_byte->__LCD_write_upper_nibble
   864                           ;!    __LCD_write_upper_nibble->__LCD_build_byte
   865                           ;!    __LCD_write_lower_nibble->__LCD_build_byte
   866                           ;!
   867                           ;!Critical Paths under _main in BANK0
   868                           ;!
   869                           ;!    None.
   870                           ;!
   871                           ;!Critical Paths under _main in BANK1
   872                           ;!
   873                           ;!    None.
   874                           ;!
   875                           ;!Critical Paths under _main in BANK3
   876                           ;!
   877                           ;!    None.
   878                           ;!
   879                           ;!Critical Paths under _main in BANK2
   880                           ;!
   881                           ;!    None.
   882                           
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   885 ;;
   886                           
   887                           ;!
   888                           ;!Call Graph Tables:
   889                           ;!
   890                           ;! ---------------------------------------------------------------------------------
   891                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   892                           ;! ---------------------------------------------------------------------------------
   893                           ;! (0) _main                                                 5     5      0    3265
   894                           ;!                                             12 COMMON     2     2      0
   895                           ;!                                              0 BANK0      3     3      0
   896                           ;!                          _LCD_close
   897                           ;!                           _LCD_goto
   898                           ;!                           _LCD_init
   899                           ;!                           _LCD_open
   900                           ;!                   _LCD_write_string
   901                           ;! ---------------------------------------------------------------------------------
   902                           ;! (1) _LCD_write_string                                     2     2      0     371
   903                           ;!                                              4 COMMON     2     2      0
   904                           ;!            __LCD_write_lower_nibble
   905                           ;!            __LCD_write_upper_nibble
   906                           ;! ---------------------------------------------------------------------------------
   907                           ;! (1) _LCD_init                                             2     2      0    1216
   908                           ;!                                              7 COMMON     2     2      0
   909                           ;!                           _LCD_open
   910                           ;!                     _LCD_write_byte
   911                           ;! ---------------------------------------------------------------------------------
   912                           ;! (1) _LCD_open                                             1     1      0       0
   913                           ;!                                              0 COMMON     1     1      0
   914                           ;! ---------------------------------------------------------------------------------
   915                           ;! (1) _LCD_goto                                             5     4      1    1516
   916                           ;!                                              7 COMMON     5     4      1
   917                           ;!                     _LCD_write_byte
   918                           ;! ---------------------------------------------------------------------------------
   919                           ;! (2) _LCD_write_byte                                       3     2      1    1216
   920                           ;!                                              4 COMMON     3     2      1
   921                           ;!            __LCD_write_lower_nibble
   922                           ;!            __LCD_write_upper_nibble
   923                           ;! ---------------------------------------------------------------------------------
   924                           ;! (2) __LCD_write_upper_nibble                              1     1      0     119
   925                           ;!                                              3 COMMON     1     1      0
   926                           ;!                    __LCD_build_byte
   927                           ;! ---------------------------------------------------------------------------------
   928                           ;! (2) __LCD_write_lower_nibble                              1     1      0     119
   929                           ;!                                              3 COMMON     1     1      0
   930                           ;!                    __LCD_build_byte
   931                           ;! ---------------------------------------------------------------------------------
   932                           ;! (3) __LCD_build_byte                                      3     3      0      31
   933                           ;!                                              0 COMMON     3     3      0
   934                           ;! ---------------------------------------------------------------------------------
   935                           ;! (1) _LCD_close                                            1     1      0       0
   936                           ;!                                              0 COMMON     1     1      0
   937                           ;! ---------------------------------------------------------------------------------
   938                           ;! Estimated maximum stack depth 3
   939                           ;! ---------------------------------------------------------------------------------
   940                           ;!
   941                           ;! Call Graph Graphs:
   942                           ;!
   943                           ;! _main (ROOT)
   944                           ;!   _LCD_close
   945                           ;!   _LCD_goto
   946                           ;!     _LCD_write_byte
   947                           ;!       __LCD_write_lower_nibble
   948                           ;!         __LCD_build_byte
   949                           ;!       __LCD_write_upper_nibble
   950                           ;!         __LCD_build_byte
   951                           ;!   _LCD_init
   952                           ;!     _LCD_open
   953                           ;!     _LCD_write_byte
   954                           ;!       __LCD_write_lower_nibble
   955                           ;!         __LCD_build_byte
   956                           ;!       __LCD_write_upper_nibble
   957                           ;!         __LCD_build_byte
   958                           ;!   _LCD_open
   959                           ;!   _LCD_write_string
   960                           ;!     __LCD_write_lower_nibble
   961                           ;!       __LCD_build_byte
   962                           ;!     __LCD_write_upper_nibble
   963                           ;!       __LCD_build_byte
   964                           ;!
   965                           
   966                           ;! Address spaces:
   967                           
   968                           ;!Name               Size   Autos  Total    Cost      Usage
   969                           ;!BANK3               60      0       0       9        0.0%
   970                           ;!BITBANK3            60      0       0       8        0.0%
   971                           ;!SFR3                 0      0       0       4        0.0%
   972                           ;!BITSFR3              0      0       0       4        0.0%
   973                           ;!BANK2               60      0       0      11        0.0%
   974                           ;!BITBANK2            60      0       0      10        0.0%
   975                           ;!SFR2                 0      0       0       5        0.0%
   976                           ;!BITSFR2              0      0       0       5        0.0%
   977                           ;!BANK1               50      0       0       7        0.0%
   978                           ;!BITBANK1            50      0       0       6        0.0%
   979                           ;!SFR1                 0      0       0       2        0.0%
   980                           ;!BITSFR1              0      0       0       2        0.0%
   981                           ;!BANK0               50      3       C       5       15.0%
   982                           ;!BITBANK0            50      0       0       4        0.0%
   983                           ;!SFR0                 0      0       0       1        0.0%
   984                           ;!BITSFR0              0      0       0       1        0.0%
   985                           ;!COMMON               E      E       E       1      100.0%
   986                           ;!BITCOMMON            E      0       0       0        0.0%
   987                           ;!CODE                 0      0       0       0        0.0%
   988                           ;!DATA                 0      0      1A      12        0.0%
   989                           ;!ABS                  0      0      1A       3        0.0%
   990                           ;!NULL                 0      0       0       0        0.0%
   991                           ;!STACK                0      0       0       2        0.0%
   992                           ;!EEDATA             100      0       0       0        0.0%
   993                           
   994                           	global	_main
   995                           
   996 ;; *************** function _main *****************
   997 ;; Defined at:
   998 ;;		line 64 in file "main.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  portValue       1   13[COMMON] unsigned char 
  1003 ;;  m               1   12[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : B00/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         2       0       0       0       0
  1015 ;;      Temps:          0       3       0       0       0
  1016 ;;      Totals:         2       3       0       0       0
  1017 ;;Total ram usage:        5 bytes
  1018 ;; Hardware stack levels required when called:    4
  1019 ;; This function calls:
  1020 ;;		_LCD_close
  1021 ;;		_LCD_goto
  1022 ;;		_LCD_init
  1023 ;;		_LCD_open
  1024 ;;		_LCD_write_string
  1025 ;; This function is called by:
  1026 ;;		Startup code after reset
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1030                           	file	"main.c"
  1031                           	line	64
  1032                           global __pmaintext
  1033                           __pmaintext:	;psect for function _main
  1034  0710                     psect	maintext
  1035                           	file	"main.c"
  1036                           	line	64
  1037                           	global	__size_of_main
  1038                           	__size_of_main	equ	__end_of_main-_main
  1039  00DE                     	
  1040                           _main:	
  1041  0710                     ;incstack = 0
  1042                           	opt	stack 4
  1043                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1044                           	line	72
  1045                           	
  1046                           l1397:	
  1047  0710                     ;main.c: 65:     unsigned char portValue,m;;main.c: 72:     TRISB = 0x0f;
  1048                           	movlw	low(0Fh)
  1049  0710  300F               	bsf	status, 5	;RP0=1, select bank1
  1050  0711  1683               	bcf	status, 6	;RP1=0, select bank1
  1051  0712  1303               	movwf	(134)^080h	;volatile
  1052  0713  0086               	line	73
  1053                           	
  1054                           l1399:	
  1055  0714                     ;main.c: 73:     OPTION_REGbits.nRBPU =0;
  1056                           	bcf	(129)^080h,7	;volatile
  1057  0714  1381               	line	76
  1058                           	
  1059                           l1401:	
  1060  0715                     ;main.c: 76:     TRISD = 0x0;
  1061                           	clrf	(136)^080h	;volatile
  1062  0715  0188               	line	78
  1063                           ;main.c: 78:     while(1) {
  1064                           	
  1065                           l57:	
  1066  0716                     	line	82
  1067                           ;main.c: 82:         m = PORTBbits.RB0;
  1068                           	movlw	0
  1069  0716  3000               	bcf	status, 5	;RP0=0, select bank0
  1070  0717  1283               	bcf	status, 6	;RP1=0, select bank0
  1071  0718  1303               	btfsc	(6),0	;volatile
  1072  0719  1806               	movlw	1
  1073  071A  3001               	movwf	(main@m)
  1074  071B  00FC               	line	83
  1075                           	
  1076                           l1403:	
  1077  071C                     ;main.c: 83:         if(m == 0)
  1078                           	movf	((main@m)),w
  1079  071C  087C               	btfss	status,2
  1080  071D  1D03               	goto	u911
  1081  071E  2F20               	goto	u910
  1082  071F  2F21               u911:
  1083  0720                     	goto	l1407
  1084  0720  2F4C               u910:
  1085  0721                     	line	85
  1086                           	
  1087                           l1405:	
  1088  0721                     ;main.c: 84:         {;main.c: 85:         portValue = 0x55;
  1089                           	movlw	low(055h)
  1090  0721  3055               	movwf	(??_main+0)+0
  1091  0722  00A8               	movf	(??_main+0)+0,w
  1092  0723  0828               	movwf	(main@portValue)
  1093  0724  00FD               	line	86
  1094                           ;main.c: 86:         PORTD = portValue;
  1095                           	movf	(main@portValue),w
  1096  0725  087D               	movwf	(8)	;volatile
  1097  0726  0088               	line	88
  1098                           ;main.c: 88:         _delay(250000);
  1099                           	opt asmopt_push
  1100                           opt asmopt_off
  1101                           movlw  2
  1102  0727  3002               	bcf	status, 5	;RP0=0, select bank0
  1103  0728  1283               	bcf	status, 6	;RP1=0, select bank0
  1104  0729  1303               movwf	((??_main+0)+0+2),f
  1105  072A  00AA               movlw	69
  1106  072B  3045               movwf	((??_main+0)+0+1),f
  1107  072C  00A9               	movlw	169
  1108  072D  30A9               movwf	((??_main+0)+0),f
  1109  072E  00A8               	u957:
  1110  072F                     decfsz	((??_main+0)+0),f
  1111  072F  0BA8               	goto	u957
  1112  0730  2F2F               	decfsz	((??_main+0)+0+1),f
  1113  0731  0BA9               	goto	u957
  1114  0732  2F2F               	decfsz	((??_main+0)+0+2),f
  1115  0733  0BAA               	goto	u957
  1116  0734  2F2F               opt asmopt_pop
  1117                           
  1118                           	line	90
  1119                           ;main.c: 90:         portValue = 0xaa;
  1120                           	movlw	low(0AAh)
  1121  0735  30AA               	bcf	status, 5	;RP0=0, select bank0
  1122  0736  1283               	bcf	status, 6	;RP1=0, select bank0
  1123  0737  1303               	movwf	(??_main+0)+0
  1124  0738  00A8               	movf	(??_main+0)+0,w
  1125  0739  0828               	movwf	(main@portValue)
  1126  073A  00FD               	line	91
  1127                           ;main.c: 91:         PORTD = portValue;
  1128                           	movf	(main@portValue),w
  1129  073B  087D               	movwf	(8)	;volatile
  1130  073C  0088               	line	93
  1131                           ;main.c: 93:         _delay(250000);
  1132                           	opt asmopt_push
  1133                           opt asmopt_off
  1134                           movlw  2
  1135  073D  3002               	bcf	status, 5	;RP0=0, select bank0
  1136  073E  1283               	bcf	status, 6	;RP1=0, select bank0
  1137  073F  1303               movwf	((??_main+0)+0+2),f
  1138  0740  00AA               movlw	69
  1139  0741  3045               movwf	((??_main+0)+0+1),f
  1140  0742  00A9               	movlw	169
  1141  0743  30A9               movwf	((??_main+0)+0),f
  1142  0744  00A8               	u967:
  1143  0745                     decfsz	((??_main+0)+0),f
  1144  0745  0BA8               	goto	u967
  1145  0746  2F45               	decfsz	((??_main+0)+0+1),f
  1146  0747  0BA9               	goto	u967
  1147  0748  2F45               	decfsz	((??_main+0)+0+2),f
  1148  0749  0BAA               	goto	u967
  1149  074A  2F45               opt asmopt_pop
  1150                           
  1151                           	goto	l1407
  1152  074B  2F4C               	line	97
  1153                           ;main.c: 97:         }
  1154                           	
  1155                           l58:	
  1156  074C                     	line	98
  1157                           	
  1158                           l1407:	
  1159  074C                     ;main.c: 98:         m = PORTBbits.RB1;
  1160                           	movlw	0
  1161  074C  3000               	bcf	status, 5	;RP0=0, select bank0
  1162  074D  1283               	bcf	status, 6	;RP1=0, select bank0
  1163  074E  1303               	btfsc	(6),1	;volatile
  1164  074F  1886               	movlw	1
  1165  0750  3001               	movwf	(main@m)
  1166  0751  00FC               	line	99
  1167                           	
  1168                           l1409:	
  1169  0752                     ;main.c: 99:         if(m == 0)
  1170                           	movf	((main@m)),w
  1171  0752  087C               	btfss	status,2
  1172  0753  1D03               	goto	u921
  1173  0754  2F56               	goto	u920
  1174  0755  2F57               u921:
  1175  0756                     	goto	l1413
  1176  0756  2F82               u920:
  1177  0757                     	line	101
  1178                           	
  1179                           l1411:	
  1180  0757                     ;main.c: 100:         {;main.c: 101:         portValue = 0x0f;
  1181                           	movlw	low(0Fh)
  1182  0757  300F               	movwf	(??_main+0)+0
  1183  0758  00A8               	movf	(??_main+0)+0,w
  1184  0759  0828               	movwf	(main@portValue)
  1185  075A  00FD               	line	102
  1186                           ;main.c: 102:         PORTD = portValue;
  1187                           	movf	(main@portValue),w
  1188  075B  087D               	movwf	(8)	;volatile
  1189  075C  0088               	line	104
  1190                           ;main.c: 104:         _delay(250000);
  1191                           	opt asmopt_push
  1192                           opt asmopt_off
  1193                           movlw  2
  1194  075D  3002               	bcf	status, 5	;RP0=0, select bank0
  1195  075E  1283               	bcf	status, 6	;RP1=0, select bank0
  1196  075F  1303               movwf	((??_main+0)+0+2),f
  1197  0760  00AA               movlw	69
  1198  0761  3045               movwf	((??_main+0)+0+1),f
  1199  0762  00A9               	movlw	169
  1200  0763  30A9               movwf	((??_main+0)+0),f
  1201  0764  00A8               	u977:
  1202  0765                     decfsz	((??_main+0)+0),f
  1203  0765  0BA8               	goto	u977
  1204  0766  2F65               	decfsz	((??_main+0)+0+1),f
  1205  0767  0BA9               	goto	u977
  1206  0768  2F65               	decfsz	((??_main+0)+0+2),f
  1207  0769  0BAA               	goto	u977
  1208  076A  2F65               opt asmopt_pop
  1209                           
  1210                           	line	106
  1211                           ;main.c: 106:         portValue = 0xf0;
  1212                           	movlw	low(0F0h)
  1213  076B  30F0               	bcf	status, 5	;RP0=0, select bank0
  1214  076C  1283               	bcf	status, 6	;RP1=0, select bank0
  1215  076D  1303               	movwf	(??_main+0)+0
  1216  076E  00A8               	movf	(??_main+0)+0,w
  1217  076F  0828               	movwf	(main@portValue)
  1218  0770  00FD               	line	107
  1219                           ;main.c: 107:         PORTD = portValue;
  1220                           	movf	(main@portValue),w
  1221  0771  087D               	movwf	(8)	;volatile
  1222  0772  0088               	line	109
  1223                           ;main.c: 109:         _delay(250000);
  1224                           	opt asmopt_push
  1225                           opt asmopt_off
  1226                           movlw  2
  1227  0773  3002               	bcf	status, 5	;RP0=0, select bank0
  1228  0774  1283               	bcf	status, 6	;RP1=0, select bank0
  1229  0775  1303               movwf	((??_main+0)+0+2),f
  1230  0776  00AA               movlw	69
  1231  0777  3045               movwf	((??_main+0)+0+1),f
  1232  0778  00A9               	movlw	169
  1233  0779  30A9               movwf	((??_main+0)+0),f
  1234  077A  00A8               	u987:
  1235  077B                     decfsz	((??_main+0)+0),f
  1236  077B  0BA8               	goto	u987
  1237  077C  2F7B               	decfsz	((??_main+0)+0+1),f
  1238  077D  0BA9               	goto	u987
  1239  077E  2F7B               	decfsz	((??_main+0)+0+2),f
  1240  077F  0BAA               	goto	u987
  1241  0780  2F7B               opt asmopt_pop
  1242                           
  1243                           	goto	l1413
  1244  0781  2F82               	line	113
  1245                           ;main.c: 113:         }
  1246                           	
  1247                           l59:	
  1248  0782                     	line	121
  1249                           	
  1250                           l1413:	
  1251  0782                     ;main.c: 121:         TRISC3 = 1;
  1252                           	bsf	status, 5	;RP0=1, select bank1
  1253  0782  1683               	bcf	status, 6	;RP1=0, select bank1
  1254  0783  1303               	bsf	(1083/8)^080h,(1083)&7	;volatile
  1255  0784  1587               	line	122
  1256                           	
  1257                           l1415:	
  1258  0785                     ;main.c: 122:     TRISC4 = 1;
  1259                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1260  0785  1607               	line	124
  1261                           	
  1262                           l1417:	
  1263  0786                     ;main.c: 124:     TRISC4=1; TRISC3=1; SSPADD=((4000000/(4000*100) - 1)); SSPSTAT=0x0; SS
                                 PCON=0b00101000; SSPCON2 = 0;
  1264                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1265  0786  1607               	
  1266                           l1419:	
  1267  0787                     	bsf	(1083/8)^080h,(1083)&7	;volatile
  1268  0787  1587               	movlw	low(04Ch)
  1269  0788  304C               	movwf	(147)^080h	;volatile
  1270  0789  0093               	
  1271                           l1421:	
  1272  078A                     	clrf	(148)^080h	;volatile
  1273  078A  0194               	
  1274                           l1423:	
  1275  078B                     	movlw	low(028h)
  1276  078B  3028               	bcf	status, 5	;RP0=0, select bank0
  1277  078C  1283               	bcf	status, 6	;RP1=0, select bank0
  1278  078D  1303               	movwf	(20)	;volatile
  1279  078E  0094               	bsf	status, 5	;RP0=1, select bank1
  1280  078F  1683               	bcf	status, 6	;RP1=0, select bank1
  1281  0790  1303               	clrf	(145)^080h	;volatile
  1282  0791  0191               	goto	l1425
  1283  0792  2F93               	line	126
  1284                           ;main.c: 126:     while(1) {
  1285                           	
  1286                           l60:	
  1287  0793                     	line	127
  1288                           	
  1289                           l1425:	
  1290  0793                     ;main.c: 127:     LCD_open();
  1291                           	fcall	_LCD_open
  1292  0793  120A  118A  249D  120A  118A  	line	128
  1293                           	
  1294                           l1427:	
  1295  0798                     ;main.c: 128:     LCD_init();
  1296                           	fcall	_LCD_init
  1297  0798  120A  118A  266C  120A  118A  	line	130
  1298                           	
  1299                           l1429:	
  1300  079D                     ;main.c: 130:     LCD_goto(1,1);
  1301                           	clrf	(LCD_goto@y)
  1302  079D  01F7               	incf	(LCD_goto@y),f
  1303  079E  0AF7               	movlw	low(01h)
  1304  079F  3001               	fcall	_LCD_goto
  1305  07A0  120A  118A  2460  120A  118A  	line	131
  1306                           	
  1307                           l1431:	
  1308  07A5                     ;main.c: 131:     LCD_write_string("** LCD test **");
  1309                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1310  07A5  3001               	fcall	_LCD_write_string
  1311  07A6  120A  118A  2429  120A  118A  	line	132
  1312                           	
  1313                           l1433:	
  1314  07AB                     ;main.c: 132:     LCD_close();
  1315                           	fcall	_LCD_close
  1316  07AB  120A  118A  23F2  120A  118A  	line	133
  1317                           	
  1318                           l1435:	
  1319  07B0                     ;main.c: 133:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1320                           	opt asmopt_push
  1321                           opt asmopt_off
  1322                           movlw  6
  1323  07B0  3006               	bcf	status, 5	;RP0=0, select bank0
  1324  07B1  1283               	bcf	status, 6	;RP1=0, select bank0
  1325  07B2  1303               movwf	((??_main+0)+0+2),f
  1326  07B3  00AA               movlw	19
  1327  07B4  3013               movwf	((??_main+0)+0+1),f
  1328  07B5  00A9               	movlw	173
  1329  07B6  30AD               movwf	((??_main+0)+0),f
  1330  07B7  00A8               	u997:
  1331  07B8                     decfsz	((??_main+0)+0),f
  1332  07B8  0BA8               	goto	u997
  1333  07B9  2FB8               	decfsz	((??_main+0)+0+1),f
  1334  07BA  0BA9               	goto	u997
  1335  07BB  2FB8               	decfsz	((??_main+0)+0+2),f
  1336  07BC  0BAA               	goto	u997
  1337  07BD  2FB8               opt asmopt_pop
  1338                           
  1339                           	line	134
  1340                           	
  1341                           l1437:	
  1342  07BE                     ;main.c: 134:      portValue = 0x0f;
  1343                           	movlw	low(0Fh)
  1344  07BE  300F               	bcf	status, 5	;RP0=0, select bank0
  1345  07BF  1283               	bcf	status, 6	;RP1=0, select bank0
  1346  07C0  1303               	movwf	(??_main+0)+0
  1347  07C1  00A8               	movf	(??_main+0)+0,w
  1348  07C2  0828               	movwf	(main@portValue)
  1349  07C3  00FD               	line	135
  1350                           	
  1351                           l1439:	
  1352  07C4                     ;main.c: 135:         PORTD = 0x1;
  1353                           	movlw	low(01h)
  1354  07C4  3001               	movwf	(8)	;volatile
  1355  07C5  0088               	line	137
  1356                           	
  1357                           l1441:	
  1358  07C6                     ;main.c: 137:         _delay(250000);
  1359                           	opt asmopt_push
  1360                           opt asmopt_off
  1361                           movlw  2
  1362  07C6  3002               	bcf	status, 5	;RP0=0, select bank0
  1363  07C7  1283               	bcf	status, 6	;RP1=0, select bank0
  1364  07C8  1303               movwf	((??_main+0)+0+2),f
  1365  07C9  00AA               movlw	69
  1366  07CA  3045               movwf	((??_main+0)+0+1),f
  1367  07CB  00A9               	movlw	169
  1368  07CC  30A9               movwf	((??_main+0)+0),f
  1369  07CD  00A8               	u1007:
  1370  07CE                     decfsz	((??_main+0)+0),f
  1371  07CE  0BA8               	goto	u1007
  1372  07CF  2FCE               	decfsz	((??_main+0)+0+1),f
  1373  07D0  0BA9               	goto	u1007
  1374  07D1  2FCE               	decfsz	((??_main+0)+0+2),f
  1375  07D2  0BAA               	goto	u1007
  1376  07D3  2FCE               opt asmopt_pop
  1377                           
  1378                           	line	139
  1379                           	
  1380                           l1443:	
  1381  07D4                     ;main.c: 139:         portValue = 0x0;
  1382                           	clrf	(main@portValue)
  1383  07D4  01FD               	line	140
  1384                           	
  1385                           l1445:	
  1386  07D5                     ;main.c: 140:         PORTD = portValue;
  1387                           	movf	(main@portValue),w
  1388  07D5  087D               	bcf	status, 5	;RP0=0, select bank0
  1389  07D6  1283               	bcf	status, 6	;RP1=0, select bank0
  1390  07D7  1303               	movwf	(8)	;volatile
  1391  07D8  0088               	line	142
  1392                           	
  1393                           l1447:	
  1394  07D9                     ;main.c: 142:         _delay(250000);
  1395                           	opt asmopt_push
  1396                           opt asmopt_off
  1397                           movlw  2
  1398  07D9  3002               	bcf	status, 5	;RP0=0, select bank0
  1399  07DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1400  07DB  1303               movwf	((??_main+0)+0+2),f
  1401  07DC  00AA               movlw	69
  1402  07DD  3045               movwf	((??_main+0)+0+1),f
  1403  07DE  00A9               	movlw	169
  1404  07DF  30A9               movwf	((??_main+0)+0),f
  1405  07E0  00A8               	u1017:
  1406  07E1                     decfsz	((??_main+0)+0),f
  1407  07E1  0BA8               	goto	u1017
  1408  07E2  2FE1               	decfsz	((??_main+0)+0+1),f
  1409  07E3  0BA9               	goto	u1017
  1410  07E4  2FE1               	decfsz	((??_main+0)+0+2),f
  1411  07E5  0BAA               	goto	u1017
  1412  07E6  2FE1               opt asmopt_pop
  1413                           
  1414                           	goto	l1425
  1415  07E7  2F93               	line	144
  1416                           ;main.c: 144:     }
  1417                           	
  1418                           l61:	
  1419  07E8                     	goto	l1425
  1420  07E8  2F93               	
  1421                           l62:	
  1422  07E9                     	goto	l57
  1423  07E9  2F16               	line	145
  1424                           ;main.c: 145:     }
  1425                           	
  1426                           l63:	
  1427  07EA                     	goto	l57
  1428  07EA  2F16               	
  1429                           l64:	
  1430  07EB                     	line	148
  1431                           ;main.c: 147:     return;
  1432                           	
  1433                           l65:	
  1434  07EB                     	global	start
  1435                           	ljmp	start
  1436  07EB  120A  118A  2800   	opt stack 0
  1437                           GLOBAL	__end_of_main
  1438                           	__end_of_main:
  1439  07EE                     	signat	_main,89
  1440                           	global	_LCD_write_string
  1441                           
  1442 ;; *************** function _LCD_write_string *****************
  1443 ;; Defined at:
  1444 ;;		line 95 in file "LCD_I2C.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  str             1    wreg     PTR const unsigned char 
  1447 ;;		 -> STR_2(2), STR_1(15), 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  str             1    5[COMMON] PTR const unsigned char 
  1450 ;;		 -> STR_2(2), STR_1(15), 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         0       0       0       0       0
  1461 ;;      Locals:         1       0       0       0       0
  1462 ;;      Temps:          1       0       0       0       0
  1463 ;;      Totals:         2       0       0       0       0
  1464 ;;Total ram usage:        2 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    2
  1467 ;; This function calls:
  1468 ;;		__LCD_write_lower_nibble
  1469 ;;		__LCD_write_upper_nibble
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;;		_LCD_clear_line
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1476                           	file	"LCD_I2C.c"
  1477                           	line	95
  1478                           global __ptext1
  1479                           __ptext1:	;psect for function _LCD_write_string
  1480  0429                     psect	text1
  1481                           	file	"LCD_I2C.c"
  1482                           	line	95
  1483                           	global	__size_of_LCD_write_string
  1484                           	__size_of_LCD_write_string	equ	__end_of_LCD_write_string-_LCD_write_string
  1485  0037                     	
  1486                           _LCD_write_string:	
  1487  0429                     ;incstack = 0
  1488                           	opt	stack 5
  1489                           ; Regs used in _LCD_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1490                           ;LCD_write_string@str stored from wreg
  1491                           	movwf	(LCD_write_string@str)
  1492  0429  00F5               	line	98
  1493                           	
  1494                           l1385:	
  1495  042A                     ;LCD_I2C.c: 95: void LCD_write_string(const char *str);LCD_I2C.c: 96: {;LCD_I2C.c: 98:  
                                   pin_RS = 1;
  1496                           	bcf	status, 5	;RP0=0, select bank0
  1497  042A  1283               	bcf	status, 6	;RP1=0, select bank0
  1498  042B  1303               	clrf	(_pin_RS)
  1499  042C  01A5               	incf	(_pin_RS),f
  1500  042D  0AA5               	line	99
  1501                           	
  1502                           l1387:	
  1503  042E                     ;LCD_I2C.c: 99:    pin_RW = 0;
  1504                           	clrf	(_pin_RW)
  1505  042E  01A6               	line	100
  1506                           ;LCD_I2C.c: 100:    pin_E = 0;
  1507                           	clrf	(_pin_E)
  1508  042F  01A7               	line	101
  1509                           	
  1510                           l1389:	
  1511  0430                     ;LCD_I2C.c: 101:    pin_BL = LCD_BL_Status;
  1512                           	movf	(_LCD_BL_Status),w
  1513  0430  082B               	movwf	(??_LCD_write_string+0)+0
  1514  0431  00F4               	movf	(??_LCD_write_string+0)+0,w
  1515  0432  0874               	movwf	(_pin_BL)
  1516  0433  00A0               	line	103
  1517                           ;LCD_I2C.c: 103:    while (*str)
  1518                           	goto	l1395
  1519  0434  2C52               	
  1520                           l206:	
  1521  0435                     	line	106
  1522                           	
  1523                           l1391:	
  1524  0435                     ;LCD_I2C.c: 104:    {;LCD_I2C.c: 106:         _LCD_write_upper_nibble(*str);
  1525                           	movf	(LCD_write_string@str),w
  1526  0435  0875               	movwf	fsr0
  1527  0436  0084               	fcall	stringdir
  1528  0437  120A  118A  2003  120A  118A  	fcall	__LCD_write_upper_nibble
  1529  043C  120A  118A  25DF  120A  118A  	line	109
  1530                           ;LCD_I2C.c: 109:         _LCD_write_lower_nibble(*str);
  1531                           	movf	(LCD_write_string@str),w
  1532  0441  0875               	movwf	fsr0
  1533  0442  0084               	fcall	stringdir
  1534  0443  120A  118A  2003  120A  118A  	fcall	__LCD_write_lower_nibble
  1535  0448  120A  118A  2552  120A  118A  	line	111
  1536                           	
  1537                           l1393:	
  1538  044D                     ;LCD_I2C.c: 111:         str++;
  1539                           	movlw	low(01h)
  1540  044D  3001               	movwf	(??_LCD_write_string+0)+0
  1541  044E  00F4               	movf	(??_LCD_write_string+0)+0,w
  1542  044F  0874               	addwf	(LCD_write_string@str),f
  1543  0450  07F5               	goto	l1395
  1544  0451  2C52               	line	112
  1545                           ;LCD_I2C.c: 112:    }
  1546                           	
  1547                           l205:	
  1548  0452                     	line	103
  1549                           	
  1550                           l1395:	
  1551  0452                     ;LCD_I2C.c: 103:    while (*str)
  1552                           	movf	(LCD_write_string@str),w
  1553  0452  0875               	movwf	fsr0
  1554  0453  0084               	fcall	stringdir
  1555  0454  120A  118A  2003  120A  118A  	xorlw	0
  1556  0459  3A00               	skipz
  1557  045A  1D03               	goto	u901
  1558  045B  2C5D               	goto	u900
  1559  045C  2C5E               u901:
  1560  045D                     	goto	l1391
  1561  045D  2C35               u900:
  1562  045E                     	goto	l208
  1563  045E  2C5F               	
  1564                           l207:	
  1565  045F                     	line	113
  1566                           	
  1567                           l208:	
  1568  045F                     	return
  1569  045F  0008               	opt stack 0
  1570                           GLOBAL	__end_of_LCD_write_string
  1571                           	__end_of_LCD_write_string:
  1572  0460                     	signat	_LCD_write_string,4217
  1573                           	global	_LCD_init
  1574                           
  1575 ;; *************** function _LCD_init *****************
  1576 ;; Defined at:
  1577 ;;		line 32 in file "LCD_I2C.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0
  1593 ;;      Temps:          2       0       0       0       0
  1594 ;;      Totals:         2       0       0       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    3
  1598 ;; This function calls:
  1599 ;;		_LCD_open
  1600 ;;		_LCD_write_byte
  1601 ;; This function is called by:
  1602 ;;		_main
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1606                           	line	32
  1607                           global __ptext2
  1608                           __ptext2:	;psect for function _LCD_init
  1609  066C                     psect	text2
  1610                           	file	"LCD_I2C.c"
  1611                           	line	32
  1612                           	global	__size_of_LCD_init
  1613                           	__size_of_LCD_init	equ	__end_of_LCD_init-_LCD_init
  1614  00A4                     	
  1615                           _LCD_init:	
  1616  066C                     ;incstack = 0
  1617                           	opt	stack 4
  1618                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1619                           	line	34
  1620                           	
  1621                           l1335:	
  1622  066C                     ;LCD_I2C.c: 34:     LCD_open();
  1623                           	fcall	_LCD_open
  1624  066C  120A  118A  249D  120A  118A  	line	37
  1625                           ;LCD_I2C.c: 37:     LCD_write_byte(0x00, 0x03);
  1626                           	movlw	low(03h)
  1627  0671  3003               	movwf	(??_LCD_init+0)+0
  1628  0672  00F7               	movf	(??_LCD_init+0)+0,w
  1629  0673  0877               	movwf	(LCD_write_byte@n)
  1630  0674  00F4               	movlw	low(0)
  1631  0675  3000               	fcall	_LCD_write_byte
  1632  0676  120A  118A  2408  120A  118A  	line	38
  1633                           	
  1634                           l1337:	
  1635  067B                     ;LCD_I2C.c: 38:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1636                           	opt asmopt_push
  1637                           opt asmopt_off
  1638                           movlw	7
  1639  067B  3007               movwf	((??_LCD_init+0)+0+1),f
  1640  067C  00F8               	movlw	125
  1641  067D  307D               movwf	((??_LCD_init+0)+0),f
  1642  067E  00F7               	u1027:
  1643  067F                     decfsz	((??_LCD_init+0)+0),f
  1644  067F  0BF7               	goto	u1027
  1645  0680  2E7F               	decfsz	((??_LCD_init+0)+0+1),f
  1646  0681  0BF8               	goto	u1027
  1647  0682  2E7F               opt asmopt_pop
  1648                           
  1649                           	line	39
  1650                           	
  1651                           l1339:	
  1652  0683                     ;LCD_I2C.c: 39:     LCD_write_byte(0x00, 0x03);
  1653                           	movlw	low(03h)
  1654  0683  3003               	movwf	(??_LCD_init+0)+0
  1655  0684  00F7               	movf	(??_LCD_init+0)+0,w
  1656  0685  0877               	movwf	(LCD_write_byte@n)
  1657  0686  00F4               	movlw	low(0)
  1658  0687  3000               	fcall	_LCD_write_byte
  1659  0688  120A  118A  2408  120A  118A  	line	40
  1660                           ;LCD_I2C.c: 40:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1661                           	opt asmopt_push
  1662                           opt asmopt_off
  1663                           movlw	7
  1664  068D  3007               movwf	((??_LCD_init+0)+0+1),f
  1665  068E  00F8               	movlw	125
  1666  068F  307D               movwf	((??_LCD_init+0)+0),f
  1667  0690  00F7               	u1037:
  1668  0691                     decfsz	((??_LCD_init+0)+0),f
  1669  0691  0BF7               	goto	u1037
  1670  0692  2E91               	decfsz	((??_LCD_init+0)+0+1),f
  1671  0693  0BF8               	goto	u1037
  1672  0694  2E91               opt asmopt_pop
  1673                           
  1674                           	line	41
  1675                           	
  1676                           l1341:	
  1677  0695                     ;LCD_I2C.c: 41:     LCD_write_byte(0x00, 0x03);
  1678                           	movlw	low(03h)
  1679  0695  3003               	movwf	(??_LCD_init+0)+0
  1680  0696  00F7               	movf	(??_LCD_init+0)+0,w
  1681  0697  0877               	movwf	(LCD_write_byte@n)
  1682  0698  00F4               	movlw	low(0)
  1683  0699  3000               	fcall	_LCD_write_byte
  1684  069A  120A  118A  2408  120A  118A  	line	42
  1685                           	
  1686                           l1343:	
  1687  069F                     ;LCD_I2C.c: 42:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1688                           	opt asmopt_push
  1689                           opt asmopt_off
  1690                           movlw	7
  1691  069F  3007               movwf	((??_LCD_init+0)+0+1),f
  1692  06A0  00F8               	movlw	125
  1693  06A1  307D               movwf	((??_LCD_init+0)+0),f
  1694  06A2  00F7               	u1047:
  1695  06A3                     decfsz	((??_LCD_init+0)+0),f
  1696  06A3  0BF7               	goto	u1047
  1697  06A4  2EA3               	decfsz	((??_LCD_init+0)+0+1),f
  1698  06A5  0BF8               	goto	u1047
  1699  06A6  2EA3               opt asmopt_pop
  1700                           
  1701                           	line	43
  1702                           ;LCD_I2C.c: 43:     LCD_write_byte(0x00, 0x02);
  1703                           	movlw	low(02h)
  1704  06A7  3002               	movwf	(??_LCD_init+0)+0
  1705  06A8  00F7               	movf	(??_LCD_init+0)+0,w
  1706  06A9  0877               	movwf	(LCD_write_byte@n)
  1707  06AA  00F4               	movlw	low(0)
  1708  06AB  3000               	fcall	_LCD_write_byte
  1709  06AC  120A  118A  2408  120A  118A  	line	44
  1710                           	
  1711                           l1345:	
  1712  06B1                     ;LCD_I2C.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1713                           	opt asmopt_push
  1714                           opt asmopt_off
  1715                           movlw	7
  1716  06B1  3007               movwf	((??_LCD_init+0)+0+1),f
  1717  06B2  00F8               	movlw	125
  1718  06B3  307D               movwf	((??_LCD_init+0)+0),f
  1719  06B4  00F7               	u1057:
  1720  06B5                     decfsz	((??_LCD_init+0)+0),f
  1721  06B5  0BF7               	goto	u1057
  1722  06B6  2EB5               	decfsz	((??_LCD_init+0)+0+1),f
  1723  06B7  0BF8               	goto	u1057
  1724  06B8  2EB5               opt asmopt_pop
  1725                           
  1726                           	line	45
  1727                           	
  1728                           l1347:	
  1729  06B9                     ;LCD_I2C.c: 45:     LCD_write_byte(0x00, 0x02);
  1730                           	movlw	low(02h)
  1731  06B9  3002               	movwf	(??_LCD_init+0)+0
  1732  06BA  00F7               	movf	(??_LCD_init+0)+0,w
  1733  06BB  0877               	movwf	(LCD_write_byte@n)
  1734  06BC  00F4               	movlw	low(0)
  1735  06BD  3000               	fcall	_LCD_write_byte
  1736  06BE  120A  118A  2408  120A  118A  	line	46
  1737                           ;LCD_I2C.c: 46:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1738                           	opt asmopt_push
  1739                           opt asmopt_off
  1740                           movlw	7
  1741  06C3  3007               movwf	((??_LCD_init+0)+0+1),f
  1742  06C4  00F8               	movlw	125
  1743  06C5  307D               movwf	((??_LCD_init+0)+0),f
  1744  06C6  00F7               	u1067:
  1745  06C7                     decfsz	((??_LCD_init+0)+0),f
  1746  06C7  0BF7               	goto	u1067
  1747  06C8  2EC7               	decfsz	((??_LCD_init+0)+0+1),f
  1748  06C9  0BF8               	goto	u1067
  1749  06CA  2EC7               opt asmopt_pop
  1750                           
  1751                           	line	47
  1752                           	
  1753                           l1349:	
  1754  06CB                     ;LCD_I2C.c: 47:     LCD_write_byte(0x00, 0x01);
  1755                           	clrf	(LCD_write_byte@n)
  1756  06CB  01F4               	incf	(LCD_write_byte@n),f
  1757  06CC  0AF4               	movlw	low(0)
  1758  06CD  3000               	fcall	_LCD_write_byte
  1759  06CE  120A  118A  2408  120A  118A  	line	48
  1760                           	
  1761                           l1351:	
  1762  06D3                     ;LCD_I2C.c: 48:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1763                           	opt asmopt_push
  1764                           opt asmopt_off
  1765                           movlw	7
  1766  06D3  3007               movwf	((??_LCD_init+0)+0+1),f
  1767  06D4  00F8               	movlw	125
  1768  06D5  307D               movwf	((??_LCD_init+0)+0),f
  1769  06D6  00F7               	u1077:
  1770  06D7                     decfsz	((??_LCD_init+0)+0),f
  1771  06D7  0BF7               	goto	u1077
  1772  06D8  2ED7               	decfsz	((??_LCD_init+0)+0+1),f
  1773  06D9  0BF8               	goto	u1077
  1774  06DA  2ED7               opt asmopt_pop
  1775                           
  1776                           	line	49
  1777                           ;LCD_I2C.c: 49:     LCD_write_byte(0x00, 0x0C);
  1778                           	movlw	low(0Ch)
  1779  06DB  300C               	movwf	(??_LCD_init+0)+0
  1780  06DC  00F7               	movf	(??_LCD_init+0)+0,w
  1781  06DD  0877               	movwf	(LCD_write_byte@n)
  1782  06DE  00F4               	movlw	low(0)
  1783  06DF  3000               	fcall	_LCD_write_byte
  1784  06E0  120A  118A  2408  120A  118A  	line	50
  1785                           	
  1786                           l1353:	
  1787  06E5                     ;LCD_I2C.c: 50:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1788                           	opt asmopt_push
  1789                           opt asmopt_off
  1790                           movlw	7
  1791  06E5  3007               movwf	((??_LCD_init+0)+0+1),f
  1792  06E6  00F8               	movlw	125
  1793  06E7  307D               movwf	((??_LCD_init+0)+0),f
  1794  06E8  00F7               	u1087:
  1795  06E9                     decfsz	((??_LCD_init+0)+0),f
  1796  06E9  0BF7               	goto	u1087
  1797  06EA  2EE9               	decfsz	((??_LCD_init+0)+0+1),f
  1798  06EB  0BF8               	goto	u1087
  1799  06EC  2EE9               opt asmopt_pop
  1800                           
  1801                           	line	51
  1802                           	
  1803                           l1355:	
  1804  06ED                     ;LCD_I2C.c: 51:     LCD_write_byte(0x00, 0x01);
  1805                           	clrf	(LCD_write_byte@n)
  1806  06ED  01F4               	incf	(LCD_write_byte@n),f
  1807  06EE  0AF4               	movlw	low(0)
  1808  06EF  3000               	fcall	_LCD_write_byte
  1809  06F0  120A  118A  2408  120A  118A  	line	52
  1810                           ;LCD_I2C.c: 52:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1811                           	opt asmopt_push
  1812                           opt asmopt_off
  1813                           movlw	7
  1814  06F5  3007               movwf	((??_LCD_init+0)+0+1),f
  1815  06F6  00F8               	movlw	125
  1816  06F7  307D               movwf	((??_LCD_init+0)+0),f
  1817  06F8  00F7               	u1097:
  1818  06F9                     decfsz	((??_LCD_init+0)+0),f
  1819  06F9  0BF7               	goto	u1097
  1820  06FA  2EF9               	decfsz	((??_LCD_init+0)+0+1),f
  1821  06FB  0BF8               	goto	u1097
  1822  06FC  2EF9               opt asmopt_pop
  1823                           
  1824                           	line	53
  1825                           	
  1826                           l1357:	
  1827  06FD                     ;LCD_I2C.c: 53:     LCD_write_byte(0x00, 0x06);
  1828                           	movlw	low(06h)
  1829  06FD  3006               	movwf	(??_LCD_init+0)+0
  1830  06FE  00F7               	movf	(??_LCD_init+0)+0,w
  1831  06FF  0877               	movwf	(LCD_write_byte@n)
  1832  0700  00F4               	movlw	low(0)
  1833  0701  3000               	fcall	_LCD_write_byte
  1834  0702  120A  118A  2408  120A  118A  	line	54
  1835                           	
  1836                           l1359:	
  1837  0707                     ;LCD_I2C.c: 54:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1838                           	opt asmopt_push
  1839                           opt asmopt_off
  1840                           movlw	7
  1841  0707  3007               movwf	((??_LCD_init+0)+0+1),f
  1842  0708  00F8               	movlw	125
  1843  0709  307D               movwf	((??_LCD_init+0)+0),f
  1844  070A  00F7               	u1107:
  1845  070B                     decfsz	((??_LCD_init+0)+0),f
  1846  070B  0BF7               	goto	u1107
  1847  070C  2F0B               	decfsz	((??_LCD_init+0)+0+1),f
  1848  070D  0BF8               	goto	u1107
  1849  070E  2F0B               opt asmopt_pop
  1850                           
  1851                           	line	56
  1852                           	
  1853                           l189:	
  1854  070F                     	return
  1855  070F  0008               	opt stack 0
  1856                           GLOBAL	__end_of_LCD_init
  1857                           	__end_of_LCD_init:
  1858  0710                     	signat	_LCD_init,89
  1859                           	global	_LCD_open
  1860                           
  1861 ;; *************** function _LCD_open *****************
  1862 ;; Defined at:
  1863 ;;		line 15 in file "LCD_I2C.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;		None
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;		None
  1868 ;; Return value:  Size  Location     Type
  1869 ;;                  1    wreg      void 
  1870 ;; Registers used:
  1871 ;;		wreg, status,2, status,0
  1872 ;; Tracked objects:
  1873 ;;		On entry : 0/0
  1874 ;;		On exit  : 0/0
  1875 ;;		Unchanged: 0/0
  1876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1877 ;;      Params:         0       0       0       0       0
  1878 ;;      Locals:         0       0       0       0       0
  1879 ;;      Temps:          1       0       0       0       0
  1880 ;;      Totals:         1       0       0       0       0
  1881 ;;Total ram usage:        1 bytes
  1882 ;; Hardware stack levels used:    1
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;;		_LCD_init
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1891                           	line	15
  1892                           global __ptext3
  1893                           __ptext3:	;psect for function _LCD_open
  1894  049D                     psect	text3
  1895                           	file	"LCD_I2C.c"
  1896                           	line	15
  1897                           	global	__size_of_LCD_open
  1898                           	__size_of_LCD_open	equ	__end_of_LCD_open-_LCD_open
  1899  0057                     	
  1900                           _LCD_open:	
  1901  049D                     ;incstack = 0
  1902                           	opt	stack 7
  1903                           ; Regs used in _LCD_open: [wreg+status,2+status,0]
  1904                           	line	17
  1905                           	
  1906                           l965:	
  1907  049D                     ;LCD_I2C.c: 17:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1908                           	goto	l967
  1909  049D  2C9F               	
  1910                           l161:	
  1911  049E                     	goto	l967
  1912  049E  2C9F               	
  1913                           l160:	
  1914  049F                     	
  1915                           l967:	
  1916  049F                     	bsf	status, 5	;RP0=1, select bank1
  1917  049F  1683               	bcf	status, 6	;RP1=0, select bank1
  1918  04A0  1303               	movf	(145)^080h,w	;volatile
  1919  04A1  0811               	andlw	01Fh
  1920  04A2  391F               	btfss	status,2
  1921  04A3  1D03               	goto	u331
  1922  04A4  2CA6               	goto	u330
  1923  04A5  2CA7               u331:
  1924  04A6                     	goto	l967
  1925  04A6  2C9F               u330:
  1926  04A7                     	
  1927                           l969:	
  1928  04A7                     	btfsc	(148)^080h,(2)&7	;volatile
  1929  04A7  1914               	goto	u341
  1930  04A8  2CAA               	goto	u340
  1931  04A9  2CAB               u341:
  1932  04AA                     	goto	l967
  1933  04AA  2C9F               u340:
  1934  04AB                     	goto	l971
  1935  04AB  2CAC               	
  1936                           l162:	
  1937  04AC                     	line	18
  1938                           	
  1939                           l971:	
  1940  04AC                     ;LCD_I2C.c: 18:     SSPCON |= 0b00101000;
  1941                           	movlw	low(028h)
  1942  04AC  3028               	movwf	(??_LCD_open+0)+0
  1943  04AD  00F0               	movf	(??_LCD_open+0)+0,w
  1944  04AE  0870               	bcf	status, 5	;RP0=0, select bank0
  1945  04AF  1283               	bcf	status, 6	;RP1=0, select bank0
  1946  04B0  1303               	iorwf	(20),f	;volatile
  1947  04B1  0494               	line	19
  1948                           ;LCD_I2C.c: 19:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1949                           	goto	l973
  1950  04B2  2CB4               	
  1951                           l164:	
  1952  04B3                     	goto	l973
  1953  04B3  2CB4               	
  1954                           l163:	
  1955  04B4                     	
  1956                           l973:	
  1957  04B4                     	bsf	status, 5	;RP0=1, select bank1
  1958  04B4  1683               	bcf	status, 6	;RP1=0, select bank1
  1959  04B5  1303               	movf	(145)^080h,w	;volatile
  1960  04B6  0811               	andlw	01Fh
  1961  04B7  391F               	btfss	status,2
  1962  04B8  1D03               	goto	u351
  1963  04B9  2CBB               	goto	u350
  1964  04BA  2CBC               u351:
  1965  04BB                     	goto	l973
  1966  04BB  2CB4               u350:
  1967  04BC                     	
  1968                           l975:	
  1969  04BC                     	btfsc	(148)^080h,(2)&7	;volatile
  1970  04BC  1914               	goto	u361
  1971  04BD  2CBF               	goto	u360
  1972  04BE  2CC0               u361:
  1973  04BF                     	goto	l973
  1974  04BF  2CB4               u360:
  1975  04C0                     	
  1976                           l165:	
  1977  04C0                     	line	20
  1978                           ;LCD_I2C.c: 20:     SSPCON2bits.SEN = 1;
  1979                           	bsf	(145)^080h,0	;volatile
  1980  04C0  1411               	line	21
  1981                           ;LCD_I2C.c: 21:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  1982                           	goto	l977
  1983  04C1  2CC3               	
  1984                           l167:	
  1985  04C2                     	goto	l977
  1986  04C2  2CC3               	
  1987                           l166:	
  1988  04C3                     	
  1989                           l977:	
  1990  04C3                     	movf	(145)^080h,w	;volatile
  1991  04C3  0811               	andlw	01Fh
  1992  04C4  391F               	btfss	status,2
  1993  04C5  1D03               	goto	u371
  1994  04C6  2CC8               	goto	u370
  1995  04C7  2CC9               u371:
  1996  04C8                     	goto	l977
  1997  04C8  2CC3               u370:
  1998  04C9                     	
  1999                           l979:	
  2000  04C9                     	btfsc	(148)^080h,(2)&7	;volatile
  2001  04C9  1914               	goto	u381
  2002  04CA  2CCC               	goto	u380
  2003  04CB  2CCD               u381:
  2004  04CC                     	goto	l977
  2005  04CC  2CC3               u380:
  2006  04CD                     	goto	l981
  2007  04CD  2CD0               	
  2008                           l168:	
  2009  04CE                     	line	22
  2010                           ;LCD_I2C.c: 22:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=(unsigned char)
                                 0x4E; while( SSPSTATbits.BF );
  2011                           	goto	l981
  2012  04CE  2CD0               	
  2013                           l170:	
  2014  04CF                     	goto	l981
  2015  04CF  2CD0               	
  2016                           l169:	
  2017  04D0                     	
  2018                           l981:	
  2019  04D0                     	movf	(145)^080h,w	;volatile
  2020  04D0  0811               	andlw	01Fh
  2021  04D1  391F               	btfss	status,2
  2022  04D2  1D03               	goto	u391
  2023  04D3  2CD5               	goto	u390
  2024  04D4  2CD6               u391:
  2025  04D5                     	goto	l981
  2026  04D5  2CD0               u390:
  2027  04D6                     	
  2028                           l983:	
  2029  04D6                     	btfsc	(148)^080h,(2)&7	;volatile
  2030  04D6  1914               	goto	u401
  2031  04D7  2CD9               	goto	u400
  2032  04D8  2CDA               u401:
  2033  04D9                     	goto	l981
  2034  04D9  2CD0               u400:
  2035  04DA                     	goto	l985
  2036  04DA  2CDB               	
  2037                           l171:	
  2038  04DB                     	
  2039                           l985:	
  2040  04DB                     	movlw	low(04Eh)
  2041  04DB  304E               	bcf	status, 5	;RP0=0, select bank0
  2042  04DC  1283               	bcf	status, 6	;RP1=0, select bank0
  2043  04DD  1303               	movwf	(19)	;volatile
  2044  04DE  0093               	goto	l172
  2045  04DF  2CE0               	
  2046                           l173:	
  2047  04E0                     	
  2048                           l172:	
  2049  04E0                     	bsf	status, 5	;RP0=1, select bank1
  2050  04E0  1683               	bcf	status, 6	;RP1=0, select bank1
  2051  04E1  1303               	btfsc	(148)^080h,0	;volatile
  2052  04E2  1814               	goto	u411
  2053  04E3  2CE5               	goto	u410
  2054  04E4  2CE6               u411:
  2055  04E5                     	goto	l172
  2056  04E5  2CE0               u410:
  2057  04E6                     	
  2058                           l174:	
  2059  04E6                     	line	23
  2060                           ;LCD_I2C.c: 23:     SSPCON2bits.ACKDT=0; SSPCON2bits.ACKEN=1; while(RCEN && SSPCON2bits.
                                 ACKEN);
  2061                           	bcf	(145)^080h,5	;volatile
  2062  04E6  1291               	bsf	(145)^080h,4	;volatile
  2063  04E7  1611               	goto	l175
  2064  04E8  2CE9               	
  2065                           l176:	
  2066  04E9                     	
  2067                           l175:	
  2068  04E9                     	btfss	(1163/8)^080h,(1163)&7	;volatile
  2069  04E9  1D91               	goto	u421
  2070  04EA  2CEC               	goto	u420
  2071  04EB  2CED               u421:
  2072  04EC                     	goto	l180
  2073  04EC  2CF3               u420:
  2074  04ED                     	
  2075                           l987:	
  2076  04ED                     	btfsc	(145)^080h,4	;volatile
  2077  04ED  1A11               	goto	u431
  2078  04EE  2CF0               	goto	u430
  2079  04EF  2CF1               u431:
  2080  04F0                     	goto	l175
  2081  04F0  2CE9               u430:
  2082  04F1                     	goto	l180
  2083  04F1  2CF3               	
  2084                           l178:	
  2085  04F2                     	goto	l180
  2086  04F2  2CF3               	
  2087                           l179:	
  2088  04F3                     	line	24
  2089                           	
  2090                           l180:	
  2091  04F3                     	return
  2092  04F3  0008               	opt stack 0
  2093                           GLOBAL	__end_of_LCD_open
  2094                           	__end_of_LCD_open:
  2095  04F4                     	signat	_LCD_open,89
  2096                           	global	_LCD_goto
  2097                           
  2098 ;; *************** function _LCD_goto *****************
  2099 ;; Defined at:
  2100 ;;		line 64 in file "LCD_I2C.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  x               1    wreg     unsigned char 
  2103 ;;  y               1    7[COMMON] unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  x               1   10[COMMON] unsigned char 
  2106 ;;  address         1   11[COMMON] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         1       0       0       0       0
  2117 ;;      Locals:         2       0       0       0       0
  2118 ;;      Temps:          2       0       0       0       0
  2119 ;;      Totals:         5       0       0       0       0
  2120 ;;Total ram usage:        5 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    3
  2123 ;; This function calls:
  2124 ;;		_LCD_write_byte
  2125 ;; This function is called by:
  2126 ;;		_main
  2127 ;;		_LCD_clear_line
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2131                           	line	64
  2132                           global __ptext4
  2133                           __ptext4:	;psect for function _LCD_goto
  2134  0460                     psect	text4
  2135                           	file	"LCD_I2C.c"
  2136                           	line	64
  2137                           	global	__size_of_LCD_goto
  2138                           	__size_of_LCD_goto	equ	__end_of_LCD_goto-_LCD_goto
  2139  003D                     	
  2140                           _LCD_goto:	
  2141  0460                     ;incstack = 0
  2142                           	opt	stack 4
  2143                           ; Regs used in _LCD_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2144                           ;LCD_goto@x stored from wreg
  2145                           	movwf	(LCD_goto@x)
  2146  0460  00FA               	line	68
  2147                           	
  2148                           l1361:	
  2149  0461                     ;LCD_I2C.c: 64: void LCD_goto(unsigned char x, unsigned char y);LCD_I2C.c: 65: {;LCD_I2C
                                 .c: 66: unsigned char address;;LCD_I2C.c: 68:    switch(y)
  2150                           	goto	l1375
  2151  0461  2C76               	line	70
  2152                           ;LCD_I2C.c: 69:      {;LCD_I2C.c: 70:       case 1:
  2153                           	
  2154                           l196:	
  2155  0462                     	line	71
  2156                           	
  2157                           l1363:	
  2158  0462                     ;LCD_I2C.c: 71:         address = 0x00;
  2159                           	clrf	(LCD_goto@address)
  2160  0462  01FB               	line	72
  2161                           ;LCD_I2C.c: 72:         break;
  2162                           	goto	l1377
  2163  0463  2C8C               	line	74
  2164                           ;LCD_I2C.c: 74:       case 2:
  2165                           	
  2166                           l198:	
  2167  0464                     	line	75
  2168                           	
  2169                           l1365:	
  2170  0464                     ;LCD_I2C.c: 75:         address = 0x40;
  2171                           	movlw	low(040h)
  2172  0464  3040               	movwf	(??_LCD_goto+0)+0
  2173  0465  00F8               	movf	(??_LCD_goto+0)+0,w
  2174  0466  0878               	movwf	(LCD_goto@address)
  2175  0467  00FB               	line	76
  2176                           ;LCD_I2C.c: 76:         break;
  2177                           	goto	l1377
  2178  0468  2C8C               	line	78
  2179                           ;LCD_I2C.c: 78:       case 3:
  2180                           	
  2181                           l199:	
  2182  0469                     	line	79
  2183                           	
  2184                           l1367:	
  2185  0469                     ;LCD_I2C.c: 79:         address = 0x14;
  2186                           	movlw	low(014h)
  2187  0469  3014               	movwf	(??_LCD_goto+0)+0
  2188  046A  00F8               	movf	(??_LCD_goto+0)+0,w
  2189  046B  0878               	movwf	(LCD_goto@address)
  2190  046C  00FB               	line	80
  2191                           ;LCD_I2C.c: 80:         break;
  2192                           	goto	l1377
  2193  046D  2C8C               	line	82
  2194                           ;LCD_I2C.c: 82:       case 4:
  2195                           	
  2196                           l200:	
  2197  046E                     	line	83
  2198                           	
  2199                           l1369:	
  2200  046E                     ;LCD_I2C.c: 83:         address = 0x54;
  2201                           	movlw	low(054h)
  2202  046E  3054               	movwf	(??_LCD_goto+0)+0
  2203  046F  00F8               	movf	(??_LCD_goto+0)+0,w
  2204  0470  0878               	movwf	(LCD_goto@address)
  2205  0471  00FB               	line	84
  2206                           ;LCD_I2C.c: 84:         break;
  2207                           	goto	l1377
  2208  0472  2C8C               	line	86
  2209                           ;LCD_I2C.c: 86:       default:
  2210                           	
  2211                           l201:	
  2212  0473                     	line	87
  2213                           	
  2214                           l1371:	
  2215  0473                     ;LCD_I2C.c: 87:         address = 0x00;
  2216                           	clrf	(LCD_goto@address)
  2217  0473  01FB               	line	88
  2218                           ;LCD_I2C.c: 88:         break;
  2219                           	goto	l1377
  2220  0474  2C8C               	line	89
  2221                           	
  2222                           l1373:	
  2223  0475                     ;LCD_I2C.c: 89:      }
  2224                           	goto	l1377
  2225  0475  2C8C               	
  2226                           l195:	
  2227  0476                     	
  2228                           l1375:	
  2229  0476                     	movf	(LCD_goto@y),w
  2230  0476  0877               	movwf	(??_LCD_goto+0)+0
  2231  0477  00F8               	clrf	(??_LCD_goto+0)+0+1
  2232  0478  01F9               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2233                           ; Switch size 1, requested type "space"
  2234                           ; Number of cases is 1, Range of values is 0 to 0
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ; direct_byte           11     8 (fixed)
  2239                           ; jumptable            260     6 (fixed)
  2240                           ;	Chosen strategy is simple_byte
  2241                           
  2242                           	movf 1+(??_LCD_goto+0)+0,w
  2243  0479  0879               	opt asmopt_push
  2244                           	opt asmopt_off
  2245                           	xorlw	0^0	; case 0
  2246  047A  3A00               	skipnz
  2247  047B  1903               	goto	l1493
  2248  047C  2C7E               	goto	l1371
  2249  047D  2C73               	opt asmopt_pop
  2250                           	
  2251                           l1493:	
  2252  047E                     ; Switch size 1, requested type "space"
  2253                           ; Number of cases is 4, Range of values is 1 to 4
  2254                           ; switch strategies available:
  2255                           ; Name         Instructions Cycles
  2256                           ; simple_byte           13     7 (average)
  2257                           ; direct_byte           23    11 (fixed)
  2258                           ; jumptable            263     9 (fixed)
  2259                           ;	Chosen strategy is simple_byte
  2260                           
  2261                           	movf 0+(??_LCD_goto+0)+0,w
  2262  047E  0878               	opt asmopt_push
  2263                           	opt asmopt_off
  2264                           	xorlw	1^0	; case 1
  2265  047F  3A01               	skipnz
  2266  0480  1903               	goto	l1363
  2267  0481  2C62               	xorlw	2^1	; case 2
  2268  0482  3A03               	skipnz
  2269  0483  1903               	goto	l1365
  2270  0484  2C64               	xorlw	3^2	; case 3
  2271  0485  3A01               	skipnz
  2272  0486  1903               	goto	l1367
  2273  0487  2C69               	xorlw	4^3	; case 4
  2274  0488  3A07               	skipnz
  2275  0489  1903               	goto	l1369
  2276  048A  2C6E               	goto	l1371
  2277  048B  2C73               	opt asmopt_pop
  2278                           
  2279                           	
  2280                           l197:	
  2281  048C                     	line	91
  2282                           	
  2283                           l1377:	
  2284  048C                     ;LCD_I2C.c: 91:    address += x-1;
  2285                           	movf	(LCD_goto@x),w
  2286  048C  087A               	addlw	0FFh
  2287  048D  3EFF               	movwf	(??_LCD_goto+0)+0
  2288  048E  00F8               	movf	(??_LCD_goto+0)+0,w
  2289  048F  0878               	addwf	(LCD_goto@address),f
  2290  0490  07FB               	line	92
  2291                           	
  2292                           l1379:	
  2293  0491                     ;LCD_I2C.c: 92:    LCD_write_byte(0, 0x80 | address);
  2294                           	movf	(LCD_goto@address),w
  2295  0491  087B               	iorlw	080h
  2296  0492  3880               	movwf	(??_LCD_goto+0)+0
  2297  0493  00F8               	movf	(??_LCD_goto+0)+0,w
  2298  0494  0878               	movwf	(LCD_write_byte@n)
  2299  0495  00F4               	movlw	low(0)
  2300  0496  3000               	fcall	_LCD_write_byte
  2301  0497  120A  118A  2408  120A  118A  	line	93
  2302                           	
  2303                           l202:	
  2304  049C                     	return
  2305  049C  0008               	opt stack 0
  2306                           GLOBAL	__end_of_LCD_goto
  2307                           	__end_of_LCD_goto:
  2308  049D                     	signat	_LCD_goto,8313
  2309                           	global	_LCD_write_byte
  2310                           
  2311 ;; *************** function _LCD_write_byte *****************
  2312 ;; Defined at:
  2313 ;;		line 114 in file "LCD_I2C.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  address         1    wreg     unsigned char 
  2316 ;;  n               1    4[COMMON] unsigned char 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  address         1    6[COMMON] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         1       0       0       0       0
  2329 ;;      Locals:         1       0       0       0       0
  2330 ;;      Temps:          1       0       0       0       0
  2331 ;;      Totals:         3       0       0       0       0
  2332 ;;Total ram usage:        3 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    2
  2335 ;; This function calls:
  2336 ;;		__LCD_write_lower_nibble
  2337 ;;		__LCD_write_upper_nibble
  2338 ;; This function is called by:
  2339 ;;		_LCD_init
  2340 ;;		_LCD_goto
  2341 ;;		_LCD_BL
  2342 ;;		_LCD_clear
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2346                           	line	114
  2347                           global __ptext5
  2348                           __ptext5:	;psect for function _LCD_write_byte
  2349  0408                     psect	text5
  2350                           	file	"LCD_I2C.c"
  2351                           	line	114
  2352                           	global	__size_of_LCD_write_byte
  2353                           	__size_of_LCD_write_byte	equ	__end_of_LCD_write_byte-_LCD_write_byte
  2354  0021                     	
  2355                           _LCD_write_byte:	
  2356  0408                     ;incstack = 0
  2357                           	opt	stack 4
  2358                           ; Regs used in _LCD_write_byte: [wreg+status,2+status,0+pclath+cstack]
  2359                           ;LCD_write_byte@address stored from wreg
  2360                           	movwf	(LCD_write_byte@address)
  2361  0408  00F6               	line	116
  2362                           	
  2363                           l1323:	
  2364  0409                     ;LCD_I2C.c: 114: void LCD_write_byte(unsigned char address, unsigned char n);LCD_I2C.c: 
                                 115: {;LCD_I2C.c: 116:     if (address)
  2365                           	movf	((LCD_write_byte@address)),w
  2366  0409  0876               	btfsc	status,2
  2367  040A  1903               	goto	u891
  2368  040B  2C0D               	goto	u890
  2369  040C  2C0E               u891:
  2370  040D                     	goto	l1327
  2371  040D  2C13               u890:
  2372  040E                     	line	118
  2373                           	
  2374                           l1325:	
  2375  040E                     ;LCD_I2C.c: 117:     {;LCD_I2C.c: 118:         pin_RS=1;
  2376                           	bcf	status, 5	;RP0=0, select bank0
  2377  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  2378  040F  1303               	clrf	(_pin_RS)
  2379  0410  01A5               	incf	(_pin_RS),f
  2380  0411  0AA5               	line	119
  2381                           ;LCD_I2C.c: 119:     }
  2382                           	goto	l212
  2383  0412  2C16               	line	120
  2384                           ;LCD_I2C.c: 120:     else
  2385                           	
  2386                           l211:	
  2387  0413                     	line	122
  2388                           	
  2389                           l1327:	
  2390  0413                     ;LCD_I2C.c: 121:     {;LCD_I2C.c: 122:         pin_RS=0;
  2391                           	bcf	status, 5	;RP0=0, select bank0
  2392  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  2393  0414  1303               	clrf	(_pin_RS)
  2394  0415  01A5               	line	123
  2395                           ;LCD_I2C.c: 123:     }
  2396                           	
  2397                           l212:	
  2398  0416                     	line	125
  2399                           ;LCD_I2C.c: 125:     pin_RW = 0;
  2400                           	clrf	(_pin_RW)
  2401  0416  01A6               	line	126
  2402                           ;LCD_I2C.c: 126:     pin_E = 0;
  2403                           	clrf	(_pin_E)
  2404  0417  01A7               	line	127
  2405                           	
  2406                           l1329:	
  2407  0418                     ;LCD_I2C.c: 127:     pin_BL = LCD_BL_Status;
  2408                           	movf	(_LCD_BL_Status),w
  2409  0418  082B               	movwf	(??_LCD_write_byte+0)+0
  2410  0419  00F5               	movf	(??_LCD_write_byte+0)+0,w
  2411  041A  0875               	movwf	(_pin_BL)
  2412  041B  00A0               	line	130
  2413                           	
  2414                           l1331:	
  2415  041C                     ;LCD_I2C.c: 130:    _LCD_write_upper_nibble(n);
  2416                           	movf	(LCD_write_byte@n),w
  2417  041C  0874               	fcall	__LCD_write_upper_nibble
  2418  041D  120A  118A  25DF  120A  118A  	line	133
  2419                           	
  2420                           l1333:	
  2421  0422                     ;LCD_I2C.c: 133:    _LCD_write_lower_nibble(n);
  2422                           	movf	(LCD_write_byte@n),w
  2423  0422  0874               	fcall	__LCD_write_lower_nibble
  2424  0423  120A  118A  2552  120A  118A  	line	134
  2425                           	
  2426                           l213:	
  2427  0428                     	return
  2428  0428  0008               	opt stack 0
  2429                           GLOBAL	__end_of_LCD_write_byte
  2430                           	__end_of_LCD_write_byte:
  2431  0429                     	signat	_LCD_write_byte,8313
  2432                           	global	__LCD_write_upper_nibble
  2433                           
  2434 ;; *************** function __LCD_write_upper_nibble *****************
  2435 ;; Defined at:
  2436 ;;		line 152 in file "LCD_I2C.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  u               1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  u               1    3[COMMON] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         1       0       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    1
  2457 ;; This function calls:
  2458 ;;		__LCD_build_byte
  2459 ;; This function is called by:
  2460 ;;		_LCD_write_string
  2461 ;;		_LCD_write_byte
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2465                           	line	152
  2466                           global __ptext6
  2467                           __ptext6:	;psect for function __LCD_write_upper_nibble
  2468  05DF                     psect	text6
  2469                           	file	"LCD_I2C.c"
  2470                           	line	152
  2471                           	global	__size_of__LCD_write_upper_nibble
  2472                           	__size_of__LCD_write_upper_nibble	equ	__end_of__LCD_write_upper_nibble-__LCD_write_uppe
                                 r_nibble
  2473  008D                     	
  2474                           __LCD_write_upper_nibble:	
  2475  05DF                     ;incstack = 0
  2476                           	opt	stack 5
  2477                           ; Regs used in __LCD_write_upper_nibble: [wreg+status,2+status,0+pclath+cstack]
  2478                           ;__LCD_write_upper_nibble@u stored from wreg
  2479                           	movwf	(__LCD_write_upper_nibble@u)
  2480  05DF  00F3               	line	155
  2481                           	
  2482                           l1235:	
  2483  05E0                     ;LCD_I2C.c: 152: void _LCD_write_upper_nibble(unsigned char u);LCD_I2C.c: 153: {;LCD_I2C
                                 .c: 155:     if(((u) & (1 <<(7))))
  2484                           	btfss	(__LCD_write_upper_nibble@u),(7)&7
  2485  05E0  1FF3               	goto	u631
  2486  05E1  2DE3               	goto	u630
  2487  05E2  2DE4               u631:
  2488  05E3                     	goto	l1239
  2489  05E3  2DE9               u630:
  2490  05E4                     	line	156
  2491                           	
  2492                           l1237:	
  2493  05E4                     ;LCD_I2C.c: 156:         pin_D7=1;
  2494                           	bcf	status, 5	;RP0=0, select bank0
  2495  05E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2496  05E5  1303               	clrf	(_pin_D7)
  2497  05E6  01A1               	incf	(_pin_D7),f
  2498  05E7  0AA1               	goto	l1241
  2499  05E8  2DED               	line	157
  2500                           ;LCD_I2C.c: 157:     else
  2501                           	
  2502                           l224:	
  2503  05E9                     	line	158
  2504                           	
  2505                           l1239:	
  2506  05E9                     ;LCD_I2C.c: 158:         pin_D7=0;
  2507                           	bcf	status, 5	;RP0=0, select bank0
  2508  05E9  1283               	bcf	status, 6	;RP1=0, select bank0
  2509  05EA  1303               	clrf	(_pin_D7)
  2510  05EB  01A1               	goto	l1241
  2511  05EC  2DED               	
  2512                           l225:	
  2513  05ED                     	line	160
  2514                           	
  2515                           l1241:	
  2516  05ED                     ;LCD_I2C.c: 160:     if(((u) & (1 <<(6))))
  2517                           	btfss	(__LCD_write_upper_nibble@u),(6)&7
  2518  05ED  1F73               	goto	u641
  2519  05EE  2DF0               	goto	u640
  2520  05EF  2DF1               u641:
  2521  05F0                     	goto	l1245
  2522  05F0  2DF4               u640:
  2523  05F1                     	line	161
  2524                           	
  2525                           l1243:	
  2526  05F1                     ;LCD_I2C.c: 161:         pin_D6=1;
  2527                           	clrf	(_pin_D6)
  2528  05F1  01A2               	incf	(_pin_D6),f
  2529  05F2  0AA2               	goto	l1247
  2530  05F3  2DF6               	line	162
  2531                           ;LCD_I2C.c: 162:     else
  2532                           	
  2533                           l226:	
  2534  05F4                     	line	163
  2535                           	
  2536                           l1245:	
  2537  05F4                     ;LCD_I2C.c: 163:         pin_D6=0;
  2538                           	clrf	(_pin_D6)
  2539  05F4  01A2               	goto	l1247
  2540  05F5  2DF6               	
  2541                           l227:	
  2542  05F6                     	line	165
  2543                           	
  2544                           l1247:	
  2545  05F6                     ;LCD_I2C.c: 165:     if(((u) & (1 <<(5))))
  2546                           	btfss	(__LCD_write_upper_nibble@u),(5)&7
  2547  05F6  1EF3               	goto	u651
  2548  05F7  2DF9               	goto	u650
  2549  05F8  2DFA               u651:
  2550  05F9                     	goto	l1251
  2551  05F9  2DFD               u650:
  2552  05FA                     	line	166
  2553                           	
  2554                           l1249:	
  2555  05FA                     ;LCD_I2C.c: 166:         pin_D5=1;
  2556                           	clrf	(_pin_D5)
  2557  05FA  01A3               	incf	(_pin_D5),f
  2558  05FB  0AA3               	goto	l1253
  2559  05FC  2DFF               	line	167
  2560                           ;LCD_I2C.c: 167:     else
  2561                           	
  2562                           l228:	
  2563  05FD                     	line	168
  2564                           	
  2565                           l1251:	
  2566  05FD                     ;LCD_I2C.c: 168:         pin_D5=0;
  2567                           	clrf	(_pin_D5)
  2568  05FD  01A3               	goto	l1253
  2569  05FE  2DFF               	
  2570                           l229:	
  2571  05FF                     	line	170
  2572                           	
  2573                           l1253:	
  2574  05FF                     ;LCD_I2C.c: 170:     if(((u) & (1 <<(4))))
  2575                           	btfss	(__LCD_write_upper_nibble@u),(4)&7
  2576  05FF  1E73               	goto	u661
  2577  0600  2E02               	goto	u660
  2578  0601  2E03               u661:
  2579  0602                     	goto	l1257
  2580  0602  2E06               u660:
  2581  0603                     	line	171
  2582                           	
  2583                           l1255:	
  2584  0603                     ;LCD_I2C.c: 171:         pin_D4=1;
  2585                           	clrf	(_pin_D4)
  2586  0603  01A4               	incf	(_pin_D4),f
  2587  0604  0AA4               	goto	l231
  2588  0605  2E07               	line	172
  2589                           ;LCD_I2C.c: 172:     else
  2590                           	
  2591                           l230:	
  2592  0606                     	line	173
  2593                           	
  2594                           l1257:	
  2595  0606                     ;LCD_I2C.c: 173:         pin_D4=0;
  2596                           	clrf	(_pin_D4)
  2597  0606  01A4               	
  2598                           l231:	
  2599  0607                     	line	175
  2600                           ;LCD_I2C.c: 175:    pin_E = 0;
  2601                           	clrf	(_pin_E)
  2602  0607  01A7               	line	176
  2603                           ;LCD_I2C.c: 176:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2604                           	goto	l1259
  2605  0608  2E0A               	
  2606                           l233:	
  2607  0609                     	goto	l1259
  2608  0609  2E0A               	
  2609                           l232:	
  2610  060A                     	
  2611                           l1259:	
  2612  060A                     	bsf	status, 5	;RP0=1, select bank1
  2613  060A  1683               	bcf	status, 6	;RP1=0, select bank1
  2614  060B  1303               	movf	(145)^080h,w	;volatile
  2615  060C  0811               	andlw	01Fh
  2616  060D  391F               	btfss	status,2
  2617  060E  1D03               	goto	u671
  2618  060F  2E11               	goto	u670
  2619  0610  2E12               u671:
  2620  0611                     	goto	l1259
  2621  0611  2E0A               u670:
  2622  0612                     	
  2623                           l1261:	
  2624  0612                     	btfsc	(148)^080h,(2)&7	;volatile
  2625  0612  1914               	goto	u681
  2626  0613  2E15               	goto	u680
  2627  0614  2E16               u681:
  2628  0615                     	goto	l1259
  2629  0615  2E0A               u680:
  2630  0616                     	goto	l1263
  2631  0616  2E17               	
  2632                           l234:	
  2633  0617                     	
  2634                           l1263:	
  2635  0617                     	fcall	__LCD_build_byte
  2636  0617  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2637  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  2638  061D  1303               	movwf	(19)	;volatile
  2639  061E  0093               	goto	l235
  2640  061F  2E20               	
  2641                           l236:	
  2642  0620                     	
  2643                           l235:	
  2644  0620                     	bsf	status, 5	;RP0=1, select bank1
  2645  0620  1683               	bcf	status, 6	;RP1=0, select bank1
  2646  0621  1303               	btfsc	(148)^080h,0	;volatile
  2647  0622  1814               	goto	u691
  2648  0623  2E25               	goto	u690
  2649  0624  2E26               u691:
  2650  0625                     	goto	l235
  2651  0625  2E20               u690:
  2652  0626                     	
  2653                           l237:	
  2654  0626                     	line	177
  2655                           ;LCD_I2C.c: 177:    pin_E = 1;
  2656                           	bcf	status, 5	;RP0=0, select bank0
  2657  0626  1283               	bcf	status, 6	;RP1=0, select bank0
  2658  0627  1303               	clrf	(_pin_E)
  2659  0628  01A7               	incf	(_pin_E),f
  2660  0629  0AA7               	line	178
  2661                           ;LCD_I2C.c: 178:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2662                           	goto	l1265
  2663  062A  2E2C               	
  2664                           l239:	
  2665  062B                     	goto	l1265
  2666  062B  2E2C               	
  2667                           l238:	
  2668  062C                     	
  2669                           l1265:	
  2670  062C                     	bsf	status, 5	;RP0=1, select bank1
  2671  062C  1683               	bcf	status, 6	;RP1=0, select bank1
  2672  062D  1303               	movf	(145)^080h,w	;volatile
  2673  062E  0811               	andlw	01Fh
  2674  062F  391F               	btfss	status,2
  2675  0630  1D03               	goto	u701
  2676  0631  2E33               	goto	u700
  2677  0632  2E34               u701:
  2678  0633                     	goto	l1265
  2679  0633  2E2C               u700:
  2680  0634                     	
  2681                           l1267:	
  2682  0634                     	btfsc	(148)^080h,(2)&7	;volatile
  2683  0634  1914               	goto	u711
  2684  0635  2E37               	goto	u710
  2685  0636  2E38               u711:
  2686  0637                     	goto	l1265
  2687  0637  2E2C               u710:
  2688  0638                     	goto	l1269
  2689  0638  2E39               	
  2690                           l240:	
  2691  0639                     	
  2692                           l1269:	
  2693  0639                     	fcall	__LCD_build_byte
  2694  0639  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2695  063E  1283               	bcf	status, 6	;RP1=0, select bank0
  2696  063F  1303               	movwf	(19)	;volatile
  2697  0640  0093               	goto	l241
  2698  0641  2E42               	
  2699                           l242:	
  2700  0642                     	
  2701                           l241:	
  2702  0642                     	bsf	status, 5	;RP0=1, select bank1
  2703  0642  1683               	bcf	status, 6	;RP1=0, select bank1
  2704  0643  1303               	btfsc	(148)^080h,0	;volatile
  2705  0644  1814               	goto	u721
  2706  0645  2E47               	goto	u720
  2707  0646  2E48               u721:
  2708  0647                     	goto	l241
  2709  0647  2E42               u720:
  2710  0648                     	goto	l1271
  2711  0648  2E49               	
  2712                           l243:	
  2713  0649                     	line	179
  2714                           	
  2715                           l1271:	
  2716  0649                     ;LCD_I2C.c: 179:    pin_E = 0;
  2717                           	bcf	status, 5	;RP0=0, select bank0
  2718  0649  1283               	bcf	status, 6	;RP1=0, select bank0
  2719  064A  1303               	clrf	(_pin_E)
  2720  064B  01A7               	line	180
  2721                           ;LCD_I2C.c: 180:    while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byte
                                 (); while( SSPSTATbits.BF );;
  2722                           	goto	l1273
  2723  064C  2E4E               	
  2724                           l245:	
  2725  064D                     	goto	l1273
  2726  064D  2E4E               	
  2727                           l244:	
  2728  064E                     	
  2729                           l1273:	
  2730  064E                     	bsf	status, 5	;RP0=1, select bank1
  2731  064E  1683               	bcf	status, 6	;RP1=0, select bank1
  2732  064F  1303               	movf	(145)^080h,w	;volatile
  2733  0650  0811               	andlw	01Fh
  2734  0651  391F               	btfss	status,2
  2735  0652  1D03               	goto	u731
  2736  0653  2E55               	goto	u730
  2737  0654  2E56               u731:
  2738  0655                     	goto	l1273
  2739  0655  2E4E               u730:
  2740  0656                     	
  2741                           l1275:	
  2742  0656                     	btfsc	(148)^080h,(2)&7	;volatile
  2743  0656  1914               	goto	u741
  2744  0657  2E59               	goto	u740
  2745  0658  2E5A               u741:
  2746  0659                     	goto	l1273
  2747  0659  2E4E               u740:
  2748  065A                     	goto	l1277
  2749  065A  2E5B               	
  2750                           l246:	
  2751  065B                     	
  2752                           l1277:	
  2753  065B                     	fcall	__LCD_build_byte
  2754  065B  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2755  0660  1283               	bcf	status, 6	;RP1=0, select bank0
  2756  0661  1303               	movwf	(19)	;volatile
  2757  0662  0093               	goto	l247
  2758  0663  2E64               	
  2759                           l248:	
  2760  0664                     	
  2761                           l247:	
  2762  0664                     	bsf	status, 5	;RP0=1, select bank1
  2763  0664  1683               	bcf	status, 6	;RP1=0, select bank1
  2764  0665  1303               	btfsc	(148)^080h,0	;volatile
  2765  0666  1814               	goto	u751
  2766  0667  2E69               	goto	u750
  2767  0668  2E6A               u751:
  2768  0669                     	goto	l247
  2769  0669  2E64               u750:
  2770  066A                     	goto	l250
  2771  066A  2E6B               	
  2772                           l249:	
  2773  066B                     	line	181
  2774                           	
  2775                           l250:	
  2776  066B                     	return
  2777  066B  0008               	opt stack 0
  2778                           GLOBAL	__end_of__LCD_write_upper_nibble
  2779                           	__end_of__LCD_write_upper_nibble:
  2780  066C                     	signat	__LCD_write_upper_nibble,4217
  2781                           	global	__LCD_write_lower_nibble
  2782                           
  2783 ;; *************** function __LCD_write_lower_nibble *****************
  2784 ;; Defined at:
  2785 ;;		line 183 in file "LCD_I2C.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  l               1    wreg     unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  l               1    3[COMMON] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, pclath, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2799 ;;      Params:         0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0
  2802 ;;      Totals:         1       0       0       0       0
  2803 ;;Total ram usage:        1 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    1
  2806 ;; This function calls:
  2807 ;;		__LCD_build_byte
  2808 ;; This function is called by:
  2809 ;;		_LCD_write_string
  2810 ;;		_LCD_write_byte
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2814                           	line	183
  2815                           global __ptext7
  2816                           __ptext7:	;psect for function __LCD_write_lower_nibble
  2817  0552                     psect	text7
  2818                           	file	"LCD_I2C.c"
  2819                           	line	183
  2820                           	global	__size_of__LCD_write_lower_nibble
  2821                           	__size_of__LCD_write_lower_nibble	equ	__end_of__LCD_write_lower_nibble-__LCD_write_lowe
                                 r_nibble
  2822  008D                     	
  2823                           __LCD_write_lower_nibble:	
  2824  0552                     ;incstack = 0
  2825                           	opt	stack 5
  2826                           ; Regs used in __LCD_write_lower_nibble: [wreg+status,2+status,0+pclath+cstack]
  2827                           ;__LCD_write_lower_nibble@l stored from wreg
  2828                           	movwf	(__LCD_write_lower_nibble@l)
  2829  0552  00F3               	line	186
  2830                           	
  2831                           l1279:	
  2832  0553                     ;LCD_I2C.c: 183: void _LCD_write_lower_nibble(unsigned char l);LCD_I2C.c: 184: {;LCD_I2C
                                 .c: 186:     if(((l) & (1 <<(3))))
  2833                           	btfss	(__LCD_write_lower_nibble@l),(3)&7
  2834  0553  1DF3               	goto	u761
  2835  0554  2D56               	goto	u760
  2836  0555  2D57               u761:
  2837  0556                     	goto	l1283
  2838  0556  2D5C               u760:
  2839  0557                     	line	187
  2840                           	
  2841                           l1281:	
  2842  0557                     ;LCD_I2C.c: 187:         pin_D7=1;
  2843                           	bcf	status, 5	;RP0=0, select bank0
  2844  0557  1283               	bcf	status, 6	;RP1=0, select bank0
  2845  0558  1303               	clrf	(_pin_D7)
  2846  0559  01A1               	incf	(_pin_D7),f
  2847  055A  0AA1               	goto	l1285
  2848  055B  2D60               	line	188
  2849                           ;LCD_I2C.c: 188:     else
  2850                           	
  2851                           l253:	
  2852  055C                     	line	189
  2853                           	
  2854                           l1283:	
  2855  055C                     ;LCD_I2C.c: 189:         pin_D7=0;
  2856                           	bcf	status, 5	;RP0=0, select bank0
  2857  055C  1283               	bcf	status, 6	;RP1=0, select bank0
  2858  055D  1303               	clrf	(_pin_D7)
  2859  055E  01A1               	goto	l1285
  2860  055F  2D60               	
  2861                           l254:	
  2862  0560                     	line	191
  2863                           	
  2864                           l1285:	
  2865  0560                     ;LCD_I2C.c: 191:     if(((l) & (1 <<(2))))
  2866                           	btfss	(__LCD_write_lower_nibble@l),(2)&7
  2867  0560  1D73               	goto	u771
  2868  0561  2D63               	goto	u770
  2869  0562  2D64               u771:
  2870  0563                     	goto	l1289
  2871  0563  2D67               u770:
  2872  0564                     	line	192
  2873                           	
  2874                           l1287:	
  2875  0564                     ;LCD_I2C.c: 192:         pin_D6=1;
  2876                           	clrf	(_pin_D6)
  2877  0564  01A2               	incf	(_pin_D6),f
  2878  0565  0AA2               	goto	l1291
  2879  0566  2D69               	line	193
  2880                           ;LCD_I2C.c: 193:     else
  2881                           	
  2882                           l255:	
  2883  0567                     	line	194
  2884                           	
  2885                           l1289:	
  2886  0567                     ;LCD_I2C.c: 194:         pin_D6=0;
  2887                           	clrf	(_pin_D6)
  2888  0567  01A2               	goto	l1291
  2889  0568  2D69               	
  2890                           l256:	
  2891  0569                     	line	196
  2892                           	
  2893                           l1291:	
  2894  0569                     ;LCD_I2C.c: 196:     if(((l) & (1 <<(1))))
  2895                           	btfss	(__LCD_write_lower_nibble@l),(1)&7
  2896  0569  1CF3               	goto	u781
  2897  056A  2D6C               	goto	u780
  2898  056B  2D6D               u781:
  2899  056C                     	goto	l1295
  2900  056C  2D70               u780:
  2901  056D                     	line	197
  2902                           	
  2903                           l1293:	
  2904  056D                     ;LCD_I2C.c: 197:         pin_D5=1;
  2905                           	clrf	(_pin_D5)
  2906  056D  01A3               	incf	(_pin_D5),f
  2907  056E  0AA3               	goto	l1297
  2908  056F  2D72               	line	198
  2909                           ;LCD_I2C.c: 198:     else
  2910                           	
  2911                           l257:	
  2912  0570                     	line	199
  2913                           	
  2914                           l1295:	
  2915  0570                     ;LCD_I2C.c: 199:         pin_D5=0;
  2916                           	clrf	(_pin_D5)
  2917  0570  01A3               	goto	l1297
  2918  0571  2D72               	
  2919                           l258:	
  2920  0572                     	line	201
  2921                           	
  2922                           l1297:	
  2923  0572                     ;LCD_I2C.c: 201:     if(((l) & (1 <<(0))))
  2924                           	btfss	(__LCD_write_lower_nibble@l),(0)&7
  2925  0572  1C73               	goto	u791
  2926  0573  2D75               	goto	u790
  2927  0574  2D76               u791:
  2928  0575                     	goto	l1301
  2929  0575  2D79               u790:
  2930  0576                     	line	202
  2931                           	
  2932                           l1299:	
  2933  0576                     ;LCD_I2C.c: 202:         pin_D4=1;
  2934                           	clrf	(_pin_D4)
  2935  0576  01A4               	incf	(_pin_D4),f
  2936  0577  0AA4               	goto	l260
  2937  0578  2D7A               	line	203
  2938                           ;LCD_I2C.c: 203:     else
  2939                           	
  2940                           l259:	
  2941  0579                     	line	204
  2942                           	
  2943                           l1301:	
  2944  0579                     ;LCD_I2C.c: 204:         pin_D4=0;
  2945                           	clrf	(_pin_D4)
  2946  0579  01A4               	
  2947                           l260:	
  2948  057A                     	line	206
  2949                           ;LCD_I2C.c: 206:     pin_E = 0;
  2950                           	clrf	(_pin_E)
  2951  057A  01A7               	line	207
  2952                           ;LCD_I2C.c: 207:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  2953                           	goto	l1303
  2954  057B  2D7D               	
  2955                           l262:	
  2956  057C                     	goto	l1303
  2957  057C  2D7D               	
  2958                           l261:	
  2959  057D                     	
  2960                           l1303:	
  2961  057D                     	bsf	status, 5	;RP0=1, select bank1
  2962  057D  1683               	bcf	status, 6	;RP1=0, select bank1
  2963  057E  1303               	movf	(145)^080h,w	;volatile
  2964  057F  0811               	andlw	01Fh
  2965  0580  391F               	btfss	status,2
  2966  0581  1D03               	goto	u801
  2967  0582  2D84               	goto	u800
  2968  0583  2D85               u801:
  2969  0584                     	goto	l1303
  2970  0584  2D7D               u800:
  2971  0585                     	
  2972                           l1305:	
  2973  0585                     	btfsc	(148)^080h,(2)&7	;volatile
  2974  0585  1914               	goto	u811
  2975  0586  2D88               	goto	u810
  2976  0587  2D89               u811:
  2977  0588                     	goto	l1303
  2978  0588  2D7D               u810:
  2979  0589                     	goto	l1307
  2980  0589  2D8A               	
  2981                           l263:	
  2982  058A                     	
  2983                           l1307:	
  2984  058A                     	fcall	__LCD_build_byte
  2985  058A  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2986  058F  1283               	bcf	status, 6	;RP1=0, select bank0
  2987  0590  1303               	movwf	(19)	;volatile
  2988  0591  0093               	goto	l264
  2989  0592  2D93               	
  2990                           l265:	
  2991  0593                     	
  2992                           l264:	
  2993  0593                     	bsf	status, 5	;RP0=1, select bank1
  2994  0593  1683               	bcf	status, 6	;RP1=0, select bank1
  2995  0594  1303               	btfsc	(148)^080h,0	;volatile
  2996  0595  1814               	goto	u821
  2997  0596  2D98               	goto	u820
  2998  0597  2D99               u821:
  2999  0598                     	goto	l264
  3000  0598  2D93               u820:
  3001  0599                     	
  3002                           l266:	
  3003  0599                     	line	208
  3004                           ;LCD_I2C.c: 208:     pin_E = 1;
  3005                           	bcf	status, 5	;RP0=0, select bank0
  3006  0599  1283               	bcf	status, 6	;RP1=0, select bank0
  3007  059A  1303               	clrf	(_pin_E)
  3008  059B  01A7               	incf	(_pin_E),f
  3009  059C  0AA7               	line	209
  3010                           ;LCD_I2C.c: 209:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  3011                           	goto	l1309
  3012  059D  2D9F               	
  3013                           l268:	
  3014  059E                     	goto	l1309
  3015  059E  2D9F               	
  3016                           l267:	
  3017  059F                     	
  3018                           l1309:	
  3019  059F                     	bsf	status, 5	;RP0=1, select bank1
  3020  059F  1683               	bcf	status, 6	;RP1=0, select bank1
  3021  05A0  1303               	movf	(145)^080h,w	;volatile
  3022  05A1  0811               	andlw	01Fh
  3023  05A2  391F               	btfss	status,2
  3024  05A3  1D03               	goto	u831
  3025  05A4  2DA6               	goto	u830
  3026  05A5  2DA7               u831:
  3027  05A6                     	goto	l1309
  3028  05A6  2D9F               u830:
  3029  05A7                     	
  3030                           l1311:	
  3031  05A7                     	btfsc	(148)^080h,(2)&7	;volatile
  3032  05A7  1914               	goto	u841
  3033  05A8  2DAA               	goto	u840
  3034  05A9  2DAB               u841:
  3035  05AA                     	goto	l1309
  3036  05AA  2D9F               u840:
  3037  05AB                     	goto	l1313
  3038  05AB  2DAC               	
  3039                           l269:	
  3040  05AC                     	
  3041                           l1313:	
  3042  05AC                     	fcall	__LCD_build_byte
  3043  05AC  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3044  05B1  1283               	bcf	status, 6	;RP1=0, select bank0
  3045  05B2  1303               	movwf	(19)	;volatile
  3046  05B3  0093               	goto	l270
  3047  05B4  2DB5               	
  3048                           l271:	
  3049  05B5                     	
  3050                           l270:	
  3051  05B5                     	bsf	status, 5	;RP0=1, select bank1
  3052  05B5  1683               	bcf	status, 6	;RP1=0, select bank1
  3053  05B6  1303               	btfsc	(148)^080h,0	;volatile
  3054  05B7  1814               	goto	u851
  3055  05B8  2DBA               	goto	u850
  3056  05B9  2DBB               u851:
  3057  05BA                     	goto	l270
  3058  05BA  2DB5               u850:
  3059  05BB                     	goto	l1315
  3060  05BB  2DBC               	
  3061                           l272:	
  3062  05BC                     	line	210
  3063                           	
  3064                           l1315:	
  3065  05BC                     ;LCD_I2C.c: 210:     pin_E = 0;
  3066                           	bcf	status, 5	;RP0=0, select bank0
  3067  05BC  1283               	bcf	status, 6	;RP1=0, select bank0
  3068  05BD  1303               	clrf	(_pin_E)
  3069  05BE  01A7               	line	211
  3070                           ;LCD_I2C.c: 211:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04)); SSPBUF=_LCD_build_byt
                                 e(); while( SSPSTATbits.BF );
  3071                           	goto	l1317
  3072  05BF  2DC1               	
  3073                           l274:	
  3074  05C0                     	goto	l1317
  3075  05C0  2DC1               	
  3076                           l273:	
  3077  05C1                     	
  3078                           l1317:	
  3079  05C1                     	bsf	status, 5	;RP0=1, select bank1
  3080  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  3081  05C2  1303               	movf	(145)^080h,w	;volatile
  3082  05C3  0811               	andlw	01Fh
  3083  05C4  391F               	btfss	status,2
  3084  05C5  1D03               	goto	u861
  3085  05C6  2DC8               	goto	u860
  3086  05C7  2DC9               u861:
  3087  05C8                     	goto	l1317
  3088  05C8  2DC1               u860:
  3089  05C9                     	
  3090                           l1319:	
  3091  05C9                     	btfsc	(148)^080h,(2)&7	;volatile
  3092  05C9  1914               	goto	u871
  3093  05CA  2DCC               	goto	u870
  3094  05CB  2DCD               u871:
  3095  05CC                     	goto	l1317
  3096  05CC  2DC1               u870:
  3097  05CD                     	goto	l1321
  3098  05CD  2DCE               	
  3099                           l275:	
  3100  05CE                     	
  3101                           l1321:	
  3102  05CE                     	fcall	__LCD_build_byte
  3103  05CE  120A  118A  24F4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3104  05D3  1283               	bcf	status, 6	;RP1=0, select bank0
  3105  05D4  1303               	movwf	(19)	;volatile
  3106  05D5  0093               	goto	l276
  3107  05D6  2DD7               	
  3108                           l277:	
  3109  05D7                     	
  3110                           l276:	
  3111  05D7                     	bsf	status, 5	;RP0=1, select bank1
  3112  05D7  1683               	bcf	status, 6	;RP1=0, select bank1
  3113  05D8  1303               	btfsc	(148)^080h,0	;volatile
  3114  05D9  1814               	goto	u881
  3115  05DA  2DDC               	goto	u880
  3116  05DB  2DDD               u881:
  3117  05DC                     	goto	l276
  3118  05DC  2DD7               u880:
  3119  05DD                     	goto	l279
  3120  05DD  2DDE               	
  3121                           l278:	
  3122  05DE                     	line	212
  3123                           	
  3124                           l279:	
  3125  05DE                     	return
  3126  05DE  0008               	opt stack 0
  3127                           GLOBAL	__end_of__LCD_write_lower_nibble
  3128                           	__end_of__LCD_write_lower_nibble:
  3129  05DF                     	signat	__LCD_write_lower_nibble,4217
  3130                           	global	__LCD_build_byte
  3131                           
  3132 ;; *************** function __LCD_build_byte *****************
  3133 ;; Defined at:
  3134 ;;		line 214 in file "LCD_I2C.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  ret             1    2[COMMON] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      unsigned char 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       0       0       0       0
  3149 ;;      Locals:         1       0       0       0       0
  3150 ;;      Temps:          2       0       0       0       0
  3151 ;;      Totals:         3       0       0       0       0
  3152 ;;Total ram usage:        3 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		__LCD_write_upper_nibble
  3158 ;;		__LCD_write_lower_nibble
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3162                           	line	214
  3163                           global __ptext8
  3164                           __ptext8:	;psect for function __LCD_build_byte
  3165  04F4                     psect	text8
  3166                           	file	"LCD_I2C.c"
  3167                           	line	214
  3168                           	global	__size_of__LCD_build_byte
  3169                           	__size_of__LCD_build_byte	equ	__end_of__LCD_build_byte-__LCD_build_byte
  3170  005E                     	
  3171                           __LCD_build_byte:	
  3172  04F4                     ;incstack = 0
  3173                           	opt	stack 5
  3174                           ; Regs used in __LCD_build_byte: [wreg+status,2+status,0]
  3175                           	line	216
  3176                           	
  3177                           l1213:	
  3178  04F4                     ;LCD_I2C.c: 216:     unsigned char ret = 0x00;
  3179                           	clrf	(__LCD_build_byte@ret)
  3180  04F4  01F2               	line	218
  3181                           	
  3182                           l1215:	
  3183  04F5                     ;LCD_I2C.c: 218:     ret |= pin_E << 2;
  3184                           	bcf	status, 5	;RP0=0, select bank0
  3185  04F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3186  04F6  1303               	movf	(_pin_E),w
  3187  04F7  0827               	movwf	(??__LCD_build_byte+0)+0
  3188  04F8  00F0               	movlw	(02h)-1
  3189  04F9  3001               u575:
  3190  04FA                     	clrc
  3191  04FA  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3192  04FB  0DF0               	addlw	-1
  3193  04FC  3EFF               	skipz
  3194  04FD  1D03               	goto	u575
  3195  04FE  2CFA               	clrc
  3196  04FF  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3197  0500  0D70               	movwf	(??__LCD_build_byte+1)+0
  3198  0501  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3199  0502  0871               	iorwf	(__LCD_build_byte@ret),f
  3200  0503  04F2               	line	219
  3201                           	
  3202                           l1217:	
  3203  0504                     ;LCD_I2C.c: 219:     ret |= pin_RW << 1;
  3204                           	movf	(_pin_RW),w
  3205  0504  0826               	movwf	(??__LCD_build_byte+0)+0
  3206  0505  00F0               	addwf	(??__LCD_build_byte+0)+0,w
  3207  0506  0770               	movwf	(??__LCD_build_byte+1)+0
  3208  0507  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3209  0508  0871               	iorwf	(__LCD_build_byte@ret),f
  3210  0509  04F2               	line	220
  3211                           	
  3212                           l1219:	
  3213  050A                     ;LCD_I2C.c: 220:     ret |= pin_RS << 0;
  3214                           	movf	(_pin_RS),w
  3215  050A  0825               	movwf	(??__LCD_build_byte+0)+0
  3216  050B  00F0               	movf	(??__LCD_build_byte+0)+0,w
  3217  050C  0870               	iorwf	(__LCD_build_byte@ret),f
  3218  050D  04F2               	line	221
  3219                           	
  3220                           l1221:	
  3221  050E                     ;LCD_I2C.c: 221:     ret |= pin_D4 << 4;
  3222                           	movf	(_pin_D4),w
  3223  050E  0824               	movwf	(??__LCD_build_byte+0)+0
  3224  050F  00F0               	movlw	(04h)-1
  3225  0510  3003               u585:
  3226  0511                     	clrc
  3227  0511  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3228  0512  0DF0               	addlw	-1
  3229  0513  3EFF               	skipz
  3230  0514  1D03               	goto	u585
  3231  0515  2D11               	clrc
  3232  0516  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3233  0517  0D70               	movwf	(??__LCD_build_byte+1)+0
  3234  0518  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3235  0519  0871               	iorwf	(__LCD_build_byte@ret),f
  3236  051A  04F2               	line	222
  3237                           	
  3238                           l1223:	
  3239  051B                     ;LCD_I2C.c: 222:     ret |= pin_D5 << 5;
  3240                           	movf	(_pin_D5),w
  3241  051B  0823               	movwf	(??__LCD_build_byte+0)+0
  3242  051C  00F0               	movlw	(05h)-1
  3243  051D  3004               u595:
  3244  051E                     	clrc
  3245  051E  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3246  051F  0DF0               	addlw	-1
  3247  0520  3EFF               	skipz
  3248  0521  1D03               	goto	u595
  3249  0522  2D1E               	clrc
  3250  0523  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3251  0524  0D70               	movwf	(??__LCD_build_byte+1)+0
  3252  0525  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3253  0526  0871               	iorwf	(__LCD_build_byte@ret),f
  3254  0527  04F2               	line	223
  3255                           	
  3256                           l1225:	
  3257  0528                     ;LCD_I2C.c: 223:     ret |= pin_D6 << 6;
  3258                           	movf	(_pin_D6),w
  3259  0528  0822               	movwf	(??__LCD_build_byte+0)+0
  3260  0529  00F0               	movlw	(06h)-1
  3261  052A  3005               u605:
  3262  052B                     	clrc
  3263  052B  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3264  052C  0DF0               	addlw	-1
  3265  052D  3EFF               	skipz
  3266  052E  1D03               	goto	u605
  3267  052F  2D2B               	clrc
  3268  0530  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3269  0531  0D70               	movwf	(??__LCD_build_byte+1)+0
  3270  0532  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3271  0533  0871               	iorwf	(__LCD_build_byte@ret),f
  3272  0534  04F2               	line	224
  3273                           	
  3274                           l1227:	
  3275  0535                     ;LCD_I2C.c: 224:     ret |= pin_D7 << 7;
  3276                           	movf	(_pin_D7),w
  3277  0535  0821               	movwf	(??__LCD_build_byte+0)+0
  3278  0536  00F0               	movlw	(07h)-1
  3279  0537  3006               u615:
  3280  0538                     	clrc
  3281  0538  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3282  0539  0DF0               	addlw	-1
  3283  053A  3EFF               	skipz
  3284  053B  1D03               	goto	u615
  3285  053C  2D38               	clrc
  3286  053D  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3287  053E  0D70               	movwf	(??__LCD_build_byte+1)+0
  3288  053F  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3289  0540  0871               	iorwf	(__LCD_build_byte@ret),f
  3290  0541  04F2               	line	225
  3291                           	
  3292                           l1229:	
  3293  0542                     ;LCD_I2C.c: 225:     ret |= pin_BL << 3;
  3294                           	movf	(_pin_BL),w
  3295  0542  0820               	movwf	(??__LCD_build_byte+0)+0
  3296  0543  00F0               	movlw	(03h)-1
  3297  0544  3002               u625:
  3298  0545                     	clrc
  3299  0545  1003               	rlf	(??__LCD_build_byte+0)+0,f
  3300  0546  0DF0               	addlw	-1
  3301  0547  3EFF               	skipz
  3302  0548  1D03               	goto	u625
  3303  0549  2D45               	clrc
  3304  054A  1003               	rlf	(??__LCD_build_byte+0)+0,w
  3305  054B  0D70               	movwf	(??__LCD_build_byte+1)+0
  3306  054C  00F1               	movf	(??__LCD_build_byte+1)+0,w
  3307  054D  0871               	iorwf	(__LCD_build_byte@ret),f
  3308  054E  04F2               	line	227
  3309                           	
  3310                           l1231:	
  3311  054F                     ;LCD_I2C.c: 227:     return ret;
  3312                           	movf	(__LCD_build_byte@ret),w
  3313  054F  0872               	goto	l282
  3314  0550  2D51               	
  3315                           l1233:	
  3316  0551                     	line	228
  3317                           	
  3318                           l282:	
  3319  0551                     	return
  3320  0551  0008               	opt stack 0
  3321                           GLOBAL	__end_of__LCD_build_byte
  3322                           	__end_of__LCD_build_byte:
  3323  0552                     	signat	__LCD_build_byte,89
  3324                           	global	_LCD_close
  3325                           
  3326 ;; *************** function _LCD_close *****************
  3327 ;; Defined at:
  3328 ;;		line 26 in file "LCD_I2C.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;		None
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;		None
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/0
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3342 ;;      Params:         0       0       0       0       0
  3343 ;;      Locals:         0       0       0       0       0
  3344 ;;      Temps:          1       0       0       0       0
  3345 ;;      Totals:         1       0       0       0       0
  3346 ;;Total ram usage:        1 bytes
  3347 ;; Hardware stack levels used:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_main
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3355                           	line	26
  3356                           global __ptext9
  3357                           __ptext9:	;psect for function _LCD_close
  3358  03F2                     psect	text9
  3359                           	file	"LCD_I2C.c"
  3360                           	line	26
  3361                           	global	__size_of_LCD_close
  3362                           	__size_of_LCD_close	equ	__end_of_LCD_close-_LCD_close
  3363  0016                     	
  3364                           _LCD_close:	
  3365  03F2                     ;incstack = 0
  3366                           	opt	stack 7
  3367                           ; Regs used in _LCD_close: [wreg+status,2+status,0]
  3368                           	line	28
  3369                           	
  3370                           l1063:	
  3371  03F2                     ;LCD_I2C.c: 28:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3372                           	goto	l1065
  3373  03F2  2BF4               	
  3374                           l184:	
  3375  03F3                     	goto	l1065
  3376  03F3  2BF4               	
  3377                           l183:	
  3378  03F4                     	
  3379                           l1065:	
  3380  03F4                     	bsf	status, 5	;RP0=1, select bank1
  3381  03F4  1683               	bcf	status, 6	;RP1=0, select bank1
  3382  03F5  1303               	movf	(145)^080h,w	;volatile
  3383  03F6  0811               	andlw	01Fh
  3384  03F7  391F               	btfss	status,2
  3385  03F8  1D03               	goto	u461
  3386  03F9  2BFB               	goto	u460
  3387  03FA  2BFC               u461:
  3388  03FB                     	goto	l1065
  3389  03FB  2BF4               u460:
  3390  03FC                     	
  3391                           l1067:	
  3392  03FC                     	btfsc	(148)^080h,(2)&7	;volatile
  3393  03FC  1914               	goto	u471
  3394  03FD  2BFF               	goto	u470
  3395  03FE  2C00               u471:
  3396  03FF                     	goto	l1065
  3397  03FF  2BF4               u470:
  3398  0400                     	goto	l1069
  3399  0400  2C01               	
  3400                           l185:	
  3401  0401                     	line	29
  3402                           	
  3403                           l1069:	
  3404  0401                     ;LCD_I2C.c: 29:     SSPCON &= 0xdf;
  3405                           	movlw	low(0DFh)
  3406  0401  30DF               	movwf	(??_LCD_close+0)+0
  3407  0402  00F0               	movf	(??_LCD_close+0)+0,w
  3408  0403  0870               	bcf	status, 5	;RP0=0, select bank0
  3409  0404  1283               	bcf	status, 6	;RP1=0, select bank0
  3410  0405  1303               	andwf	(20),f	;volatile
  3411  0406  0594               	line	30
  3412                           	
  3413                           l186:	
  3414  0407                     	return
  3415  0407  0008               	opt stack 0
  3416                           GLOBAL	__end_of_LCD_close
  3417                           	__end_of_LCD_close:
  3418  0408                     	signat	_LCD_close,89
  3419                           global	___latbits
  3420                           ___latbits	equ	2
  3421  0002                     	global	btemp
  3422                           	btemp set 07Eh
  3423  007E                     
  3424                           	DABS	1,126,2	;btemp
  3425                           	global	wtemp0
  3426                           	wtemp0 set btemp+0
  3427  007E                     	end


Data Sizes:
    Strings     17
    Constant    0
    Data        1
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_write_string@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[2]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_goto
    _LCD_write_string->__LCD_write_lower_nibble
    _LCD_write_string->__LCD_write_upper_nibble
    _LCD_init->_LCD_write_byte
    _LCD_goto->_LCD_write_byte
    _LCD_write_byte->__LCD_write_lower_nibble
    _LCD_write_byte->__LCD_write_upper_nibble
    __LCD_write_upper_nibble->__LCD_build_byte
    __LCD_write_lower_nibble->__LCD_build_byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3265
                                             12 COMMON     2     2      0
                                              0 BANK0      3     3      0
                          _LCD_close
                           _LCD_goto
                           _LCD_init
                           _LCD_open
                   _LCD_write_string
 ---------------------------------------------------------------------------------
 (1) _LCD_write_string                                     2     2      0     371
                                              4 COMMON     2     2      0
            __LCD_write_lower_nibble
            __LCD_write_upper_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0    1216
                                              7 COMMON     2     2      0
                           _LCD_open
                     _LCD_write_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_open                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             5     4      1    1516
                                              7 COMMON     5     4      1
                     _LCD_write_byte
 ---------------------------------------------------------------------------------
 (2) _LCD_write_byte                                       3     2      1    1216
                                              4 COMMON     3     2      1
            __LCD_write_lower_nibble
            __LCD_write_upper_nibble
 ---------------------------------------------------------------------------------
 (2) __LCD_write_upper_nibble                              1     1      0     119
                                              3 COMMON     1     1      0
                    __LCD_build_byte
 ---------------------------------------------------------------------------------
 (2) __LCD_write_lower_nibble                              1     1      0     119
                                              3 COMMON     1     1      0
                    __LCD_build_byte
 ---------------------------------------------------------------------------------
 (3) __LCD_build_byte                                      3     3      0      31
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_close                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_close
   _LCD_goto
     _LCD_write_byte
       __LCD_write_lower_nibble
         __LCD_build_byte
       __LCD_write_upper_nibble
         __LCD_build_byte
   _LCD_init
     _LCD_open
     _LCD_write_byte
       __LCD_write_lower_nibble
         __LCD_build_byte
       __LCD_write_upper_nibble
         __LCD_build_byte
   _LCD_open
   _LCD_write_string
     __LCD_write_lower_nibble
       __LCD_build_byte
     __LCD_write_upper_nibble
       __LCD_build_byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       C       5       15.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1A      12        0.0%
ABS                  0      0      1A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jul 19 02:18:59 2018

                               pc 0002                       __CFG_CP$OFF 0000                       _SSPSTATbits 0094  
           LCD_write_byte@address 0076                                l60 0793                                l61 07E8  
                              l62 07E9                                l63 07EA                                l64 07EB  
                              l65 07EB                                l57 0716                                l58 074C  
                              l59 0782         ??__LCD_write_lower_nibble 0073                                fsr 0004  
                             l200 046E                               l201 0473                               l202 049C  
                             l211 0413                               l212 0416                               l213 0428  
                             l205 0452                               l230 0606                               l206 0435  
                             l231 0607                               l207 045F                               l240 0639  
                             l232 060A                               l224 05E9                               l160 049F  
                             l208 045F                               l241 0642                               l233 0609  
                             l225 05ED                               l161 049E                               l250 066B  
                             l242 0642                               l234 0617                               l226 05F4  
                             l170 04CF                               l162 04AC                               l243 0649  
                             l235 0620                               l227 05F6                               l171 04DB  
                             l163 04B4                               l260 057A                               l244 064E  
                             l236 0620                               l228 05FD                               l180 04F3  
                             l172 04E0                               l164 04B3                               l261 057D  
                             l253 055C                               l245 064D                               l237 0626  
                             l229 05FF                               l173 04E0                               l165 04C0  
                             l270 05B5                               l262 057C                               l254 0560  
                             l246 065B                               l238 062C                               l174 04E6  
                             l166 04C3                               l183 03F4                               l271 05B5  
                             l263 058A                               l255 0567                               l247 0664  
                             l239 062B                               l175 04E9                               l167 04C2  
                             l184 03F3                               l272 05BC                               l264 0593  
                             l256 0569                               l248 0664                               l176 04E9  
                             l168 04CE                               l185 0401                               l273 05C1  
                             l265 0593                               l257 0570                               l249 066B  
                             l169 04D0                               l186 0407                               l282 0551  
                             l274 05C0                               l266 0599                               l258 0572  
                             l178 04F2                               l275 05CE                               l267 059F  
                             l259 0579                               l195 0476                               l179 04F3  
                             l276 05D7                               l268 059E                               l196 0462  
                             l277 05D7                               l269 05AC                               l197 048C  
                             l189 070F                               l278 05DE                               l198 0464  
                             l279 05DE                               l199 0469                               l971 04AC  
                             l981 04D0                               l973 04B4                               l965 049D  
                             l983 04D6                               l975 04BC                               l967 049F  
                             l985 04DB                               l977 04C3                               l969 04A7  
                             l987 04ED                               l979 04C9                               u400 04DA  
                             u401 04D9                               u410 04E6                               u330 04A7  
                             u411 04E5                               u331 04A6                               u420 04ED  
                             u340 04AB                               u421 04EC                               u341 04AA  
                             u430 04F1                               u350 04BC                               u431 04F0  
                             u351 04BB                               u360 04C0                               _PEN 048A  
                             u361 04BF                               u370 04C9                      __CFG_CPD$OFF 0000  
                             u371 04C8                               u460 03FC                               u700 0634  
                             u380 04CD                               u461 03FB                               u605 052B  
                             u701 0633                               u381 04CC                               u470 0400  
                             u710 0638                               u630 05E4                               u390 04D6  
                             u471 03FF                               u615 0538                               u711 0637  
                             u631 05E3                               u391 04D5                               u800 0585  
                             u720 0648                               u640 05F1                               u625 0545  
                             u801 0584                               u721 0647                               u641 05F0  
                             u810 0589                               u730 0656                               u650 05FA  
                             u811 0588                               u731 0655                               u651 05F9  
                             u820 0599                               u740 065A                               u660 0603  
                             u900 045E                               _SEN 0488                               u821 0598  
                             u741 0659                               u661 0602                               u901 045D  
                             u830 05A7                               u750 066A                               u670 0612  
                             u910 0721                               u575 04FA                               u831 05A6  
                             u751 0669                               u671 0611                               u911 0720  
                             u840 05AB                               u760 0557                               u680 0616  
                             u920 0757                               u585 0511                               u841 05AA  
                             u761 0556                               u681 0615                               u921 0756  
                             u850 05BB                               u770 0564                               u690 0626  
                             u595 051E                               u851 05BA                               u771 0563  
                             u691 0625                               u860 05C9                               u780 056D  
                             u861 05C8                               u781 056C                               u870 05CD  
                             u790 0576                               u871 05CC                               u791 0575  
                             u880 05DD                               u881 05DC                               u890 040E  
                             u891 040D                               u957 072F                               u967 0745  
                             u977 0765                               u987 077B                               u997 07B8  
                             fsr0 0004                      __CFG_FOSC$XT 0000                      __CFG_LVP$OFF 0000  
                            l1221 050E                              l1213 04F4                              l1301 0579  
                            l1063 03F2                              l1231 054F                              l1223 051B  
                            l1215 04F5                              l1311 05A7                              l1303 057D  
                            l1065 03F4                              l1233 0551                              l1225 0528  
                            l1217 0504                              l1321 05CE                              l1313 05AC  
                            l1305 0585                              l1241 05ED                              l1401 0715  
                            l1067 03FC                              l1227 0535                              l1219 050A  
                            l1315 05BC                              l1307 058A                              l1251 05FD  
                            l1243 05F1                              l1235 05E0                              l1331 041C  
                            l1323 0409                              l1411 0757                              l1403 071C  
                            l1069 0401                              l1229 0542                              l1317 05C1  
                            l1309 059F                              l1261 0612                              l1253 05FF  
                            l1245 05F4                              l1237 05E4                              l1333 0422  
                            l1325 040E                              l1341 0695                              l1421 078A  
                            l1413 0782                              l1405 0721                              l1319 05C9  
                            l1271 0649                              l1263 0617                              l1255 0603  
                            l1247 05F6                              l1239 05E9                              l1327 0413  
                            l1351 06D3                              l1343 069F                              l1335 066C  
                            l1431 07A5                              l1423 078B                              l1415 0785  
                            l1407 074C                              l1281 0557                              l1273 064E  
                            l1265 062C                              l1257 0606                              l1249 05FA  
                            l1329 0418                              l1361 0461                              l1353 06E5  
                            l1345 06B1                              l1337 067B                              l1441 07C6  
                            l1433 07AB                              l1425 0793                              l1417 0786  
                            l1409 0752                              l1291 0569                              l1283 055C  
                            l1275 0656                              l1267 0634                              l1259 060A  
                            l1371 0473                              l1363 0462                              l1355 06ED  
                            l1347 06B9                              l1339 0683                              l1443 07D4  
                            l1435 07B0                              l1427 0798                              l1419 0787  
                            l1293 056D                              l1285 0560                              l1277 065B  
                            l1269 0639                              l1373 0475                              l1365 0464  
                            l1357 06FD                              l1349 06CB                              l1445 07D5  
                            l1437 07BE                              l1429 079D                              l1295 0570  
                            l1287 0564                              l1279 0553                              l1367 0469  
                            l1375 0476                              l1359 0707                              l1391 0435  
                            l1447 07D9                              l1439 07C4                              l1297 0572  
                            l1289 0567                              l1369 046E                              l1377 048C  
                            l1393 044D                              l1385 042A                              l1299 0576  
                            l1379 0491                              l1395 0452                              l1387 042E  
                            l1493 047E                              l1389 0430                              l1397 0710  
                            l1399 0714                              STR_1 0009                              STR_2 0018  
                            u1007 07CE                              u1017 07E1                              u1107 070B  
                            u1027 067F                              u1037 0691                              u1047 06A3  
                            u1057 06B5                              u1067 06C7                              u1077 06D7  
                            u1087 06E9                              u1097 06F9                              _RCEN 048B  
                            _RSEN 0489                      __CFG_WRT$OFF 0000                              _main 0710  
                            btemp 007E                              start 0000                __size_of_LCD_close 0016  
                __end_of_LCD_init 0710                  __end_of_LCD_goto 049D                  __end_of_LCD_open 04F4  
                           ?_main 0070                             _ACKEN 048C                             _ACKDT 048D  
                   __CFG_WDTE$OFF 0000                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             _pin_E 0027                             main@m 007C  
                  __CFG_BOREN$OFF 0000                             pclath 000A                   LCD_goto@address 007B  
                           status 0003                             wtemp0 007E               __LCD_build_byte@ret 0072  
                 __initialization 07EE                      __end_of_main 07EE                 ?_LCD_write_string 0070  
       __LCD_write_lower_nibble@l 0073                            ??_main 0028           __LCD_write_upper_nibble 05DF  
              ??_LCD_write_string 0074                 __end_of_LCD_close 0408                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013                    __CFG_PWRTE$OFF 0000         __LCD_write_upper_nibble@u 0073  
         __size_of_LCD_write_byte 0021                            _pin_D4 0024                            _pin_D5 0023  
                          _pin_D6 0022                            _pin_D7 0021                            _pin_BL 0020  
                          _pin_RS 0025                            _pin_RW 0026                     main@portValue 007D  
         __end_of__initialization 07FC                         ?_LCD_init 0070                         ?_LCD_goto 0077  
                       ?_LCD_open 0070                    __pcstackCOMMON 0070                      __pidataBANK0 03F1  
       ??__LCD_write_upper_nibble 0073                         LCD_goto@x 007A                         LCD_goto@y 0077  
                  _OPTION_REGbits 0081          __size_of__LCD_build_byte 005E                        __pbssBANK0 0020  
                      ??_LCD_init 0077                        ??_LCD_goto 0078                        ??_LCD_open 0070  
                      __pmaintext 0710                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0003          ?__LCD_write_lower_nibble 0070                    _LCD_write_byte 0408  
                         __ptext1 0429                           __ptext2 066C                           __ptext3 049D  
                         __ptext4 0460                           __ptext5 0408                           __ptext6 05DF  
                         __ptext7 0552                           __ptext8 04F4                           __ptext9 03F2  
            end_of_initialization 07FC                         _LCD_close 03F2         __size_of_LCD_write_string 0037  
               ??__LCD_build_byte 0070            __end_of_LCD_write_byte 0429                         _PORTBbits 0006  
                      ?_LCD_close 0070   __end_of__LCD_write_lower_nibble 05DF                 __size_of_LCD_init 00A4  
               __size_of_LCD_goto 003D                 __size_of_LCD_open 0057                   ?_LCD_write_byte 0074  
             start_initialization 07EE                       __pdataBANK0 002B                         ___latbits 0002  
                   __pcstackBANK0 0028                       ??_LCD_close 0070               LCD_write_string@str 0075  
                _LCD_write_string 0429          ?__LCD_write_upper_nibble 0070                         __pstrings 0003  
                 __LCD_build_byte 04F4  __size_of__LCD_write_lower_nibble 008D                   LCD_write_byte@n 0074  
                        _LCD_init 066C                          _LCD_goto 0460                          _LCD_open 049D  
                     __stringbase 0008   __end_of__LCD_write_upper_nibble 066C                  ??_LCD_write_byte 0075  
         __end_of__LCD_build_byte 0552                __end_of__stringtab 0009                     __size_of_main 00DE  
                   _LCD_BL_Status 002B          __end_of_LCD_write_string 0460           __LCD_write_lower_nibble 0552  
                       stringcode 0003                  ?__LCD_build_byte 0070  __size_of__LCD_write_upper_nibble 008D  
                        stringdir 0003                          stringtab 0003                       _SSPCON2bits 0091  
